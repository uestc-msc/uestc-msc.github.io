<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UESTC-MSC</title>
  
  <subtitle>欢迎来到电子科大微软学生俱乐部</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://uestc-msc.github.io/"/>
  <updated>2021-02-24T10:39:20.975Z</updated>
  <id>https://uestc-msc.github.io/</id>
  
  <author>
    <name>UESTC-MSC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MSC 每周两题：上周题解 &amp; 字符串</title>
    <link href="https://uestc-msc.github.io/2020/12/25/2020-programming-of-the-week-5-string/"/>
    <id>https://uestc-msc.github.io/2020/12/25/2020-programming-of-the-week-5-string/</id>
    <published>2020-12-25T03:33:02.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p>数组部分的题解！</p><a id="more"></a><h2 id="系列目录"><a href="#系列目录" class="headerlink" title="系列目录"></a>系列目录</h2><ol><li><a href="/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/">MSC 每周两题：前言 &amp; 顺序结构</a></li><li><a href="/2020/11/20/2020-programming-of-the-week-2-branch/">MSC 每周两题：上周题解 &amp; 分支结构</a></li><li><a href="/2020/11/27/2020-programming-of-the-week-3-loop/">MSC 每周两题：上周题解 &amp; 循环结构</a></li><li><a href="/2020/12/15/2020-programming-of-the-week-4-array/">MSC 每周两题：上周题解 &amp; 数组</a></li><li><a href="/2020/12/25/2020-programming-of-the-week-5-string/">MSC 每周两题：上周题解 &amp; 字符串</a></li><li>MSC 每周两题：上周题解 &amp; 函数和结构体</li><li>MSC 每周两题：上周题解 &amp; 后记</li></ol><h2 id="P5728-【深基5-例5】旗鼓相当的对手"><a href="#P5728-【深基5-例5】旗鼓相当的对手" class="headerlink" title="P5728 【深基5.例5】旗鼓相当的对手"></a>P5728 【深基5.例5】旗鼓相当的对手</h2><p><a href="https://www.luogu.com.cn/problem/P5728" target="_blank" rel="noopener">P5728 【深基5.例5】旗鼓相当的对手</a> <del>一看就是老炉石玩家了</del></p><p>这题比较基础，可以练习一下数组的语法。就不多讲了。</p><p>具体的代码上，可以使用二维数组存所有的成绩，也可以使用三个一维数组分别存语文、数学和英语成绩（也可以再用第四个一位数组存总成绩）。</p><p>C++ 采用四个一维数组进行实现：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> chinese[<span class="number">1000</span>], math[<span class="number">1000</span>], english[<span class="number">1000</span>], total[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;chinese[i], &amp;math[i], &amp;english[i]);</span><br><span class="line">        total[i] = chinese[i] + math[i] + english[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">abs</span>(chinese[i] - chinese[j]) &lt;= <span class="number">5</span> </span><br><span class="line">                &amp;&amp; <span class="built_in">abs</span>(math[i] - math[j]) &lt;= <span class="number">5</span> </span><br><span class="line">                &amp;&amp; <span class="built_in">abs</span>(english[i] - english[j]) &lt;= <span class="number">5</span> </span><br><span class="line">                &amp;&amp; <span class="built_in">abs</span>(total[i] - total[j]) &lt;= <span class="number">10</span>)</span><br><span class="line">                ans++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Python 使用二维数组进行实现：</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">n = int(input())</span><br><span class="line">scores = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    score = list(map(int, input().split()))</span><br><span class="line">    scores.append(score)</span><br><span class="line"></span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, n):</span><br><span class="line">        <span class="keyword">if</span> abs(scores[i][<span class="number">0</span>] - scores[j][<span class="number">0</span>]) &lt;= <span class="number">5</span> \</span><br><span class="line">        <span class="keyword">and</span> abs(scores[i][<span class="number">1</span>] - scores[j][<span class="number">1</span>]) &lt;= <span class="number">5</span> \</span><br><span class="line">        <span class="keyword">and</span> abs(scores[i][<span class="number">2</span>] - scores[j][<span class="number">2</span>]) &lt;= <span class="number">5</span> \</span><br><span class="line">        <span class="keyword">and</span> abs(sum(scores[i]) - sum(scores[j])) &lt;= <span class="number">10</span>:</span><br><span class="line">            ans += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(ans)</span><br></pre></td></tr></tbody></table></figure><p>这次还新加入了 Go 语言，使用三个一维数组实现：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">abs</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> {</span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span> {</span><br><span class="line"><span class="keyword">return</span> -x</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  {</span><br><span class="line">n, ans := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">fmt.Scanln(&amp;n)</span><br><span class="line"></span><br><span class="line">chinese, math, english := <span class="built_in">make</span>([]<span class="keyword">int</span>, n), <span class="built_in">make</span>([]<span class="keyword">int</span>, n), <span class="built_in">make</span>([]<span class="keyword">int</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ {</span><br><span class="line">fmt.Scanln(&amp;chinese[i], &amp;math[i], &amp;english[i])</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ {</span><br><span class="line"><span class="keyword">for</span> j := i+<span class="number">1</span>; j &lt; n; j++ {</span><br><span class="line"><span class="keyword">if</span> abs(chinese[i] - chinese[j]) &lt;= <span class="number">5</span> &amp;&amp;</span><br><span class="line">abs(math[i] - math[j]) &lt;= <span class="number">5</span> &amp;&amp;</span><br><span class="line">abs(english[i] - english[j]) &lt;= <span class="number">5</span> &amp;&amp;</span><br><span class="line">abs(chinese[i] + math[i] + english[i] - chinese[j] - math[j] - english[j]) &lt;= <span class="number">10</span> {</span><br><span class="line">ans++</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">fmt.Println(ans)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="P1789-【Mc生存】插火把"><a href="#P1789-【Mc生存】插火把" class="headerlink" title="P1789 【Mc生存】插火把"></a>P1789 【Mc生存】插火把</h2><p><a href="https://www.luogu.com.cn/problem/P1789" target="_blank" rel="noopener">P1789 【Mc生存】插火把</a> <del>一看就是老 MC 玩家了</del></p><p>也是非常基础的一个题，按照题目说的，使用一个二维数组模拟地图。先假设每个格子都可能出现怪物 (<code>true</code>)，然后对每个火把和萤石，将其照亮的区域标记为 <code>false</code>，最后数一遍地图上还有多少个 <code>true</code> 即可。</p><p>处理萤石比较简单，因为萤石照亮的范围是：</p><script type="math/tex; mode=display">\left\{\begin{matrix}x-2 \leq x_0 \leq x+2 \\y-2 \leq y_0 \leq y+2\end{matrix}\right.</script><p>但是火把的范围比较麻烦，它是一个菱形。我们可以这样定义：设 $dx = x-x_0, dy = y-y_0$，则有</p><script type="math/tex; mode=display">|dx|+|dy| \leq 2</script><p>最后还需要注意，可能出现火把（萤石）照到地图以外的地方，所以记得判定是否越界。</p><p>C 语言：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">bool</span> monster[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> n, fire, stone;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;fire, &amp;stone);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            monster[i][j] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fire; i++) <span class="comment">// 统计火把</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x0, y0;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x0, &amp;y0);</span><br><span class="line">        x0--, y0--; <span class="comment">// 我们定义的地图数组下标从 0 开始，题目从 1 开始，所以要把题目的输入减 1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> dx = <span class="number">0</span>; dx &lt;= <span class="number">2</span>; dx++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> dy = <span class="number">0</span>; dy &lt;= <span class="number">2</span> - dx; dy++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (x0 - dx &gt;= <span class="number">0</span> &amp;&amp; x0 - dx &lt; n &amp;&amp; y0 - dy &gt;= <span class="number">0</span> &amp;&amp; y0 - dy &lt; n) <span class="comment">// 判定越界</span></span><br><span class="line">                    monster[x0 - dx][y0 - dy] = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (x0 + dx &gt;= <span class="number">0</span> &amp;&amp; x0 + dx &lt; n &amp;&amp; y0 - dy &gt;= <span class="number">0</span> &amp;&amp; y0 - dy &lt; n) <span class="comment">// 判定越界</span></span><br><span class="line">                    monster[x0 + dx][y0 - dy] = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (x0 - dx &gt;= <span class="number">0</span> &amp;&amp; x0 - dx &lt; n &amp;&amp; y0 + dy &gt;= <span class="number">0</span> &amp;&amp; y0 + dy &lt; n) <span class="comment">// 判定越界</span></span><br><span class="line">                    monster[x0 - dx][y0 + dy] = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (x0 + dx &gt;= <span class="number">0</span> &amp;&amp; x0 + dx &lt; n &amp;&amp; y0 + dy &gt;= <span class="number">0</span> &amp;&amp; y0 + dy &lt; n) <span class="comment">// 判定越界</span></span><br><span class="line">                    monster[x0 + dx][y0 + dy] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stone; i++) <span class="comment">// 统计萤石</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x0, y0;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x0, &amp;y0);</span><br><span class="line">        x0--, y0--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = x0 - <span class="number">2</span>; x &lt;= x0 + <span class="number">2</span>; x++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= n) <span class="comment">// 判定越界</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = y0 - <span class="number">2</span>; y &lt;= y0 + <span class="number">2</span>; y++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (y &lt; <span class="number">0</span> || y &gt;= n)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                monster[x][y] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>; <span class="comment">// 统计怪物总数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; n; x++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; n; y++)</span><br><span class="line">            <span class="keyword">if</span> (monster[x][y])</span><br><span class="line">                ans++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>注意到 21 行至 28 行都是结构重复的代码，只是处理的变量有点不同。因此我们可以把重复的一个小过程独立为<strong>函数</strong>（但这是下周的内容，所以不做要求）。同时我们还需要将 <code>monster[][]</code> 和 <code>n</code> 的定义放到 main 函数以外（相关知识：函数作用域）。</p><p>题外话，如果不想把 <code>monster</code> 和 <code>n</code> 的定义放到 <code>main</code> 外呢？可以把这两个作为函数的参数（但是二维数组一般不推荐作为函数参数），或者使用 <code>lambda</code> 表达式在 <code>main</code> 函数内定义我们上面提到的函数。这里涉及的知识又有不少了，甚至 <code>lambda</code> 表达式超出了 C 语言的范围，因此我们略过，有兴趣的同学可以自己了解。</p><p>运用函数的 C 语言版本：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> monster[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> n, fire, stone;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lighten</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; n) <span class="comment">// 判定越界</span></span><br><span class="line">        monster[x][y] = <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;fire, &amp;stone);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            monster[i][j] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fire; i++) <span class="comment">// 统计火把</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x0, y0;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x0, &amp;y0);</span><br><span class="line">        x0--, y0--; <span class="comment">// 我们定义的地图数组下标从 0 开始，题目从 1 开始，所以要把题目的输入减 1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> dx = <span class="number">0</span>; dx &lt;= <span class="number">2</span>; dx++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> dy = <span class="number">0</span>; dy &lt;= <span class="number">2</span> - dx; dy++)</span><br><span class="line">            {</span><br><span class="line">                lighten(x0 + dx, y0 - dy);</span><br><span class="line">                lighten(x0 - dx, y0 + dy);</span><br><span class="line">                lighten(x0 + dx, y0 + dy);</span><br><span class="line">                lighten(x0 - dx, y0 - dy);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stone; i++) <span class="comment">// 统计萤石</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x0, y0;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x0, &amp;y0);</span><br><span class="line">        x0--, y0--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = x0 - <span class="number">2</span>; x &lt;= x0 + <span class="number">2</span>; x++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = y0 - <span class="number">2</span>; y &lt;= y0 + <span class="number">2</span>; y++)</span><br><span class="line">            {</span><br><span class="line">                lighten(x, y);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>; <span class="comment">// 统计怪物总数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; n; x++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; n; y++)</span><br><span class="line">            <span class="keyword">if</span> (monster[x][y])</span><br><span class="line">                ans++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Python 版本直接给出利用函数的版本：</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lighten</span><span class="params">(x: int, y: int)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= x &lt; n <span class="keyword">and</span> <span class="number">0</span> &lt;= y &lt; n:</span><br><span class="line">        monster[x][y] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n, fire, stone = map(int, input().split())</span><br><span class="line">monster = [[<span class="literal">True</span>] * n <span class="keyword">for</span> i <span class="keyword">in</span> range(n)] <span class="comment"># 运用列表生成式初始化二维数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(fire): <span class="comment"># 处理萤火</span></span><br><span class="line">    x0, y0 = map(int, input().split())</span><br><span class="line">    x0 -= <span class="number">1</span></span><br><span class="line">    y0 -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> dx <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">        <span class="keyword">for</span> dy <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">3</span> - dx):</span><br><span class="line">            lighten(x0-dx, y0-dy)</span><br><span class="line">            lighten(x0+dx, y0-dy)</span><br><span class="line">            lighten(x0-dx, y0+dy)</span><br><span class="line">            lighten(x0+dx, y0+dy)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(stone): <span class="comment"># 处理萤火</span></span><br><span class="line">    x0, y0 = map(int, input().split())</span><br><span class="line">    x0 -= <span class="number">1</span></span><br><span class="line">    y0 -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> dx <span class="keyword">in</span> range(<span class="number">-2</span>, <span class="number">3</span>):</span><br><span class="line">        <span class="keyword">for</span> dy <span class="keyword">in</span> range(<span class="number">-2</span>, <span class="number">3</span>):</span><br><span class="line">            lighten(x0+dx, y0+dy)</span><br><span class="line"></span><br><span class="line">s = sum(map(sum, monster)) <span class="comment"># 二维数组求和</span></span><br><span class="line">print(s)</span><br></pre></td></tr></tbody></table></figure><p>Go 版本：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> n <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> monster [<span class="number">100</span>][<span class="number">100</span>]<span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">lighten</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span></span> {</span><br><span class="line"><span class="keyword">if</span> x &gt;= <span class="number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; n {</span><br><span class="line">monster[x][y] = <span class="literal">false</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  {</span><br><span class="line">fire, stone, ans := <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">fmt.Scanln(&amp;n, &amp;fire, &amp;stone)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ {</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ {</span><br><span class="line">monster[i][j] = <span class="literal">true</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; fire; i++ { <span class="comment">// 处理火把</span></span><br><span class="line"><span class="keyword">var</span> x, y <span class="keyword">int</span></span><br><span class="line">fmt.Scanln(&amp;x, &amp;y)</span><br><span class="line">x--</span><br><span class="line">y--</span><br><span class="line"><span class="keyword">for</span> dx := <span class="number">0</span>; dx &lt;= <span class="number">2</span>; dx++ {</span><br><span class="line"><span class="keyword">for</span> dy := <span class="number">0</span>; dy &lt;= <span class="number">2</span> - dx; dy++ {</span><br><span class="line">lighten(x-dx, y-dy)</span><br><span class="line">lighten(x+dx, y-dy)</span><br><span class="line">lighten(x-dx, y+dy)</span><br><span class="line">lighten(x+dx, y+dy)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; stone; i++ { <span class="comment">// 处理萤石</span></span><br><span class="line"><span class="keyword">var</span> x, y <span class="keyword">int</span></span><br><span class="line">fmt.Scanln(&amp;x, &amp;y)</span><br><span class="line">x--</span><br><span class="line">y--</span><br><span class="line"><span class="keyword">for</span> dx := <span class="number">-2</span>; dx &lt;= <span class="number">2</span>; dx++ {</span><br><span class="line"><span class="keyword">for</span> dy := <span class="number">-2</span>; dy &lt;= <span class="number">2</span>; dy++ {</span><br><span class="line">lighten(x+dx, y+dy)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ {</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ {</span><br><span class="line"><span class="keyword">if</span> monster[i][j] {</span><br><span class="line">ans++</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">fmt.Println(ans)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="P2615-神奇的幻方"><a href="#P2615-神奇的幻方" class="headerlink" title="P2615 神奇的幻方"></a>P2615 神奇的幻方</h2><p><a href="https://www.luogu.com.cn/problem/P2615" target="_blank" rel="noopener">P2615 神奇的幻方</a></p><p>题目讲的是构造幻方的一个套路。按照题意写就行啦。这里只给出 C++ 的版本：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> square[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> n, i, j;<span class="comment">// i 表示行，j 表示列，下标从 1 开始</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">i = <span class="number">1</span>, j = n / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> sum = <span class="number">1</span>; sum &lt;= n * n; sum++)</span><br><span class="line">{</span><br><span class="line">square[i][j] = sum;</span><br><span class="line"><span class="keyword">if</span> (sum % n == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (i == n + <span class="number">1</span>)</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">i--;</span><br><span class="line">j++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">i = n;</span><br><span class="line"><span class="keyword">if</span> (j == n + <span class="number">1</span>)</span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, square[i][j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="P5716-【深基3-例9】月份天数"><a href="#P5716-【深基3-例9】月份天数" class="headerlink" title="P5716 【深基3.例9】月份天数"></a>P5716 【深基3.例9】月份天数</h2><p><a href="https://www.luogu.com.cn/problem/P5716" target="_blank" rel="noopener">P5716 【深基3.例9】月份天数</a></p><p>使用<a href="/2020/11/27/2020-programming-of-the-week-3-loop/#P5711-【深基3-例3】闰年判断">闰年判断</a>的代码，我们可以判断某年 2 月的天数。剩下的月份我们只需要打一份表，将十一个月的天数保存在一个数组中，根据不同输入，输出对应的数字即可。</p><p>C 语言版本：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> mdays[] = { <span class="number">-1</span>, <span class="number">31</span>, <span class="number">-1</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span> }; <span class="comment">// 十二个月每月的天数</span></span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;year, &amp;month);</span><br><span class="line">    <span class="keyword">if</span> (month != <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, mdays[month]);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">4</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"28"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"29"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">400</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"28"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"29"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Python 版本：</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mdays = [<span class="number">-1</span>, <span class="number">31</span>, <span class="number">-1</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</span><br><span class="line">year, month = map(int, input().split())</span><br><span class="line"><span class="keyword">if</span> month != <span class="number">2</span>:</span><br><span class="line">    print(mdays[month])</span><br><span class="line"><span class="keyword">elif</span> year % <span class="number">4</span> != <span class="number">0</span>:</span><br><span class="line">    print(<span class="number">28</span>)</span><br><span class="line"><span class="keyword">elif</span> year % <span class="number">100</span> != <span class="number">0</span>:</span><br><span class="line">    print(<span class="number">29</span>)</span><br><span class="line"><span class="keyword">elif</span> year % <span class="number">400</span> != <span class="number">0</span>:</span><br><span class="line">    print(<span class="number">28</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="number">29</span>)</span><br></pre></td></tr></tbody></table></figure><p>Go 版本：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> {</span><br><span class="line"><span class="keyword">var</span> year, month <span class="keyword">int</span></span><br><span class="line">mdays := []<span class="keyword">int</span>{<span class="number">-1</span>, <span class="number">31</span>, <span class="number">-1</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>}</span><br><span class="line">fmt.Scanln(&amp;year, &amp;month)</span><br><span class="line"><span class="keyword">if</span> month != <span class="number">2</span> {</span><br><span class="line">fmt.Println(mdays[month])</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> year%<span class="number">4</span> != <span class="number">0</span> {</span><br><span class="line">fmt.Println(<span class="number">28</span>)</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> year%<span class="number">100</span> != <span class="number">0</span> {</span><br><span class="line">fmt.Println(<span class="number">29</span>)</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> year%<span class="number">400</span> != <span class="number">0</span> {</span><br><span class="line">fmt.Println(<span class="number">28</span>)</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">fmt.Println(<span class="number">29</span>)</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="本周题单：字符串"><a href="#本周题单：字符串" class="headerlink" title="本周题单：字符串"></a>本周题单：字符串</h2><p>这周的题单是<a href="https://www.luogu.com.cn/training/104" target="_blank" rel="noopener">字符串</a>。这周的题单 15 题中，必做的为 <a href="https://www.luogu.com.cn/problem/P1914" target="_blank" rel="noopener">P1914 小书童——凯撒密码</a> 和 <a href="https://www.luogu.com.cn/problem/P1597" target="_blank" rel="noopener">P1597 语句解析</a>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数组部分的题解！&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://uestc-msc.github.io/categories/C/"/>
    
      <category term="MSC 每周两题" scheme="https://uestc-msc.github.io/categories/MSC-%E6%AF%8F%E5%91%A8%E4%B8%A4%E9%A2%98/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>MSC 每周两题：上周题解 &amp; 数组</title>
    <link href="https://uestc-msc.github.io/2020/12/15/2020-programming-of-the-week-4-array/"/>
    <id>https://uestc-msc.github.io/2020/12/15/2020-programming-of-the-week-4-array/</id>
    <published>2020-12-15T13:00:00.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p>说周五发这篇博客，然后就咕了一个多星期 hhhh 俱乐部的鸽子本性。</p><p>不过，本期题解的线下沙龙的录屏已经投到了 B 站（就是麦克风效果有点不行）：</p><a id="more"></a><iframe src="//player.bilibili.com/player.html?aid=245617490&amp;bvid=BV1Cv411b7tA&amp;cid=263251749&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="系列目录"><a href="#系列目录" class="headerlink" title="系列目录"></a>系列目录</h2><ol><li><a href="/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/">MSC 每周两题：前言 &amp; 顺序结构</a></li><li><a href="/2020/11/20/2020-programming-of-the-week-2-branch/">MSC 每周两题：上周题解 &amp; 分支结构</a></li><li><a href="/2020/11/27/2020-programming-of-the-week-3-loop/">MSC 每周两题：上周题解 &amp; 循环结构</a></li><li><a href="/2020/12/15/2020-programming-of-the-week-4-array/">MSC 每周两题：上周题解 &amp; 数组</a></li><li><a href="/2020/12/25/2020-programming-of-the-week-5-string/">MSC 每周两题：上周题解 &amp; 字符串</a></li><li>MSC 每周两题：上周题解 &amp; 函数和结构体</li><li>MSC 每周两题：上周题解 &amp; 后记</li></ol><h2 id="P5719-【深基4-例3】分类平均"><a href="#P5719-【深基4-例3】分类平均" class="headerlink" title="P5719 【深基4.例3】分类平均"></a>P5719 【深基4.例3】分类平均</h2><p><a href="https://www.luogu.com.cn/problem/P5719" target="_blank" rel="noopener">P5719 【深基4.例3】分类平均</a></p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>最简单的做法就是把 $1$ 到 $n$ 的数全部遍历一遍，然后使用一个 <code>if</code> 对数分类，统计数的总和以及总数，最后求一个平均数即可。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="keyword">double</span> a_sum = <span class="number">0</span>, b_sum = <span class="number">0</span>, a_n = <span class="number">0</span>, b_n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (i % k == <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            a_sum += i;</span><br><span class="line">            a_n++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            b_sum += i;</span><br><span class="line">            b_n++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1f %.1f"</span>, a_sum / a_n, b_sum / b_n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>应同学要求，这次加上了 Python 3 的代码。</p><p>使用 Python，可以使用 <code>filter</code> 函数将数组直接分为能被 $k$ 整除，以及不能被 $k$ 整除的部分，而不用写 <code>for</code> 语句。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n, k = map(int, input().split())</span><br><span class="line">numbers = range(<span class="number">1</span>,  n+<span class="number">1</span>)</span><br><span class="line">numbers_a = list(filter(<span class="keyword">lambda</span> x: x % k == <span class="number">0</span>, numbers))</span><br><span class="line">numbers_b = list(filter(<span class="keyword">lambda</span> x: x % k != <span class="number">0</span>, numbers))</span><br><span class="line">average_a = sum(numbers_a)/len(numbers_a)</span><br><span class="line">average_b = sum(numbers_b)/len(numbers_b)</span><br><span class="line">print(<span class="string">"%.1f %.1f"</span> % (average_a, average_b))</span><br></pre></td></tr></tbody></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>除了循环以外，能不能直接根据 n 和 k 直接计算得出结果呢？这道题有很强的数学性质，于是可以尝试往这方面想想。</p><p>设两个集合分别为 $S_A$ 和 $S_B$。显然有：</p><script type="math/tex; mode=display">\sum_{x \in S_A} x + \sum_{y \in S_B} y = \frac{1}{2}n(n+1)</script><script type="math/tex; mode=display">|S_A| + |S_B| = n</script><p>注意到 $S_A$ 是“前 $n$ 个数中能被 $k$ 整除的数组成的集合”，所以不难推出集合 $S_A$ 中共有 $\lfloor\frac{n}{k}\rfloor$ 个元素。（不会推导的同学也可以举 $n=5, k=2$ 这样的例子验证）</p><p>而 $S_A$ 中的元素又构成了首项、公差均为 $k$ 的等差数列，其个数也可以求出（如上）。</p><p>用总的个数与元素和分别减去 $S_A$ 的个数和元素和，就可以得到 $S_B$ 的个数以及元素和。最后分别求 $S_A$ 和 $S_B$ 的平均数即可。</p><p>下面是 C 和 Python 3 的实现。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="keyword">double</span> a_sum = <span class="number">0</span>, b_sum = <span class="number">0</span>, a_n = <span class="number">0</span>, b_n = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line">    sum = (<span class="number">1</span> + n) * n / <span class="number">2</span>;</span><br><span class="line">    a_n = n / k;</span><br><span class="line">    a_sum = (k + k * a_n) * a_n / <span class="number">2</span>;</span><br><span class="line">    b_n = n - a_n;</span><br><span class="line">    b_sum = sum - a_sum;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1f %.1f"</span>, a_sum / a_n, b_sum / b_n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n, k = map(int, input().split())</span><br><span class="line">sum = (<span class="number">1</span> + n) * n / <span class="number">2</span></span><br><span class="line">a_n = n // k</span><br><span class="line">a_sum = (k + k * a_n) * a_n / <span class="number">2</span></span><br><span class="line">b_n = n - a_n</span><br><span class="line">b_sum = sum - a_sum</span><br><span class="line">print(<span class="string">"%.1f %.1f"</span> % (a_sum / a_n, b_sum / b_n))</span><br></pre></td></tr></tbody></table></figure><h2 id="P5723-【深基4-例13】质数口袋"><a href="#P5723-【深基4-例13】质数口袋" class="headerlink" title="P5723 【深基4.例13】质数口袋"></a>P5723 【深基4.例13】质数口袋</h2><p><a href="https://www.luogu.com.cn/problem/P5723" target="_blank" rel="noopener">P5723 【深基4.例13】质数口袋</a></p><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><p>题目本质是在求从 2 开始的所有质数，直至满足其和大于 $L$。所以本题的三个方法均围绕如何求质数进行。</p><p>最朴素的方法就是根据质数的定义：</p><blockquote><p>质数（Prime number），又称素数，指在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数（也可定义为只有1与该数本身两个正因数的数）。</p></blockquote><p>根据定义，对于大于1的自然数 $i$，如果验证 $2\sim i-1$ 均不能整除 $i$，那么 $i$ 一定是质数。</p><p>但是，一定要判定 $2\sim i-1$ 吗？</p><p>一种优化，是只判定 $2\sim \sqrt{i}$ 之间的整数。因为一个合数 $i$ 必然会有一个因数小于 $\sqrt{i}$（想想，这是为什么？）。</p><p>下面的 C 和 Python 代码就采用了这种优化。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> L;</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; sum + i &lt;= L; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">bool</span> is_prime = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> sqrt_i = <span class="built_in">sqrt</span>(i); <span class="comment">// 注意不要把 sqrt(i) 的计算过程写到 for 的判定条件中</span></span><br><span class="line">        <span class="comment">// 在不考虑编译器优化的情况下，这种写法会导致每次判定 j &lt;= sqrt(i) 时都会重新计算 sqrt(i)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= sqrt_i; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                is_prime = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (is_prime)</span><br><span class="line">        {</span><br><span class="line">            sum += i;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, n);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line">L=int(input())</span><br><span class="line">sum, n = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, L):</span><br><span class="line">    <span class="keyword">if</span> sum+i &gt; L:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    is_prime = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>, int(sqrt(i))+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            is_prime = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> is_prime:</span><br><span class="line">        sum += i</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        print(i)</span><br><span class="line">print(n)</span><br></pre></td></tr></tbody></table></figure><p>对这种方法更进一步的优化，是只判定 $2\sim \sqrt{i}$ 之间的质数。因为一个合数 $i$ 必然会有一个<strong>质因数</strong>小于 $\sqrt{i}$。</p><p>不过，这样就要求将前面计算出的质数存到数组中，需要额外的数组空间。</p><h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h3><p>方法二源于埃拉托斯特尼筛法。其算法思想是，假设所有数都是质数，第一步先从 4 开始把 2 的倍数筛掉（因为都是和数），下一步筛掉 3 的倍数，然后筛掉 5 的倍数……</p><p>由于算法很著名，网上有不少现成的、形象易懂的埃氏筛算法的讲解博客，因此这里不进行更多展开。感兴趣的同学可以自行搜索并进行学习。</p><p>下面是 C 和 Python 3 的实现。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> max_size = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">// 为方便，这里使用 is_not_prime 并设初值为 0，代替算法中的 is_prime 初值为 1</span></span><br><span class="line">    <span class="keyword">bool</span> is_not_prime[max_size] = { <span class="number">0</span> };</span><br><span class="line">    <span class="keyword">int</span> L;</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; sum + i &lt;= L; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (is_not_prime[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i * i; i * j &lt;= L; j += i)</span><br><span class="line">            is_not_prime[j] = <span class="number">1</span>;</span><br><span class="line">        sum += i;</span><br><span class="line">        n++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, n);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MAX_SIZE = <span class="number">100005</span></span><br><span class="line">is_not_prime = [<span class="literal">False</span>] * MAX_SIZE</span><br><span class="line">L=int(input())</span><br><span class="line">sum, n = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, L):</span><br><span class="line">    <span class="keyword">if</span> sum+i &gt; L:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> is_not_prime[i]:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i*i, L+<span class="number">1</span>, i):</span><br><span class="line">        is_not_prime[j] = <span class="literal">True</span></span><br><span class="line">    sum += i</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">    print(i)</span><br><span class="line">print(n)</span><br></pre></td></tr></tbody></table></figure><p>除此之外，埃氏筛法还有线性筛、奇数筛等优化，学有余力的同学可以自行搜索了解。</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>还有一种方法，这种方法是为了单纯为了把程序运行速度提高到极致才产生的方法：使用方法一或方法二的算法生成足够用的质数表，然后将质数表复制到代码里直接使用！</p><p>这种技巧被称为“打表”。</p><blockquote><p>打表，是一个信息学专用术语，意指对一些题目，通过打表技巧获得一个有序表或常量表，来执行程序某一部分，优化时间复杂度。这种算法也可用于在对某种题目没有最优解法时，用来得到分数的一种策略。</p></blockquote><p>以下是我们得到了质数表的前提下的 C 和 Python 3 代码。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> prime[] = { <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">53</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">97</span>, <span class="number">101</span>, <span class="number">103</span>, <span class="number">107</span>, <span class="number">109</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">137</span>, <span class="number">139</span>, <span class="number">149</span>, <span class="number">151</span>, <span class="number">157</span>, <span class="number">163</span>, <span class="number">167</span>, <span class="number">173</span>, <span class="number">179</span>, <span class="number">181</span>, <span class="number">191</span>, <span class="number">193</span>, <span class="number">197</span>, <span class="number">199</span>, <span class="number">211</span>, <span class="number">223</span>, <span class="number">227</span>, <span class="number">229</span>, <span class="number">233</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">251</span>, <span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>, <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>, <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>, <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>, <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span>, <span class="number">379</span>, <span class="number">383</span>, <span class="number">389</span>, <span class="number">397</span>, <span class="number">401</span>, <span class="number">409</span>, <span class="number">419</span>, <span class="number">421</span>, <span class="number">431</span>, <span class="number">433</span>, <span class="number">439</span>, <span class="number">443</span>, <span class="number">449</span>, <span class="number">457</span>, <span class="number">461</span>, <span class="number">463</span>, <span class="number">467</span>, <span class="number">479</span>, <span class="number">487</span>, <span class="number">491</span>, <span class="number">499</span>, <span class="number">503</span>, <span class="number">509</span>, <span class="number">521</span>, <span class="number">523</span>, <span class="number">541</span>, <span class="number">547</span>, <span class="number">557</span>, <span class="number">563</span>, <span class="number">569</span>, <span class="number">571</span>, <span class="number">577</span>, <span class="number">587</span>, <span class="number">593</span>, <span class="number">599</span>, <span class="number">601</span>, <span class="number">607</span>, <span class="number">613</span>, <span class="number">617</span>, <span class="number">619</span>, <span class="number">631</span>, <span class="number">641</span>, <span class="number">643</span>, <span class="number">647</span>, <span class="number">653</span>, <span class="number">659</span>, <span class="number">661</span>, <span class="number">673</span>, <span class="number">677</span>, <span class="number">683</span>, <span class="number">691</span>, <span class="number">701</span>, <span class="number">709</span>, <span class="number">719</span>, <span class="number">727</span>, <span class="number">733</span>, <span class="number">739</span>, <span class="number">743</span>, <span class="number">751</span>, <span class="number">757</span>, <span class="number">761</span>, <span class="number">769</span>, <span class="number">773</span>, <span class="number">787</span>, <span class="number">797</span>, <span class="number">809</span>, <span class="number">811</span>, <span class="number">821</span>, <span class="number">823</span>, <span class="number">827</span>, <span class="number">829</span>, <span class="number">839</span>, <span class="number">853</span>, <span class="number">857</span>, <span class="number">859</span>, <span class="number">863</span>, <span class="number">877</span>, <span class="number">881</span>, <span class="number">883</span>, <span class="number">887</span>, <span class="number">907</span>, <span class="number">911</span>, <span class="number">919</span>, <span class="number">929</span>, <span class="number">937</span>, <span class="number">941</span>, <span class="number">947</span>, <span class="number">953</span>, <span class="number">967</span>, <span class="number">971</span>, <span class="number">977</span>, <span class="number">983</span>, <span class="number">991</span>, <span class="number">997</span>, <span class="number">1009</span>, <span class="number">1013</span>, <span class="number">1019</span>, <span class="number">1021</span>, <span class="number">1031</span>, <span class="number">1033</span>, <span class="number">1039</span>, <span class="number">1049</span>, <span class="number">1051</span>, <span class="number">1061</span>, <span class="number">1063</span>, <span class="number">1069</span>, <span class="number">1087</span>, <span class="number">1091</span>, <span class="number">1093</span>, <span class="number">1097</span>, <span class="number">1103</span>, <span class="number">1109</span>, <span class="number">1117</span>, <span class="number">1123</span>, <span class="number">1129</span>, <span class="number">1151</span>, <span class="number">10000</span>};</span><br><span class="line"><span class="comment">// 最后一个 10000 是防止遍历数组的时候越界</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> L;</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; sum + prime[i] &lt;= L; i++)</span><br><span class="line">    {</span><br><span class="line">        sum += prime[i];</span><br><span class="line">        n++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, prime[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, n);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">prime = [ <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">53</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">97</span>, <span class="number">101</span>, <span class="number">103</span>, <span class="number">107</span>, <span class="number">109</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">137</span>, <span class="number">139</span>, <span class="number">149</span>, <span class="number">151</span>, <span class="number">157</span>, <span class="number">163</span>, <span class="number">167</span>, <span class="number">173</span>, <span class="number">179</span>, <span class="number">181</span>, <span class="number">191</span>, <span class="number">193</span>, <span class="number">197</span>, <span class="number">199</span>, <span class="number">211</span>, <span class="number">223</span>, <span class="number">227</span>, <span class="number">229</span>, <span class="number">233</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">251</span>, <span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>, <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>, <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>, <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>, <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span>, <span class="number">379</span>, <span class="number">383</span>, <span class="number">389</span>, <span class="number">397</span>, <span class="number">401</span>, <span class="number">409</span>, <span class="number">419</span>, <span class="number">421</span>, <span class="number">431</span>, <span class="number">433</span>, <span class="number">439</span>, <span class="number">443</span>, <span class="number">449</span>, <span class="number">457</span>, <span class="number">461</span>, <span class="number">463</span>, <span class="number">467</span>, <span class="number">479</span>, <span class="number">487</span>, <span class="number">491</span>, <span class="number">499</span>, <span class="number">503</span>, <span class="number">509</span>, <span class="number">521</span>, <span class="number">523</span>, <span class="number">541</span>, <span class="number">547</span>, <span class="number">557</span>, <span class="number">563</span>, <span class="number">569</span>, <span class="number">571</span>, <span class="number">577</span>, <span class="number">587</span>, <span class="number">593</span>, <span class="number">599</span>, <span class="number">601</span>, <span class="number">607</span>, <span class="number">613</span>, <span class="number">617</span>, <span class="number">619</span>, <span class="number">631</span>, <span class="number">641</span>, <span class="number">643</span>, <span class="number">647</span>, <span class="number">653</span>, <span class="number">659</span>, <span class="number">661</span>, <span class="number">673</span>, <span class="number">677</span>, <span class="number">683</span>, <span class="number">691</span>, <span class="number">701</span>, <span class="number">709</span>, <span class="number">719</span>, <span class="number">727</span>, <span class="number">733</span>, <span class="number">739</span>, <span class="number">743</span>, <span class="number">751</span>, <span class="number">757</span>, <span class="number">761</span>, <span class="number">769</span>, <span class="number">773</span>, <span class="number">787</span>, <span class="number">797</span>, <span class="number">809</span>, <span class="number">811</span>, <span class="number">821</span>, <span class="number">823</span>, <span class="number">827</span>, <span class="number">829</span>, <span class="number">839</span>, <span class="number">853</span>, <span class="number">857</span>, <span class="number">859</span>, <span class="number">863</span>, <span class="number">877</span>, <span class="number">881</span>, <span class="number">883</span>, <span class="number">887</span>, <span class="number">907</span>, <span class="number">911</span>, <span class="number">919</span>, <span class="number">929</span>, <span class="number">937</span>, <span class="number">941</span>, <span class="number">947</span>, <span class="number">953</span>, <span class="number">967</span>, <span class="number">971</span>, <span class="number">977</span>, <span class="number">983</span>, <span class="number">991</span>, <span class="number">997</span>, <span class="number">1009</span>, <span class="number">1013</span>, <span class="number">1019</span>, <span class="number">1021</span>, <span class="number">1031</span>, <span class="number">1033</span>, <span class="number">1039</span>, <span class="number">1049</span>, <span class="number">1051</span>, <span class="number">1061</span>, <span class="number">1063</span>, <span class="number">1069</span>, <span class="number">1087</span>, <span class="number">1091</span>, <span class="number">1093</span>, <span class="number">1097</span>, <span class="number">1103</span>, <span class="number">1109</span>, <span class="number">1117</span>, <span class="number">1123</span>, <span class="number">1129</span>, <span class="number">1151</span>, <span class="number">10000</span>]</span><br><span class="line"></span><br><span class="line">L=int(input())</span><br><span class="line">sum, n = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> prime:</span><br><span class="line">    <span class="keyword">if</span> sum+i &gt; L:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    sum += i</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">    print(i)</span><br><span class="line">print(n)</span><br></pre></td></tr></tbody></table></figure><h2 id="将代码上传到-GitHub"><a href="#将代码上传到-GitHub" class="headerlink" title="将代码上传到 GitHub"></a>将代码上传到 GitHub</h2><p>上上周我们开了沙龙讲解如何配置 WSL 和 Git。这里有博客记录：<a href="https://blog.lyh543.cn/linux/introduction-to-wsl-ubuntu-and-git/" target="_blank" rel="noopener">WSL(Ubuntu)、Git 配置及简单使用</a>。</p><p>我们希望同学能将自己在洛谷提交的代码也提交到 Git 仓库：<a href="https://github.com/uestc-msc/2020-members" target="_blank" rel="noopener">uestc-msc/2020-members</a>。提交时，请 fork 原仓库到自己账号下，在自己账号下的仓库完成提交，然后向俱乐部仓库 Pull Request。</p><p>尚不会使用 Git 的同学，可以参考上面的博客，也可以在 QQ 群里提问。</p><h2 id="本周题单：数组"><a href="#本周题单：数组" class="headerlink" title="本周题单：数组"></a>本周题单：数组</h2><p>这周的题单是<a href="https://www.luogu.com.cn/training/103" target="_blank" rel="noopener">数组</a>。这周的题单 20 题中，必做的为 <a href="https://www.luogu.com.cn/problem/P5728" target="_blank" rel="noopener">P5728 【深基5.例5】旗鼓相当的对手</a> 和 <a href="https://www.luogu.com.cn/problem/P1789" target="_blank" rel="noopener">P1789 【Mc生存】插火把</a>，还有 <a href="https://www.luogu.com.cn/problem/P2615" target="_blank" rel="noopener">P2615 神奇的幻方</a>。</p><p>除了上面的题以外，我们还需要填一个坑，就是基于之前分支结构中的 <a href="https://www.luogu.com.cn/problem/P5711" target="_blank" rel="noopener">P5711 【深基3.例3】闰年判断</a> 的 <a href="https://www.luogu.com.cn/problem/P5716" target="_blank" rel="noopener">P5716 【深基3.例9】月份天数</a>。各位可以基于之前的代码加以完善，然后完成此题。</p><p>本次题目的题解将于下周五 (2020-12-25) 给出，敬请期待~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说周五发这篇博客，然后就咕了一个多星期 hhhh 俱乐部的鸽子本性。&lt;/p&gt;
&lt;p&gt;不过，本期题解的线下沙龙的录屏已经投到了 B 站（就是麦克风效果有点不行）：&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://uestc-msc.github.io/categories/C/"/>
    
      <category term="MSC 每周两题" scheme="https://uestc-msc.github.io/categories/MSC-%E6%AF%8F%E5%91%A8%E4%B8%A4%E9%A2%98/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>MSC 每周两题：上周题解 &amp; 循环结构</title>
    <link href="https://uestc-msc.github.io/2020/11/27/2020-programming-of-the-week-3-loop/"/>
    <id>https://uestc-msc.github.io/2020/11/27/2020-programming-of-the-week-3-loop/</id>
    <published>2020-11-27T04:00:00.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p>分支结构的题解！</p><a id="more"></a><h2 id="系列目录"><a href="#系列目录" class="headerlink" title="系列目录"></a>系列目录</h2><ol><li><a href="/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/">MSC 每周两题：前言 &amp; 顺序结构</a></li><li><a href="/2020/11/20/2020-programming-of-the-week-2-branch/">MSC 每周两题：上周题解 &amp; 分支结构</a></li><li><a href="/2020/11/27/2020-programming-of-the-week-3-loop/">MSC 每周两题：上周题解 &amp; 循环结构</a></li><li><a href="/2020/12/15/2020-programming-of-the-week-4-array/">MSC 每周两题：上周题解 &amp; 数组</a></li><li><a href="/2020/12/25/2020-programming-of-the-week-5-string/">MSC 每周两题：上周题解 &amp; 字符串</a></li><li>MSC 每周两题：上周题解 &amp; 函数和结构体</li><li>MSC 每周两题：上周题解 &amp; 后记</li></ol><h2 id="P5712-【深基3-例4】Apples"><a href="#P5712-【深基3-例4】Apples" class="headerlink" title="P5712 【深基3.例4】Apples"></a>P5712 【深基3.例4】Apples</h2><p><a href="https://www.luogu.com.cn/problem/P5712" target="_blank" rel="noopener">P5712 【深基3.例4】Apples</a>。最容易想到的方法就是用 <code>if</code> 分为两种情况：加 <code>s</code> 和不加 <code>s</code> 的，然后分别输出。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Today, I ate %d apple."</span>, n);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Today, I ate %d apples."</span>, n);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果你学过字符串和三目运算符，这道题还有另一个简洁的写法：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Today, I ate %d apple%s."</span>, n, n &lt;= <span class="number">1</span> ? <span class="string">""</span> : <span class="string">"s"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果没有学过的话，你可以三目运算符认为是 <code>if</code> 的简化版：这个表达式的值会根据 <code>?</code> 前面的条件（即 <code>n &lt;= 1</code>）进行选择：</p><ul><li>如果 <code>n &lt;= 1</code>，表达式的值为 <code>:</code> 前的值（即 <code>""</code>）</li><li>如果 <code>n &gt; 2</code>，表达式的值为 <code>:</code> 后的值（即 <code>"s"</code>）</li></ul><p>程序经过判断后计算出了表达式的值，然后就可以在输出 <code>apple</code> 后输出一个 <code>s</code>，或什么都不输出。</p><hr><h2 id="P5711-【深基3-例3】闰年判断"><a href="#P5711-【深基3-例3】闰年判断" class="headerlink" title="P5711 【深基3.例3】闰年判断"></a>P5711 【深基3.例3】闰年判断</h2><p><a href="https://www.luogu.com.cn/problem/P5711" target="_blank" rel="noopener">P5711 【深基3.例3】闰年判断</a>，只需要注意什么情况是闰年就可以了。不过，要判断的情况有点多，写起来有点混乱啊……</p><p>一种思路，就是把所有<strong>互斥</strong>（互斥：以下情况最多只会发生一个，不会同时发生两个或更多）的情况独立地写出来：</p><ol><li>若年份不是 4 的倍数，则不是闰年；</li><li>若年份是 4 的倍数，同时不是 100 的倍数，则是闰年；</li><li>若年份是 100 的倍数，同时不是 400 的倍数，则不是闰年；</li><li>若年份是 400 的倍数，则是闰年。</li></ol><p>然后一一单独判断这些情况即可。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;year);</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">4</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">100</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">400</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>顺便一提，上面的这种 <code>if ... else if ... else if ... else if ...</code>，我们在分析代码含义的时候可以认为他是链式结构（即，如果你想在后面再加其他情况的判断，在后面追加 <code>else if ...</code> 即可，像是在一条链子后面加上了一个相同的环形成了更长的链子，而不需要嵌套）。</p><p>但是，由于 C 语言 if 后只会执行一个语句（或语句块），编译器会以嵌套的形式理解这段代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (year % <span class="number">4</span> != <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (year % <span class="number">100</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">400</span> != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>编译器会认为，每个 <code>else</code> 语句后面又跟了一个完整的 <code>if else</code>。很明显，这种嵌套的方式非常不美观。因此，编写自己的代码或是理解别人的代码时，我们按照链式理解就可以了。</p><hr><p>另一种思路就是把所有年份从大类分到小类，然后依次判断：</p><ol><li>先把所有年份分为“能被 4 整除”和“不能被 4 整除”，后面一种情况可以判断为非闰年</li><li>把“能被 4 整除”的再分为“能被 100 整除”和“不能被 100 整除”，后面一种情况可以判断为闰年</li><li>再把“能被 100 整除”的再分为“能被 400 整除”和“不能被 400 整除”，两种情况均可判断</li></ol><p>这里就会写出嵌套的 <code>if else</code>：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;year);</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">4</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    { <span class="comment">//能被 4 整除</span></span><br><span class="line">        <span class="keyword">if</span> (year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        { <span class="comment">// 能被 100 整除</span></span><br><span class="line">            <span class="keyword">if</span> (year % <span class="number">400</span> != <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">// 能被 400 整除</span></span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>我们尝试将其改写为为链式的 <code>if else</code>：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;year);</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">4</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">400</span> != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">// 能被 400 整除</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>简洁多了，甚至比第一段代码还简洁。不过个人认为，第一种把所有互斥情况列出来的方法，不容易出错；第二种从大类分到小类的方法，需要仔细琢磨。</p><p>学会了闰年判断，能否判断一个年月有多少天呢？这个坑放到数组专题来填（这是第几次挖坑了）。</p><h2 id="本周题单：循环结构"><a href="#本周题单：循环结构" class="headerlink" title="本周题单：循环结构"></a>本周题单：循环结构</h2><p>这周的题单是<a href="https://www.luogu.com.cn/training/102" target="_blank" rel="noopener">循环结构</a>。这周的题单 13 题中，必做的为<a href="https://www.luogu.com.cn/problem/P5719" target="_blank" rel="noopener">P5719 【深基4.例3】分类平均</a>和<a href="https://www.luogu.com.cn/problem/P5723" target="_blank" rel="noopener">P5723 【深基4.例13】质数口袋</a>。</p><p>除此之外，还有就是前面挖的坑：打印 ASCII 表。这里你只需要保证可见字符（字母数字、标点符号等）输出正常，某些不可见的字符的格式不做要求。</p><p>本周的“质数口袋”题目解法繁多，所以可能会有线下沙龙讲解。但是线上博客依旧是下周五晚八点之前更新，不见不散~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分支结构的题解！&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://uestc-msc.github.io/categories/C/"/>
    
      <category term="MSC 每周两题" scheme="https://uestc-msc.github.io/categories/MSC-%E6%AF%8F%E5%91%A8%E4%B8%A4%E9%A2%98/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>MSC 每周两题：上周题解 &amp; 分支结构</title>
    <link href="https://uestc-msc.github.io/2020/11/20/2020-programming-of-the-week-2-branch/"/>
    <id>https://uestc-msc.github.io/2020/11/20/2020-programming-of-the-week-2-branch/</id>
    <published>2020-11-20T04:00:00.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p>首先是上次顺序结构的题解！</p><p>单纯只出顺序结构相关的题，是不会像分支、循环、函数、结构体等后面的专题一样把 C 玩出花来。所以也就出一些基础一点的题加一点数学题（如果你想体验亿点数学题的话，可以看看<a href="https://www.luogu.com.cn/problem/P2433" target="_blank" rel="noopener">P2433 【深基1-2】小学数学 N 合一</a>）。</p><a id="more"></a><h2 id="系列目录"><a href="#系列目录" class="headerlink" title="系列目录"></a>系列目录</h2><ol><li><a href="/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/">MSC 每周两题：前言 &amp; 顺序结构</a></li><li><a href="/2020/11/20/2020-programming-of-the-week-2-branch/">MSC 每周两题：上周题解 &amp; 分支结构</a></li><li><a href="/2020/11/27/2020-programming-of-the-week-3-loop/">MSC 每周两题：上周题解 &amp; 循环结构</a></li><li><a href="/2020/12/15/2020-programming-of-the-week-4-array/">MSC 每周两题：上周题解 &amp; 数组</a></li><li><a href="/2020/12/25/2020-programming-of-the-week-5-string/">MSC 每周两题：上周题解 &amp; 字符串</a></li><li>MSC 每周两题：上周题解 &amp; 函数和结构体</li><li>MSC 每周两题：上周题解 &amp; 后记</li></ol><h2 id="P5704-【深基2-例6】字母转换"><a href="#P5704-【深基2-例6】字母转换" class="headerlink" title="P5704 【深基2.例6】字母转换"></a>P5704 【深基2.例6】字母转换</h2><p>先看 <a href="https://www.luogu.com.cn/problem/P5704" target="_blank" rel="noopener">P5704 【深基2.例6】字母转换</a>。</p><p>题目要求将小写字母转换为大写字母。</p><p>C 语言中，字符 <code>char</code> 是按照 <a href="https://baike.baidu.com/item/ASCII" target="_blank" rel="noopener">ASCII 码</a>存储的，其中 ASCII 表可以百度到，也可以使用你手上的 C 语言编译器自己做一张表（但是这需要循环结构的知识，这里就先挖一个坑；如果你已经学会了循环结构，你可以提前做一张表）。</p><p>从表中可以注意到，大小写字母的 ASCII 码是一一对应的，同一个字母的大小写相差 32。于是，我们对字符变量进行运算：<code>输出字符 = 输入字符 - 32</code> 即可完成此题。</p><p>如果恰巧忘了 32 这个常量值，我们也可以让计算机自行计算出 <code>'a' - 'A'</code> 的值。如下面的代码：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    ch = ch - <span class="string">'a'</span> + <span class="string">'A'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>也就是说，我们并不一定要死记 ASCII 码间的对应关系，而是让电脑自己去运算，这样代码的可读性也会更高。（如，将数字字符转为其数字值时，我更喜欢 <code>num = ch - '0';</code> 而不是 <code>num = ch - 48;</code>）</p><h2 id="P5708-【深基2-习2】三角形面积"><a href="#P5708-【深基2-习2】三角形面积" class="headerlink" title="P5708 【深基2.习2】三角形面积"></a>P5708 【深基2.习2】三角形面积</h2><p>另外一题是 <a href="https://www.luogu.com.cn/problem/P5708" target="_blank" rel="noopener">P5708 【深基2.习2】三角形面积</a>。<del>这道题公式都你糊脸上了，直接抄上去就行了</del>程序员的事，能叫抄公式吗？那叫代码复用，我们要讲码德。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">// float a, b, c, p, area;</span></span><br><span class="line">    <span class="keyword">double</span> a, b, c, p, area;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    p = (a + b + c) / <span class="number">2</span>;</span><br><span class="line">    area = <span class="built_in">sqrt</span>(p * (p-a) * (p-b) * (p-c));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1f"</span>, area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这道题如果使用 <code>float</code> 类型运算，最后一个测试点会 <code>Wrong Answer</code>，使用 <code>double</code> 才能全部通过。最后一个测试点的输入为 <code>888.88 888.88 888.88</code>，使用 <code>float</code> 的输出为 <code>342126.8</code>，而 <code>double</code> 的运算结果为 <code>342126.7</code>。</p><p>现实生活中，很多情况下一点误差是允许的，但对于 OJ 这类在线评测，要求结果和测试点的预期完全一样，因此在 OJ 提交时，我们一般都会使用更精确的 <code>double</code> 甚至 <code>long double</code> 类型进行运算，平时写代码的根据自己的需求（精确度、内存等）而定。</p><hr><p>请提交成功的同学将自己的代码提交到 <a href="https://github.com/uestc-msc/2020-members" target="_blank" rel="noopener">GitHub 仓库</a>。</p><p>当然，如果你还不会使用 Git，你可以暂时不提交，之后我们会有关于 Git 的简单使用的<a href="https://blog.lyh543.cn/linux/introduction-to-wsl-ubuntu-and-git/" target="_blank" rel="noopener">教程博客</a>（暂时还没更新）和手把手教学沙龙，这周因为时间不合适，都咕咕咕了。待博客和沙龙都更新完了，各位可以再参考博客或沙龙，提交自己的代码。</p><h2 id="本周题单：分支结构"><a href="#本周题单：分支结构" class="headerlink" title="本周题单：分支结构"></a>本周题单：分支结构</h2><p>这周的题单是<a href="https://www.luogu.com.cn/training/101" target="_blank" rel="noopener">分支结构</a>，16 道题必做的只有 <a href="https://www.luogu.com.cn/problem/P5711" target="_blank" rel="noopener">P5711 【深基3.例3】闰年判断</a> 和 <a href="https://www.luogu.com.cn/problem/P5712" target="_blank" rel="noopener">P5712 【深基3.例4】Apples</a>，都是在实际开发中经常遇到的情况（手写日期判断等情况，使用单数还是复数）。题解和下周题目会在下周五晚八点前公布~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先是上次顺序结构的题解！&lt;/p&gt;
&lt;p&gt;单纯只出顺序结构相关的题，是不会像分支、循环、函数、结构体等后面的专题一样把 C 玩出花来。所以也就出一些基础一点的题加一点数学题（如果你想体验亿点数学题的话，可以看看&lt;a href=&quot;https://www.luogu.com.cn/problem/P2433&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;P2433 【深基1-2】小学数学 N 合一&lt;/a&gt;）。&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://uestc-msc.github.io/categories/C/"/>
    
      <category term="MSC 每周两题" scheme="https://uestc-msc.github.io/categories/MSC-%E6%AF%8F%E5%91%A8%E4%B8%A4%E9%A2%98/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>WSL(Ubuntu)、Git 配置及简单使用</title>
    <link href="https://uestc-msc.github.io/2020/11/18/2020-introduction-to-wsl-ubuntu-and-git/"/>
    <id>https://uestc-msc.github.io/2020/11/18/2020-introduction-to-wsl-ubuntu-and-git/</id>
    <published>2020-11-18T08:33:02.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.lyh543.cn/linux/introduction-to-wsl-ubuntu-and-git/" target="_blank" rel="noopener">https://blog.lyh543.cn/linux/introduction-to-wsl-ubuntu-and-git/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.lyh543.cn/linux/introduction-to-wsl-ubuntu-and-git/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.lyh543.cn/linux/in
      
    
    </summary>
    
      <category term="Git" scheme="https://uestc-msc.github.io/categories/Git/"/>
    
      <category term="Linux" scheme="https://uestc-msc.github.io/categories/Linux/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>MSC 每周两题：前言 &amp; 顺序结构</title>
    <link href="https://uestc-msc.github.io/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/"/>
    <id>https://uestc-msc.github.io/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/</id>
    <published>2020-11-13T03:33:02.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系列目录"><a href="#系列目录" class="headerlink" title="系列目录"></a>系列目录</h2><ol><li><a href="/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/">MSC 每周两题：前言 &amp; 顺序结构</a></li><li><a href="/2020/11/20/2020-programming-of-the-week-2-branch/">MSC 每周两题：上周题解 &amp; 分支结构</a></li><li><a href="/2020/11/27/2020-programming-of-the-week-3-loop/">MSC 每周两题：上周题解 &amp; 循环结构</a></li><li><a href="/2020/12/15/2020-programming-of-the-week-4-array/">MSC 每周两题：上周题解 &amp; 数组</a></li><li><a href="/2020/12/25/2020-programming-of-the-week-5-string/">MSC 每周两题：上周题解 &amp; 字符串</a></li><li>MSC 每周两题：上周题解 &amp; 函数和结构体</li><li>MSC 每周两题：上周题解 &amp; 后记</li></ol><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里是成电微软学生俱乐部 2020 年度 C 语言学习 Guideline。虽然不少专业在大一上已经开设了 C 语言程序设计相关课程，但是仍有其他专业的同学没有学习 C 语言（比如计院 hhhh）。</p><p>本系列文章将用六个星期的时间讲述六个专题——————的题目。这些专题覆盖了编程入门（不仅是 C 语言）的最基本的要素，如果你已经精通了 C 语言（呃，是七天精通的那种精通），又正好在学习其他语言（如 Python、Java 亦或是 C# 等），你也可以参与其中，在学习的同时练习语法。</p><a id="more"></a><p>如果你还没有学习 C 语言，推荐翁恺 C 语言程序编程全系列，在 MOOC、<a href="https://www.bilibili.com/video/BV1sJ411E7St" target="_blank" rel="noopener">bilibili</a> 等视频网站上都能找到。（顺便安利翁恺老师的其他课程都很不错，老师很有人格魅力，声音还好听，女朋友就是看他的 Java 入门）。</p><p>不过，需要注意的是，每周一题专题并不是按照翁恺老师的 MOOC 的学习进度而设置的，而是使用了<a href="https://www.luogu.com.cn/" target="_blank" rel="noopener">洛谷</a>的程序设计入门题单。</p><p>洛谷是一个在线评测平台（Online Judge, OJ）。和平常的 <code>做题-对答案</code> 不同，在 OJ 中，你可以在线提交程序源代码（一般不限于 C 语言，根据系 OJ 支持情况而定），系统对源代码进行编译和执行，并通过预先设计的 <code>测试数据</code>（又称测试点）来检验程序源代码的正确性。OJ 常用于算法竞赛（如 OI、ACM 竞赛）中，也有面向求职者的 <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">Leetcode</a>，我们学校计算机学院的<a href="http://matu.uestc.edu.cn" target="_blank" rel="noopener">码图</a>、软件学院的 <a href="http://ostec.uestc.edu.cn/" target="_blank" rel="noopener">OSTEC</a>。</p><p><img src="2020-programming-of-the-week-1-preface-and-sequential/oj-ac.png" alt="成功提交并通过的正确示例"></p><p>对于洛谷，在提交代码以后，如果测试点显示 <code>AC(accepted)</code>，表示你提交的代码在这个测试点的输入下的输出与答案相同。如果所有测试点均为 <code>AC</code>，则<strong>系统认为</strong>你提交的代码是正确的，你会在右边收获一个绿色的 <code>Accepted</code>，你的个人主页的“通过”数也会 +1。</p><p>顺便一提，当代码复杂起来，如果想要严格证明代码、或者说算法的正确性，这是相当困难的。因此 OJ 普遍采用的方法是，使用多组测试样例（在 ACM 竞赛中，甚至可能上百、上千）来尽可能找到你的代码的错误。如果没有找到你的代码的错误，就<strong>认为</strong>你的代码是正确的（实际上并不一定是正确的）。</p><h2 id="本周题单：顺序结构"><a href="#本周题单：顺序结构" class="headerlink" title="本周题单：顺序结构"></a>本周题单：顺序结构</h2><p>回归正题，我们第一周的题单是<a href="https://www.luogu.com.cn/training/100" target="_blank" rel="noopener">顺序结构</a>。题单中有 12 题，但你只需要完成 <a href="https://www.luogu.com.cn/problem/P5704" target="_blank" rel="noopener">P5704 【深基2.例6】字母转换</a> 和 <a href="https://www.luogu.com.cn/problem/P5708" target="_blank" rel="noopener">P5708 【深基2.习2】三角形面积</a> 即可。学有余力的同学可以选做题单中的剩下题目。六周以后，总共完成了 12 题及以上的 MSCer，将在年会获得精美小礼品一份~</p><p>下周五晚八点前，我会提供这两道题目的 C 语言题解和简单讲解，同时放出下一周的题单。如果在完成过程中遇到了任何问题，也可以在 MSC 群里放出代码，大家一起讨论（推荐使用 <a href="https://paste.ubuntu.com/" target="_blank" rel="noopener">https://paste.ubuntu.com/</a> 粘贴代码，而不是把代码发到 QQ 聊天框、截图甚至使用手机拍电脑）。</p><p>最后，如果对这个版块有好的建议或意见（如题解不够详细、需要线下讲座等），欢迎私聊小灰晖~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系列目录&quot;&gt;&lt;a href=&quot;#系列目录&quot; class=&quot;headerlink&quot; title=&quot;系列目录&quot;&gt;&lt;/a&gt;系列目录&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2020/11/13/2020-programming-of-the-week-1-preface-and-sequential/&quot;&gt;MSC 每周两题：前言 &amp;amp; 顺序结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2020/11/20/2020-programming-of-the-week-2-branch/&quot;&gt;MSC 每周两题：上周题解 &amp;amp; 分支结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2020/11/27/2020-programming-of-the-week-3-loop/&quot;&gt;MSC 每周两题：上周题解 &amp;amp; 循环结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2020/12/15/2020-programming-of-the-week-4-array/&quot;&gt;MSC 每周两题：上周题解 &amp;amp; 数组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2020/12/25/2020-programming-of-the-week-5-string/&quot;&gt;MSC 每周两题：上周题解 &amp;amp; 字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MSC 每周两题：上周题解 &amp;amp; 函数和结构体&lt;/li&gt;
&lt;li&gt;MSC 每周两题：上周题解 &amp;amp; 后记&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这里是成电微软学生俱乐部 2020 年度 C 语言学习 Guideline。虽然不少专业在大一上已经开设了 C 语言程序设计相关课程，但是仍有其他专业的同学没有学习 C 语言（比如计院 hhhh）。&lt;/p&gt;
&lt;p&gt;本系列文章将用六个星期的时间讲述六个专题——————的题目。这些专题覆盖了编程入门（不仅是 C 语言）的最基本的要素，如果你已经精通了 C 语言（呃，是七天精通的那种精通），又正好在学习其他语言（如 Python、Java 亦或是 C# 等），你也可以参与其中，在学习的同时练习语法。&lt;/p&gt;
    
    </summary>
    
      <category term="C++" scheme="https://uestc-msc.github.io/categories/C/"/>
    
      <category term="MSC 每周两题" scheme="https://uestc-msc.github.io/categories/MSC-%E6%AF%8F%E5%91%A8%E4%B8%A4%E9%A2%98/"/>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>Use Git to Collaborate</title>
    <link href="https://uestc-msc.github.io/2020/10/07/2020-use-git-to-collaborate/"/>
    <id>https://uestc-msc.github.io/2020/10/07/2020-use-git-to-collaborate/</id>
    <published>2020-10-07T06:46:00.000Z</published>
    <updated>2021-02-24T10:39:20.979Z</updated>
    
    <content type="html"><![CDATA[<p>学会使用 Git 和 Github 与他人合作参与项目</p><p><a href="https://luosuu.github.io/post/use-git-to-collaborate/" target="_blank" rel="noopener">https://luosuu.github.io/post/use-git-to-collaborate/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学会使用 Git 和 Github 与他人合作参与项目&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://luosuu.github.io/post/use-git-to-collaborate/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:/
      
    
    </summary>
    
      <category term="Git" scheme="https://uestc-msc.github.io/categories/Git/"/>
    
    
      <category term="Luosuu" scheme="https://uestc-msc.github.io/tags/Luosuu/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Learn Python Path</title>
    <link href="https://uestc-msc.github.io/2020/10/03/2020-microsoft-learn-python-path/"/>
    <id>https://uestc-msc.github.io/2020/10/03/2020-microsoft-learn-python-path/</id>
    <published>2020-10-03T15:10:00.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Microsoft Learn 入门编程并激发创意</p><p><a href="https://luosuu.github.io/post/microsoft-learn-python-path/" target="_blank" rel="noopener">https://luosuu.github.io/post/microsoft-learn-python-path/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 Microsoft Learn 入门编程并激发创意&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://luosuu.github.io/post/microsoft-learn-python-path/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;h
      
    
    </summary>
    
    
      <category term="Luosuu" scheme="https://uestc-msc.github.io/tags/Luosuu/"/>
    
  </entry>
  
  <entry>
    <title>电子科技大学常用网站</title>
    <link href="https://uestc-msc.github.io/2020/09/04/2020-uestc-websites/"/>
    <id>https://uestc-msc.github.io/2020/09/04/2020-uestc-websites/</id>
    <published>2020-09-04T12:52:59.000Z</published>
    <updated>2021-02-24T10:39:20.979Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文更新于 2020.11.21，文中信息可能已失效。<br>更多信息可见：<a href="https://blog.lyh543.cn/others/something-about-uestc/" target="_blank" rel="noopener">https://blog.lyh543.cn/others/something-about-uestc/</a></p></blockquote><h2 id="常用网址"><a href="#常用网址" class="headerlink" title="常用网址"></a>常用网址</h2><p>最常用的网站推荐直接记域名，直接敲域名比在官网反复跳转快多了。</p><ul><li>教务系统：<a href="http://eams.uestc.edu.cn/eams" target="_blank" rel="noopener">http://eams.uestc.edu.cn/eams</a></li><li>一卡通，可进行挂失：<a href="http://ecard.uestc.edu.cn" target="_blank" rel="noopener">http://ecard.uestc.edu.cn</a></li><li>学生邮箱（<a href="#学生邮箱">注意事项</a>）：<a href="http://mail.std.uestc.edu.cn" target="_blank" rel="noopener">http://mail.std.uestc.edu.cn</a></li><li>教务处：<a href="http://www.jwc.uestc.edu.cn" target="_blank" rel="noopener">http://www.jwc.uestc.edu.cn</a><ul><li>教务系统联系方式一览表：<a href="http://www.jwc.uestc.edu.cn/web/News!view.action?id=64" target="_blank" rel="noopener">http://www.jwc.uestc.edu.cn/web/News!view.action?id=64</a></li><li>校历、全校课表、培养方案（电子版）、各类（查分、转专业）申请表、均可在教务处网站搜索到</li></ul></li><li>清水河畔（校内论坛）：<a href="https://bbs.uestc.edu.cn/" target="_blank" rel="noopener">https://bbs.uestc.edu.cn/</a><ul><li>校车 396路 通勤车时刻表：<a href="https://bbs.uestc.edu.cn/forum.php?mod=viewthread&amp;tid=1430861" target="_blank" rel="noopener">https://bbs.uestc.edu.cn/forum.php?mod=viewthread&amp;tid=1430861</a></li></ul></li><li>返校代理（<a href="#返校代理">注意事项</a>）：<a href="https://vpn.uestc.edu.cn/" target="_blank" rel="noopener">https://vpn.uestc.edu.cn/</a></li><li>图书馆预约研修室：<a href="http://reservelib.uestc.edu.cn/" target="_blank" rel="noopener">http://reservelib.uestc.edu.cn/</a></li><li>在线教材（官方只提供了少部分教材，且几乎没有课程提供 PDF）：<a href="http://zxkc.uestc.edu.cn/" target="_blank" rel="noopener">http://zxkc.uestc.edu.cn/</a></li></ul><a id="more"></a><p>学校官网是 <code>www.uestc.edu.cn</code>，必须加 <code>www</code>！<code>uestc.edu.cn</code> 域名是没有 A 记录的。教务处网站也是如此。</p><h2 id="学校地址"><a href="#学校地址" class="headerlink" title="学校地址"></a>学校地址</h2><p>中/英文官网拉到最下面即是。</p><div class="table-container"><table><thead><tr><th></th><th></th><th>中文</th><th>英文及邮编</th></tr></thead><tbody><tr><td>清水河</td><td>成都市高新区（西区）西源大道2006号</td><td>No.2006, Xiyuan Ave, West Hi-Tech Zone, 611731</td></tr><tr><td>沙河</td><td>成都市建设北路二段四号</td><td>No.4, Section 2, North Jianshe Road, 610054</td></tr><tr><td>九里堤</td><td>成都市九里堤西路8号</td><td>610031</td></tr></tbody></table></div><h2 id="学生邮箱"><a href="#学生邮箱" class="headerlink" title="学生邮箱"></a>学生邮箱</h2><ol><li>学生邮箱无需“激活账号”，可直接登录，默认密码是身份证号倒数第七位至倒数第二位。</li><li>目前尚不清楚学生邮箱在大一进校以后多久可用，保守估计这个时间在一个月以内。</li><li>学生邮箱可用于申请：<ul><li><a href="https://www.microsoft.com/zh-cn/education/products/office" target="_blank" rel="noopener">一个包含 1T Onedrive 空间的账号</a></li><li><a href="https://www.jetbrains.com/student/" target="_blank" rel="noopener">JetBrains 全家桶</a></li></ul></li><li>由于泥电学生邮箱是外包的且没有购买 SSL 证书，在邮箱客户端使用 IMAP、POP3 等不能使用 SSL 证书进行验证。强制要求 SSL 的客户端（如 Outlook for Android）似乎无法登陆学生邮箱（可以使用 Gmail 代替）。</li><li>由上条原因，以及推送可能不及时等问题，建议仅将学校邮箱用于申请上述学生优惠，不要作为主力邮箱。</li></ol><h2 id="返校代理"><a href="#返校代理" class="headerlink" title="返校代理"></a>返校代理</h2><p>登录 <a href="https://vpn.uestc.edu.cn/" target="_blank" rel="noopener">https://vpn.uestc.edu.cn/</a> 后即可通过在浏览器中修改网址达到用学校 IP 访问任意网址的效果。</p><p><a href="http://www-uestc-edu-cn-s.vpn.uestc.edu.cn:8118/" target="_blank" rel="noopener">http://www-uestc-edu-cn-s.vpn.uestc.edu.cn:8118/</a> 将会代理到 <a href="https://www.uestc.edu.cn/" target="_blank" rel="noopener">https://www.uestc.edu.cn/</a><br>可见，将原网址中的 <code>.</code> 改写为 <code>-</code> 即可成功代理。</p><p>以下为更多规则：</p><div class="table-container"><table><thead><tr><th>规则</th><th>例子</th><th>实际访问网站</th></tr></thead><tbody><tr><td>原网址中的 <code>.</code> 需改写为 <code>-</code></td><td></td></tr><tr><td>原网址中的 <code>-</code> 需改写为 <code>--</code></td><td></td></tr><tr><td>访问指定端口，需在后面加上 <code>-&lt;端口号&gt;-p</code></td><td><a href="http://www-uestc-edu-cn-80-p.vpn.uestc.edu.cn:8118/" target="_blank" rel="noopener">http://www-uestc-edu-cn-80-p.vpn.uestc.edu.cn:8118/</a></td><td><a href="http://www.uestc.edu.cn:80/" target="_blank" rel="noopener">http://www.uestc.edu.cn:80/</a></td></tr><tr><td>以 <code>https</code> 协议访问，需在最后加上 <code>-s</code></td><td><a href="http://www-uestc-edu-cn-s.vpn.uestc.edu.cn:8118/" target="_blank" rel="noopener">http://www-uestc-edu-cn-s.vpn.uestc.edu.cn:8118/</a></td><td><a href="https://www.uestc.edu.cn/" target="_blank" rel="noopener">https://www.uestc.edu.cn/</a></td></tr><tr><td>以 <code>https</code> 协议访问指定端口，使用 <code>-&lt;端口号&gt;-p-s</code></td><td><a href="http://www-uestc-edu-cn-443-p-s.vpn.uestc.edu.cn:8118/" target="_blank" rel="noopener">http://www-uestc-edu-cn-443-p-s.vpn.uestc.edu.cn:8118/</a></td><td><a href="https://www.uestc.edu.cn:443/" target="_blank" rel="noopener">https://www.uestc.edu.cn:443/</a></td></tr></tbody></table></div><h2 id="eduroam-的账号密码"><a href="#eduroam-的账号密码" class="headerlink" title="eduroam 的账号密码"></a>eduroam 的账号密码</h2><blockquote><p>来源：<a href="https://info.uestc.edu.cn/info/1044/1631.htm" target="_blank" rel="noopener">https://info.uestc.edu.cn/info/1044/1631.htm</a></p></blockquote><p>eduroam 联盟用户连接 SSID：<code>eduroam</code>，802.1x 认证，为全球 eduroam 联盟成员提供上网服务，eduroam 联盟内全球漫游。</p><p>我校师生的用户名为：<code>工资号或学号@uestc.edu.cn</code>，如：工资号 123456 对应的账号为 <code>123456@uestc.edu.cn</code>，密码为统一身份认证密码。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文更新于 2020.11.21，文中信息可能已失效。&lt;br&gt;更多信息可见：&lt;a href=&quot;https://blog.lyh543.cn/others/something-about-uestc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.lyh543.cn/others/something-about-uestc/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;常用网址&quot;&gt;&lt;a href=&quot;#常用网址&quot; class=&quot;headerlink&quot; title=&quot;常用网址&quot;&gt;&lt;/a&gt;常用网址&lt;/h2&gt;&lt;p&gt;最常用的网站推荐直接记域名，直接敲域名比在官网反复跳转快多了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;教务系统：&lt;a href=&quot;http://eams.uestc.edu.cn/eams&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://eams.uestc.edu.cn/eams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一卡通，可进行挂失：&lt;a href=&quot;http://ecard.uestc.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://ecard.uestc.edu.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学生邮箱（&lt;a href=&quot;#学生邮箱&quot;&gt;注意事项&lt;/a&gt;）：&lt;a href=&quot;http://mail.std.uestc.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mail.std.uestc.edu.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;教务处：&lt;a href=&quot;http://www.jwc.uestc.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.jwc.uestc.edu.cn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;教务系统联系方式一览表：&lt;a href=&quot;http://www.jwc.uestc.edu.cn/web/News!view.action?id=64&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.jwc.uestc.edu.cn/web/News!view.action?id=64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;校历、全校课表、培养方案（电子版）、各类（查分、转专业）申请表、均可在教务处网站搜索到&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;清水河畔（校内论坛）：&lt;a href=&quot;https://bbs.uestc.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.uestc.edu.cn/&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;校车 396路 通勤车时刻表：&lt;a href=&quot;https://bbs.uestc.edu.cn/forum.php?mod=viewthread&amp;amp;tid=1430861&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.uestc.edu.cn/forum.php?mod=viewthread&amp;amp;tid=1430861&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;返校代理（&lt;a href=&quot;#返校代理&quot;&gt;注意事项&lt;/a&gt;）：&lt;a href=&quot;https://vpn.uestc.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://vpn.uestc.edu.cn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;图书馆预约研修室：&lt;a href=&quot;http://reservelib.uestc.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://reservelib.uestc.edu.cn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线教材（官方只提供了少部分教材，且几乎没有课程提供 PDF）：&lt;a href=&quot;http://zxkc.uestc.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://zxkc.uestc.edu.cn/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="小灰晖" scheme="https://uestc-msc.github.io/tags/%E5%B0%8F%E7%81%B0%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>parcel速食指南</title>
    <link href="https://uestc-msc.github.io/2020/02/12/2020-parcel%E9%80%9F%E9%A3%9F%E6%8C%87%E5%8D%97/"/>
    <id>https://uestc-msc.github.io/2020/02/12/2020-parcel速食指南/</id>
    <published>2020-02-12T02:16:00.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="✨-前言"><a href="#✨-前言" class="headerlink" title="✨ 前言"></a>✨ 前言</h2><p>web前端发展速度以迅猛著称。js在出生以来，一直在经历一次又一次的变化。自从服务器端js(nodejs)出现到现在，前端技术群阀割据。当前已经形成了以webpack为核心，babel，等技术独霸一方的局面。</p><p>无论是想用什么框架，似乎搭建环境成为了最大的难题。web前端工程师，不知什么时候成为了配置文件工程师。</p><p>本文将带领大家认识一个新兴的打包工具parcel，为前端0基础从同学打造一篇速食指南。</p><a id="more"></a><h2 id="🍳-parcel简介"><a href="#🍳-parcel简介" class="headerlink" title="🍳 parcel简介"></a>🍳 parcel简介</h2><p>parcel是一个零配置打包工具。</p><p>对前端不了解的小伙伴们可能不知道，前端开发目前已经发展到了相当复杂的地步。学会html，css，js只是开始。项目的源码结构一定要便于人理解，但是项目层级的递增，文件数量增加都会导致网页性能的下降。加上源代码中有大量的注释，空行等无效部分，web前端项目从编写完到优化需要经历多个工序。诸如：代码压缩，资源合并，目录结构扁平化等等。当然，这些工序都有成熟的工具和方法来进行，并不需要开发人员烦恼具体的处理方法。打包工具正式因此产生的。不夸张的说，js现在已经完全像一个编译语言一样了。项目的源代码，与编译后的结果完全是两个样子。</p><p>打包工具的配置一直是个难题。webpack的配置，会随着项目使用开发技术的增加而增加。webpack配置文件，可以说是对快速原型开发最大的阻碍。所以，当前热门的web前端框架。如vue,react,angular都有自己的脚手架来方便的快速产生一个demo项目。而随着使用技术的增加，web前端开发者需要主动编辑webpack配置文件。这个时候仅仅是噩梦的开始。随之而来的，babel配置，ts配置将把程序员拉向深渊。</p><p>零配置，顾名思义，不需要写配置文件。这正是parcel存在的理由和意义。简而言之，parcel最大的优点：</p><ul><li>极速的原型开发(再也不需要管配置文件了)</li><li>降低前端入门难度</li></ul><p>这些，也正是我带来这篇教程的理由。</p><h2 id="📕-菜单"><a href="#📕-菜单" class="headerlink" title="📕 菜单"></a>📕 菜单</h2><p>接下来我们进行一些准备工作</p><ol><li>安装最新版本的node和npm(服务端js的执行环境和包管理器)</li><li>没了(好吧就这样吧)</li></ol><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">nodejs首页链接</a>，到这里下载一个nodejs。并且正确的配置环境变量等东西(我猜安装程序是自动配置的，毕竟python会，如果不是问问百度怎么装好这个东西)</p><h2 id="🍽-开始"><a href="#🍽-开始" class="headerlink" title="🍽 开始"></a>🍽 开始</h2><p><a href="https://parceljs.org/getting_started.html" target="_blank" rel="noopener">parcel快速开始</a>，到这里参考parcel的官方教程。不过这个官方教程和typescript的一样，开头不由分说的直接要你全局安装parcel。这样的瓜皮操作会让你的项目在别的地方跑不起来。建议按照我的来走(不过肯定有人爱走弯路)。</p><h4 id="🍎-初始化项目"><a href="#🍎-初始化项目" class="headerlink" title="🍎 初始化项目"></a>🍎 初始化项目</h4><p>新建一个空的文件夹，作为项目目录。进入其中，按住shift右键单击，选择<strong>在此处打开powershell窗口</strong>。这个选项不按住shift没有，是一个Windows的神奇操作。当然，非Windows用户，我就当你什么都懂了😁。</p><p>输入以下命令初始化项目<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></tbody></table></figure><p></p><p>新建.gitignore文件，输入以下内容<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">.vscode</span><br><span class="line">.cache</span><br><span class="line">dist</span><br><span class="line"></span><br><span class="line"># Logs</span><br><span class="line">logs</span><br><span class="line">*.log</span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br><span class="line"></span><br><span class="line"># Runtime data</span><br><span class="line">pids</span><br><span class="line">*.pid</span><br><span class="line">*.seed</span><br><span class="line">*.pid.lock</span><br><span class="line"></span><br><span class="line"># Directory for instrumented libs generated by jscoverage/JSCover</span><br><span class="line">lib-cov</span><br><span class="line"> </span><br><span class="line"># Coverage directory used by tools like istanbul</span><br><span class="line">coverage</span><br><span class="line"> </span><br><span class="line"># nyc test coverage</span><br><span class="line">.nyc_output</span><br><span class="line"> </span><br><span class="line"># Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)</span><br><span class="line">.grunt</span><br><span class="line"> </span><br><span class="line"># Bower dependency directory (https://bower.io/)</span><br><span class="line">bower_components</span><br><span class="line"> </span><br><span class="line"># node-waf configuration</span><br><span class="line">.lock-wscript</span><br><span class="line"> </span><br><span class="line"># Compiled binary addons (https://nodejs.org/api/addons.html)</span><br><span class="line">build/Release</span><br><span class="line"> </span><br><span class="line"># Dependency directories</span><br><span class="line">node_modules/</span><br><span class="line">jspm_packages/</span><br><span class="line"> </span><br><span class="line"># Typescript v1 declaration files</span><br><span class="line">typings/</span><br><span class="line"> </span><br><span class="line"># Optional npm cache directory</span><br><span class="line">.npm</span><br><span class="line"> </span><br><span class="line"># Optional eslint cache</span><br><span class="line">.eslintcache</span><br><span class="line"> </span><br><span class="line"># Optional REPL history</span><br><span class="line">.node_repl_history</span><br><span class="line"> </span><br><span class="line"># Output of 'npm pack'</span><br><span class="line">*.tgz</span><br><span class="line"> </span><br><span class="line"># Yarn Integrity file</span><br><span class="line">.yarn-integrity</span><br><span class="line"> </span><br><span class="line"># dotenv environment variables file</span><br><span class="line">.env</span><br></pre></td></tr></tbody></table></figure><p></p><p>gitignore是我从网上随便找的一份稍加修改的，你可以用的时候自己改，比如mac用户加上.DS_Store等</p><p>接下来初始化git仓库</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m"init"</span><br></pre></td></tr></tbody></table></figure><p>你要是git都没有，或者不会用。emmm，我怎么 隐 隐 约 约 记得我这个文章就是发布在GitHub Pages上面的呢？</p><p>接下来按照自己的情况，决定是否把仓库发布到诸如github，gitlab，gitee等地方备份或者分享。</p><h4 id="🍎-安装依赖"><a href="#🍎-安装依赖" class="headerlink" title="🍎 安装依赖"></a>🍎 安装依赖</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -D parcel-bundler</span><br><span class="line">npm install normalize.css</span><br></pre></td></tr></tbody></table></figure><p>分别安装了parcel打包工具(开发依赖)，和normalize.css(项目依赖)。这两者的区别在于parcel是用来打包的，我们项目的最终结果里面没有他(工具人)。normalize.css是屏蔽浏览器见差异的初始化样式。</p><h4 id="🍎-代码编写"><a href="#🍎-代码编写" class="headerlink" title="🍎 代码编写"></a>🍎 代码编写</h4><p>创建index.html 和 main.js</p><p>创建<strong>index.html</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang="en"&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset="utf-8"&gt;</span><br><span class="line">    &lt;title&gt;养🐷计划&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div id="app"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script src="./src/main.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure><p></p><p>创建<strong>src</strong>文件夹，在其中创建<strong>main.js</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import Vue from 'vue'</span><br><span class="line">import App from './App'</span><br><span class="line"></span><br><span class="line">new Vue({</span><br><span class="line">  el: '#app',</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p></p><p>在<strong>src</strong>文件夹中，创建<strong>App.vue</strong><br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class="app-root"&gt;</span><br><span class="line">    &lt;div class="display"&gt;你的体重：{{weight}}Kg&lt;/div&gt;</span><br><span class="line">    &lt;div class="eat" @click="eat"&gt;吃&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default {</span><br><span class="line">  data() {</span><br><span class="line">    return {</span><br><span class="line">      weight: 55,</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  methods: {</span><br><span class="line">    eat() {</span><br><span class="line">      this.weight += 1</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">}</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.app-root {</span><br><span class="line">  display: flex;</span><br><span class="line">  padding: 30px;</span><br><span class="line">}</span><br><span class="line">.display {</span><br><span class="line">  font-size: 42px;</span><br><span class="line">}</span><br><span class="line">.eat {</span><br><span class="line">  font-size: 36px;</span><br><span class="line">  color: red;</span><br><span class="line">  border: 5px solid red;</span><br><span class="line">  height: 50px;</span><br><span class="line">  width: 50px;</span><br><span class="line">  border-radius: 50px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  user-select: none;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  margin-left: 30px;</span><br><span class="line">}</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></tbody></table></figure><p></p><h4 id="🍎-构建脚本在package-json的scripts中添加两个字段，如果你的项目里面原来是这样"><a href="#🍎-构建脚本在package-json的scripts中添加两个字段，如果你的项目里面原来是这样" class="headerlink" title="🍎 构建脚本在package.json的scripts中添加两个字段，如果你的项目里面原来是这样"></a>🍎 构建脚本在package.json的scripts中添加两个字段，如果你的项目里面原来是这样</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": {</span><br><span class="line">  "test": "echo \"Error: no test specified\" &amp;&amp; exit 1"</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>添加完应该是这样<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"scripts": {</span><br><span class="line">  "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",</span><br><span class="line">  "dev": "parcel index.html",</span><br><span class="line">  "build": "parcel build index.html"</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p></p><h4 id="🍎-运行开发服务器"><a href="#🍎-运行开发服务器" class="headerlink" title="🍎 运行开发服务器"></a>🍎 运行开发服务器</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></tbody></table></figure><p>进去吃点东西</p><h4 id="🍎-打包"><a href="#🍎-打包" class="headerlink" title="🍎 打包"></a>🍎 打包</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></tbody></table></figure><p>运行命令后产生dist文件夹，里面的内容是要发布到服务器的最终结果。如果你想试试但是没有服务器，可以自己弄个GitHub Pages。然后给自己的朋友玩一玩。</p><h2 id="🍇-总结"><a href="#🍇-总结" class="headerlink" title="🍇 总结"></a>🍇 总结</h2><p>这篇文章带大家了解了以下parcel的基本使用方法。里面使用了vue框架，但是没有进行任何配置，拿来就用。同样，如果你喜欢，可以直接用react，pug，less，sass等技术。最夸张的，甚至可以直接在前端项目中写rust😲。这会自动被编译成wasm。</p><p>最后，文章写的仓促，欢迎大家提出意见和建议，指出错误。</p><p>当然，欢迎投喂。</p><p>作者QQ：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1360668777&amp;site=oicqzone.com&amp;menu=yes" target="_blank" rel="noopener">pc</a> or <a href="mqqwpa://im/chat?chat_type=wpa&amp;uin=1360668777&amp;version=1&amp;src_type=web&amp;web_src=oicqzone.com" target="_blank" rel="noopener">mobile</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;✨-前言&quot;&gt;&lt;a href=&quot;#✨-前言&quot; class=&quot;headerlink&quot; title=&quot;✨ 前言&quot;&gt;&lt;/a&gt;✨ 前言&lt;/h2&gt;&lt;p&gt;web前端发展速度以迅猛著称。js在出生以来，一直在经历一次又一次的变化。自从服务器端js(nodejs)出现到现在，前端技术群阀割据。当前已经形成了以webpack为核心，babel，等技术独霸一方的局面。&lt;/p&gt;
&lt;p&gt;无论是想用什么框架，似乎搭建环境成为了最大的难题。web前端工程师，不知什么时候成为了配置文件工程师。&lt;/p&gt;
&lt;p&gt;本文将带领大家认识一个新兴的打包工具parcel，为前端0基础从同学打造一篇速食指南。&lt;/p&gt;
    
    </summary>
    
      <category term="web前端" scheme="https://uestc-msc.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="https://uestc-msc.github.io/categories/web%E5%89%8D%E7%AB%AF/javascript/"/>
    
    
      <category term="万事屋" scheme="https://uestc-msc.github.io/tags/%E4%B8%87%E4%BA%8B%E5%B1%8B/"/>
    
  </entry>
  
  <entry>
    <title>计算机的数值表示和运算</title>
    <link href="https://uestc-msc.github.io/2019/11/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%95%B0%E5%80%BC%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/"/>
    <id>https://uestc-msc.github.io/2019/11/04/计算机的数值表示和运算/</id>
    <published>2019-11-04T11:15:24.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><p>我们都知道计算机底层数值都是二进制的（由高低电平表示）。而我们生活中常用十进制，同时一些场合下也会用16进制。因此首先我们需要知道进制之间如何转换。</p><a id="more"></a><h3 id="二进制转十六进制"><a href="#二进制转十六进制" class="headerlink" title="二进制转十六进制"></a>二进制转十六进制</h3><p>二进制数以小数点为界，整数部分从小数点从左到右数，每4位分为一组，不足四位的时候在左端补0；小数部分从小数点从右往左数，每四位为一组，不足四位则在右端补0。然后每组按照二进制数与十六进制数对应关系转换。因为2的四次方为16，所以十六进制的每单个数都可以用四位二进制数表示出来。</p><h3 id="十六进制转二进制"><a href="#十六进制转二进制" class="headerlink" title="十六进制转二进制"></a>十六进制转二进制</h3><p>直接每位十六进制数都对应转换为四位二进制数即可。</p><h3 id="二进制转十进制"><a href="#二进制转十进制" class="headerlink" title="二进制转十进制"></a>二进制转十进制</h3><script type="math/tex; mode=display">(101.01)_2=1*2^2+0*2^1+1*2^0+0*2^-1+1*2^-2</script><h3 id="十进制转二进制"><a href="#十进制转二进制" class="headerlink" title="十进制转二进制"></a>十进制转二进制</h3><h4 id="十进制整数"><a href="#十进制整数" class="headerlink" title="十进制整数"></a>十进制整数</h4><p>十进制数不断除二，记录下每一次的余数，直到商为0。先得到的余数是二进制中的低位，后得到的是二进制整数中的高位。</p><h4 id="十进制小数"><a href="#十进制小数" class="headerlink" title="十进制小数"></a>十进制小数</h4><p>小数位不断乘二，记录下每一次结果的整数位（当然只有0或1），直到小数位为0。先得到的整数位是二进制中的高位，后得到的整数位是二进制中的低位。</p><script type="math/tex; mode=display">0.3125*2=0.625 \\0.625*2=1.25\\0.25*2=0.5\\0.5*2=1</script><p>因此记录下来的二进制数为0.0101。即</p><script type="math/tex; mode=display">0.3125 = (0.0101)_2</script><p>当然存在无法达到小数位为0的情况。视精度进行取舍，假如要求五位精度，求到第六位看第六位是0还是1，如果是0直接舍去，如果是1则在第五位进位。</p><h2 id="补码制表示二进制数"><a href="#补码制表示二进制数" class="headerlink" title="补码制表示二进制数"></a>补码制表示二进制数</h2><p>上面我们讨论的二进制数都是<code>无符号数</code>，也就是无法用来表示这个数的正负。容易得知无符号数的表示范围是</p><script type="math/tex; mode=display">[0,2^n-1]</script><p>我们思考一种简单的标志正负的方式，如果用n位来表示一个数，那么我们用最高位来标志这个数的正负，一般最高位为0代表正数，最高位为1代表负数。此时最高位我们称为<code>符号位</code>,剩余的n-1位称为<code>数值位</code>。带有符号的数我们称之为<code>符号数</code>。</p><p>考虑此时的n位二进制数的表示范围，以四位为例，对正数而言最大为0111，负数的表示范围为1111（-8）到1001（-1），此时0有1000和0000两种表示方法。也就是表示范围为</p><script type="math/tex; mode=display">[-2^{n-1} , 2^{n-1}-1]</script><p>但是这样做会增加运算逻辑的复杂程度，因为加法器要先检查操作，然后再检查二者的符号：符号相同则将二者数值位相加然后赋给结果相同的符号位；如果符号不同还需要比较二者数值部分的大小，用较大的减去较小的，然后赋给结果较大的操作数的符号。</p><p>因此我们引进<code>补码制</code>来表示符号数。实际中的计算机符号数都是用补码制表示的。所以以后符号数就等同于补码制二进制数。</p><h3 id="补码运算"><a href="#补码运算" class="headerlink" title="补码运算"></a>补码运算</h3><p>我们先来了解一下补码：一个n位二进制数D的补码为</p><script type="math/tex; mode=display">2^n-D_2</script><p>求补码的运算我们称之为补码运算。</p><p>补码运算可以变形</p><script type="math/tex; mode=display">2^n-D\\=(2^n-1-D)+1</script><p>而$2^n-1-D$实际就是n位全1二进制数减去D，相当于对D取反。也就是说求D的补码的过程实际可以变成求D的补码然后再加一。这个运算过程对计算机硬件来说比减法容易得多。</p><h3 id="补码制表示规则和性质"><a href="#补码制表示规则和性质" class="headerlink" title="补码制表示规则和性质"></a>补码制表示规则和性质</h3><p>在补码制下同样用最高位表示符号，且0为正，1为负。</p><p>十进制数3的四位补码制二进制数同样为0011，而补码制下的负数为正数的补码。也就是-3表示为</p><script type="math/tex; mode=display">1100_2+1=1101_2</script><p>如果你对补码制下的负数再进行补码运算，会得到该数的相反数，也就是变回正数。</p><script type="math/tex; mode=display">0010_2+1=0011_2</script><p>这使得在补码制下正数与负数的相互转换非常方便，一对相反数互为对方的补码。</p><p>考虑n位补码制二进制数的表示范围，以4位为例：</p><p>正数最大为0111</p><p>负数可以从 1000（-8）～1111（-1）<em>注意和非补码制的区别</em></p><p>0为0000，且0的补码仍为0000。</p><p>也就是</p><script type="math/tex; mode=display">[-2^{n-1},2^{n-1}-1]</script><h4 id="补码制下的拓展"><a href="#补码制下的拓展" class="headerlink" title="补码制下的拓展"></a>补码制下的拓展</h4><p>对于无符号数，由于没有符号，从4位二进制数拓展到8位只需要在左端加四个0。称这种拓展方式位<code>零拓展</code></p><p>对于符号数，我们需要考虑它的符号，拓展的规则是直接按照它的符号位进行拓展，也就是1101拓展到8位就表示为了11111101。</p><p>我们可以求一下拓展前后的补码验证一下，前者的补码为0011，也就是3，后者为00000011，也是3。</p><p>对符号数的位数拓展方式我们称为<code>符号拓展</code></p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><h3 id="加减"><a href="#加减" class="headerlink" title="加减"></a>加减</h3><p>补码制的提出是为了简化运算。在补码制下运算不需要考虑符号位，符号位直接参与运算即可。并且如果操作为减法，那么就对后面的操作数求补码然后按加法运算即可。而且如果最高位产生了进位直接舍去最高位进位即可。</p><script type="math/tex; mode=display">1110+1010=1000</script><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><p>运算正确的结果超出了给定的取值范围，就是溢出。这里给出的取值范围就是n位二进制补码表示的范围。</p><p>最高位进位和溢出没有直接关系，可以证明异号相加不会溢出，同号相加才有可能溢出。</p><p>如</p><script type="math/tex; mode=display">0100+0110=1010</script><p>正确结果10超出了四位符号数的表示范围。</p><p>判断溢出的方法很简单，如果两个相同符号的数相加，运算结果的符号位变化，那么就可以判断产生了溢出。</p><h3 id="乘除"><a href="#乘除" class="headerlink" title="乘除"></a>乘除</h3><p>略</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><h4 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h4><p>总位数不变</p><p>左移:右端直接补0，1110左移两位—1000</p><p>逻辑右移：左端直接补0，1110逻辑右移两位—0011</p><p>算术右移：左端根据符号位补，1110算术右移—1111</p><p>左移和算术右移本质为乘2的n次方（不丢有效位1的情况下）</p><h4 id="按位运算"><a href="#按位运算" class="headerlink" title="按位运算"></a>按位运算</h4><p>省</p><h2 id="浮点数的表示和运算"><a href="#浮点数的表示和运算" class="headerlink" title="浮点数的表示和运算"></a>浮点数的表示和运算</h2><p>我们现在开始考虑如何来表示小数。</p><p>首先确定正负，我们还是取最高位为符号位，值用S表示。</p><p>先不考虑小数点在哪里，先将这个值用无符号数的方式表示出来，这个过程中我们需要确定我们要取多少位，也就是有效长度。</p><p>假设我们取a位有效长度，然后用a位的空间存储这个有效值A。</p><p>最后我们通过移位的方式来确定小数点在哪里，实现方法是在后面用n位的长度用补码的方式存一个<code>阶数</code>,小数点从有效值的最右端根据阶数的值E移位。</p><p>根据标准二进制浮点数运算标准IEEE-754，移位应该进行到有效值的最高位的后一位，也就是有效值那里的实际值永远是1.x，也就是在该规则方式下，我们用</p><script type="math/tex; mode=display">(-1)^S*1.x*2^E</script><p>来表示带有小数部分的数。x我们称为尾数部分。</p><p>在实际的存储中，如果尾数部分长度为m，那么a=m+1，因为1是公有的所以不需要特别去表示它，直接表示x的部分就行了，也因此存在一个隐藏位1。</p><p>实际中我们需要经常比较阶数部分，为了方便比较，阶数部分实际存储的值都是<code>阶数E+2^(n-1)-1</code>,阶数部分存储的值我们称为<code>阶码</code>，其范围就变成了[000···000, 111···111]，实际表示的范围<code>[-2^(n-1)+1,2^(n-1)]</code>，这样比较两个浮点数的阶数就很方便了，直接比较的是阶码也就是无符号二进制数。</p><p>根据浮点数标准IEEE-754，有两种浮点数，即单精度浮点数和双精度浮点数。</p><p>二者的符号位都是1位。单精度的阶码位数有8位，尾数有23位；双精度阶码有11位，尾数有52位。</p><h3 id="几个特殊值"><a href="#几个特殊值" class="headerlink" title="几个特殊值"></a>几个特殊值</h3><p>浮点数0:尾数全为0，阶码全为0</p><p>无穷：尾数全为0，阶码全为1</p><p>无效操作数：尾数不全为0，但阶码全为1</p><p>因此实际储存中为了正常表示非0浮点数，阶码不能全为1或者0。</p><h3 id="浮点数运算"><a href="#浮点数运算" class="headerlink" title="浮点数运算"></a>浮点数运算</h3><ol><li>移位使得两个数的阶码相等，小阶去对等大阶，不要忘记了隐藏位1。</li><li>尾数作运算，为了对应可能产生的进位，需要把隐藏位拓展为两位01。</li><li>将隐藏位恢复为1，化为标准的浮点数</li></ol><p>如果阶码减小到全为0，说明结果的指数太小，出现下溢；如果运算后阶码全变成1，说明结果的指数太大出现上溢。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;进制转换&quot;&gt;&lt;a href=&quot;#进制转换&quot; class=&quot;headerlink&quot; title=&quot;进制转换&quot;&gt;&lt;/a&gt;进制转换&lt;/h2&gt;&lt;p&gt;我们都知道计算机底层数值都是二进制的（由高低电平表示）。而我们生活中常用十进制，同时一些场合下也会用16进制。因此首先我们需要知道进制之间如何转换。&lt;/p&gt;
    
    </summary>
    
      <category term="科普" scheme="https://uestc-msc.github.io/categories/%E7%A7%91%E6%99%AE/"/>
    
    
      <category term="Luosuu" scheme="https://uestc-msc.github.io/tags/Luosuu/"/>
    
  </entry>
  
  <entry>
    <title>Python基础杂烩</title>
    <link href="https://uestc-msc.github.io/2019/10/15/Python%E5%9F%BA%E7%A1%80%E6%9D%82%E7%83%A9/"/>
    <id>https://uestc-msc.github.io/2019/10/15/Python基础杂烩/</id>
    <published>2019-10-15T13:53:56.000Z</published>
    <updated>2021-02-24T10:39:20.951Z</updated>
    
    <content type="html"><![CDATA[<p>2019Python学习小组持续更新博客二, 这篇文章列出了一些我认为Python学习者应当知道的一些基础内容</p><a id="more"></a><h2 id="Python解释器"><a href="#Python解释器" class="headerlink" title="Python解释器"></a>Python解释器</h2><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><div class="table-container"><table><thead><tr><th>版本</th><th>实现方式</th><th>特点</th></tr></thead><tbody><tr><td>CPython</td><td>C语言写的Python</td><td>速度快</td></tr><tr><td>JPython</td><td>由Java编写的Python</td><td>可以直接调用Java的各种函数库</td></tr><tr><td>PyPy</td><td>由rPython编写的Python</td><td>更灵活, 易于使用和试验</td></tr><tr><td>IronPython</td><td>以. NET和Mono实现的Python</td><td>面向NET和ECMA CLI的Python实现</td></tr><tr><td>ZhPy</td><td>只是把Python翻译了一遍而已</td><td>又称中蟒, 可以完全用中文编程. 但中蟒目前已经停止更新了.</td></tr></tbody></table></div><p>我们通常所说的Python是<strong>CPython</strong>, 👇Python官方页面提供的是CPython</p><p><img src="Python基础杂烩/1565579206457.png" alt="1565579206457"></p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>Python这种语言有<strong>Python2</strong>和<strong>Python3</strong>两个版本, 两者语法有少许不同, 比如Python2和Python3中<code>print()</code>的使用有区别, Python2和Python3中<code>input()</code>接受的数据类型有区别等.</p><p>最新的Python2对大部分Python2, 3不同的语法做了兼容, 而在Python3对Python2的语法兼容性很差, 但是提供了一个叫<a href="https://docs.python.org/zh-cn/3.7/library/2to3.html" target="_blank" rel="noopener">2to3</a>的脚本帮助我们将Python2的程序转换为Python3的程序.</p><h2 id="哲学"><a href="#哲学" class="headerlink" title="哲学"></a>哲学</h2><p><strong>万物皆对象</strong></p><p>python在设计初始是一种<strong>面向对象</strong>语言.</p><p>💡 面向对象是一种<strong>编程范式</strong></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>Python是一门<strong>动态类型</strong>语言</p><h3 id="类型注解"><a href="#类型注解" class="headerlink" title="类型注解"></a>类型注解</h3><p>在Python3中有了一个新特性: <strong>类型注解</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x:int, y:int)</span> -&gt; int:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br></pre></td></tr></tbody></table></figure><p>正如其名, 注解只是标注一下, 有了类型注解的程序和没有类型注解的程序运行起来没有区别, 但它能帮助程序员更好的发现问题, 也能让IDE提供更准确的代码补全和语法检查.</p><h3 id="类型检查"><a href="#类型检查" class="headerlink" title="类型检查"></a>类型检查</h3><p>有时候为了保证程序的严谨性我们会检查一下变量是不是我们设想它应该是的类型, 这个时候我们用 <code>isinstance()</code></p><p>之所以不使用 <code>type()</code> 是因为 <code>type()</code> 不会认为子类是一种父类类型, 不考虑继承关系. 举例说明:</p><p><img src="Python基础杂烩/1571027624789.png" alt="1571027624789"></p><h3 id="不可变对象"><a href="#不可变对象" class="headerlink" title="不可变对象"></a>不可变对象</h3><p>❗️ <strong>我们可以给不可变对象重新赋值, 但其内存地址会改变</strong>. 以下是体现给可变对象/不可变对象重新赋值时它们的内存地址变化的例子.</p><p>💡 <code>id()</code>能获取一个变量的内存地址</p><p><img src="Python基础杂烩/1571022411897.png" alt="1571022411897"></p><h4 id="Number-数字"><a href="#Number-数字" class="headerlink" title="Number (数字)"></a>Number (数字)</h4><ul><li>int (整数)</li><li>long (长整数)</li><li>float (浮点数, 即小数)</li><li>bool (布尔值, 即 <code>True</code> 和 <code>False</code> )</li></ul><p>Python中的Number我认为是比较特殊的, 因为它<strong>在内存中占用的空间大小是变动</strong>的.(在CPython中是如此, 但不知道为什么在IronPython下不是)</p><p>💡 用<code>sys.getsizeof()</code>可以知道一个变量的占用的内存大小</p><p><img src="Python基础杂烩/1571022628668.png" alt="1571022628668"></p><h4 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String (字符串)"></a>String (字符串)</h4><h4 id="Tuple-元组"><a href="#Tuple-元组" class="headerlink" title="Tuple (元组)"></a>Tuple (元组)</h4><h3 id="可变对象"><a href="#可变对象" class="headerlink" title="可变对象"></a>可变对象</h3><p>可变对象可能带来的危险举例:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(l = [])</span>:</span></span><br><span class="line">    l.append(<span class="string">'add'</span>)</span><br><span class="line">    print(l)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">myfunc([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">myfunc([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">myfunc()</span><br></pre></td></tr></tbody></table></figure><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List (列表)"></a>List (列表)</h4><p>💡 <strong>string</strong>和<strong>tuple</strong>都是特殊的<strong>list</strong></p><h4 id="Set-集合"><a href="#Set-集合" class="headerlink" title="Set (集合)"></a>Set (集合)</h4><h4 id="Dictionary-字典"><a href="#Dictionary-字典" class="headerlink" title="Dictionary (字典)"></a>Dictionary (字典)</h4><p>👇 在网上偷的<strong>string, tuple, list, dictionary的突出区别比较</strong>.</p><div class="table-container"><table><thead><tr><th>名字</th><th>是否可变</th><th>是否可迭代</th><th>是否可切片</th><th>访问方式</th><th>写法举例</th></tr></thead><tbody><tr><td>string</td><td>no</td><td>yes</td><td>yes</td><td>下标索引</td><td>“abcd”</td></tr><tr><td>tuple</td><td>no</td><td>yes</td><td>yes</td><td>下标索引</td><td>(‘a’,‘b’,‘c’,‘d’,‘abcd’)</td></tr><tr><td>list</td><td>yes</td><td>yes</td><td>yes</td><td>下标索引</td><td>[‘a’,‘b’,‘c’,‘d’,‘abcd’]</td></tr><tr><td>dictionary</td><td>yes</td><td>yes</td><td>no</td><td>关键字索引</td><td>{‘1’:‘a’,‘2’:‘b’}</td></tr></tbody></table></div><h3 id="Python中有关对象需要注意的问题"><a href="#Python中有关对象需要注意的问题" class="headerlink" title="Python中有关对象需要注意的问题"></a>Python中有关对象需要注意的问题</h3><p>python中向函数传递参数只是<strong>引用传递</strong>: 如果参数为可变对象, 在函数中变化会影响引用的这个变量, 而不可变对象不会. 在向类传递参数时也是如此.</p><p><img src="Python基础杂烩/1571033275137.png" alt="1571033275137"></p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="Python内置帮助文档"><a href="#Python内置帮助文档" class="headerlink" title="Python内置帮助文档"></a>Python内置帮助文档</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help()</span><br></pre></td></tr></tbody></table></figure><p>调用<code>help()</code>后就会进入Python内置帮助文档, 然后输入想查的类名/函数名/属性名就可以看到对应的帮助文档.</p><p>:bulb: 要注意输入的只有名字, 不带括号什么的, 以及要看一个包里的函数文档时需要先引用该包. 比如如果想查看<strong>time.time()</strong>的帮助文档, 首先<code>import time</code>, 然后输入<code>help()</code>进入帮助文档, 然后输入<code>time.time</code>, 就会看到<strong>time.time()</strong>函数的帮助文档. 按一次<kbd>q</kbd>退出<strong>time.time()</strong>的文档, 再按一次<kbd>q</kbd>退出帮助文档返回交互式Python界面.</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>在Python中 <code>#</code> 开头的为注释</p><h4 id="特殊注释"><a href="#特殊注释" class="headerlink" title="特殊注释"></a>特殊注释</h4><h5 id="shebang"><a href="#shebang" class="headerlink" title="shebang"></a>shebang</h5><p>shenbang (hashbang) 指的是以 <code>#!</code> 开头的语句. Linux操作系统的程序加载器会分析 Shebang 后的内容，将这些内容作为解释器指令，并调用该指令，并将载有 Shebang 的文件路径作为该解释器的参数. 因为在很多语言中以 <code>#</code> 开头的是注释, 所以不会影响程序.</p><h5 id="编码格式"><a href="#编码格式" class="headerlink" title="编码格式"></a>编码格式</h5><p>有的python文件是这么开头的:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br></pre></td></tr></tbody></table></figure><p>第一行是给<strong>Linux系统</strong>的程序加载器看的, 因此在Windows下不需要这句, 第二句是指定文件的编码格式为<strong>UTF-8</strong>, 避免文件中的<strong>非ASCII字符</strong>被识别为乱码.</p><h5 id="docstring"><a href="#docstring" class="headerlink" title="docstring"></a>docstring</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(int x, int y)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    这里是docstring, 是特殊的注释, 能让IDE, 编辑器在鼠标移动到有docstring的函数, 类上时显示这段docstring</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">a = func(i)</span><br></pre></td></tr></tbody></table></figure><h3 id="条件语句及循环"><a href="#条件语句及循环" class="headerlink" title="条件语句及循环"></a>条件语句及循环</h3><h4 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if, elif, else"></a>if, elif, else</h4><p>下面是按a &lt; 10, 10 &lt; a &lt; 20, 20 &lt; a &lt; 30, a &gt; 30分类的举例.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">elif</span> a &lt; <span class="number">20</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">elif</span> a &lt; <span class="number">30</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></tbody></table></figure><p>另外有一种one liner会很喜欢的用法:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">2</span> <span class="keyword">if</span> <span class="number">2</span> &gt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">4</span></span><br></pre></td></tr></tbody></table></figure><p>上面这句与下面这句等效.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">2</span> &gt; <span class="number">3</span>:</span><br><span class="line">    a = <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    a = <span class="number">4</span></span><br></pre></td></tr></tbody></table></figure><h4 id="生成器-·迭代器·range"><a href="#生成器-·迭代器·range" class="headerlink" title="生成器 ·迭代器·range"></a>生成器 ·迭代器·range</h4><p>语法类似于<a href="#切片">切片</a></p><h3 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h3><p><strong>推导式comprehensions</strong>（又称解析式）, 是Python的一种独有特性.<strong>推导式是可以从一个数据序列构建另一个新的数据序列的结构体</strong>. 换句话说能从一组数据中求出满足条件的新数据, 比如a, b两个等长列表中都为偶数的项的乘积. 共有三种推导式, 在Python2和3 中都有支持:</p><ul><li>列表推导式</li><li>字典推导式</li><li>集合推导式</li></ul><p>列表推导式的语法:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l = [output_expression <span class="keyword">for</span> out_exp <span class="keyword">in</span> input_list <span class="keyword">if</span> expression]</span><br></pre></td></tr></tbody></table></figure><p>使用举例:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">a = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">3</span> <span class="keyword">is</span> <span class="number">0</span>]</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">names = [<span class="string">'Bob'</span>,<span class="string">'Tom'</span>,<span class="string">'alice'</span>,<span class="string">'Jerry'</span>,<span class="string">'Wendy'</span>,<span class="string">'Smith'</span>]</span><br><span class="line">LONG_NAMES = [name.upper() <span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> len(name)&gt;<span class="number">3</span>]</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">a = [x*y <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">if</span> x &gt; <span class="number">2</span> <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">if</span> y &lt; <span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><p>因为tuple, string其实都是特殊的列表, 所以列表, 字符串, 元组都可以进行切片.</p><p>语法: l_sliced = a[begin : end : step]</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">l_sliced = l[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure><p>在没有<strong>numpy</strong>库的情况下<strong>多维切片</strong>是通过推导式实现的:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">b = [a[i][:<span class="number">-1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">3</span>)]</span><br></pre></td></tr></tbody></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>💡 要注意函数名后的 <code>()</code> 也是一种运算符, 称为<strong>函数调用运算符</strong>. 如果调用函数的时候不加()只会创建一个该函数的对象而不会调用它.</p><h4 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h4><p>python中以 <code>def</code> 关键字定义函数, 结构如下:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名<span class="params">(参数列表)</span>:</span></span><br><span class="line">    函数主体</span><br></pre></td></tr></tbody></table></figure><p>python中的函数可以有返回值也可以没有返回值</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(l)</span>:</span></span><br><span class="line">    l.appeend(<span class="string">'add'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br></pre></td></tr></tbody></table></figure><h3 id="用字典来实现case"><a href="#用字典来实现case" class="headerlink" title="用字典来实现case"></a>用字典来实现case</h3><p>示例:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'111'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'222'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printdefault</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'default'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dic = {</span><br><span class="line">    <span class="string">'a'</span>: print1,</span><br><span class="line">    <span class="string">'b'</span>: print2,</span><br><span class="line"><span class="string">'default'</span>: printdefault}</span><br><span class="line"></span><br><span class="line">i = input(<span class="string">'input: '</span>)</span><br><span class="line">main = dic[i <span class="keyword">if</span> (i != <span class="string">'a'</span> <span class="keyword">or</span> i != <span class="string">'b'</span>) <span class="keyword">else</span> <span class="string">'default'</span>]</span><br><span class="line">main()</span><br></pre></td></tr></tbody></table></figure><h3 id="编码格式-1"><a href="#编码格式-1" class="headerlink" title="编码格式"></a>编码格式</h3><p>字符串经过<strong>编码（encode）</strong> 就成为了一堆数据, 反过来, 数据经过<strong>解码（decode）</strong> 就变回我们认识的字符串.</p><p><img src="Python基础杂烩/encode_decode.png" alt="img"></p><p>指定文件编码格式为 <code>utf-8</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> 如果不指定文件编码格式在有的Python2版本中无法识别中文, 即便是中文注释也会报错.</p><p><img src="Python基础杂烩/Unicode_Decoding_and_Encoding.png" alt="Unicode Decoding and Encoding"></p><p>Linux系统默认编码格式是<strong>UTF-8</strong>, 系统语言是简体中文时Windows10的编码格式是<strong>GB2312</strong> (也称GBK, 国标扩展, cp936)</p><p>在python中 <code>str</code> 类型数据都以Unicode码点格式储存, 因此直接打印字符串会看到字符为’\u’开头</p><h3 id="基本读写"><a href="#基本读写" class="headerlink" title="基本读写"></a>基本读写</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"test.txt"</span>, <span class="string">"r+"</span>)</span><br><span class="line">f.read()</span><br><span class="line">f.write(<span class="string">"text"</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></tbody></table></figure><p>或者</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"test.txt"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.read()</span><br><span class="line">    f.write(<span class="string">"test"</span>)</span><br></pre></td></tr></tbody></table></figure><p>💡 <strong>使用with语句打开文件是最推荐的方式</strong>, 原因见<a href="https://www.cnblogs.com/ymjyqsx/p/6554817.html" target="_blank" rel="noopener">这里</a></p><p>下表是open时要指定的读写模式的比较.</p><div class="table-container"><table><thead><tr><th>读写模式</th><th>是否可读</th><th>是否可写</th><th>文件指针位置</th><th>作用</th></tr></thead><tbody><tr><td>r</td><td>是</td><td>否</td><td>文件开头</td><td>读取文件, 如果文件不存在则报错</td></tr><tr><td>r+</td><td>是</td><td>是</td><td>文件开头</td><td>读取并写入文件, 如果文件不存在则报错</td></tr><tr><td>w</td><td>否</td><td>是</td><td>文件开头</td><td>覆写原文件, 如果文件不存在则创建</td></tr><tr><td>w+</td><td>是</td><td>是</td><td>文件开头</td><td>读取并覆盖写原内容, 如果文件不存在则创建</td></tr><tr><td>a</td><td>否</td><td>是</td><td>文件末尾</td><td>追加文件内容, 如果文件不存在则报错</td></tr><tr><td>a+</td><td>是</td><td>是</td><td>文件末尾</td><td>追加文件内容并且可读, 如果文件不存在则报错</td></tr></tbody></table></div><p>另外还有<code>b</code>模式, 以二进制打开, 允许我们对二进制文件进行编辑, <code>b</code>可以与其他模式组合使用, 比如<br><code>rb</code></p><p>🔗 <a href="https://www.cnblogs.com/nulige/p/6128948.html" target="_blank" rel="noopener">python基础-文件读写’r’ 和 ‘rb’区别</a></p><h2 id="脚本和普通程序的区别"><a href="#脚本和普通程序的区别" class="headerlink" title="脚本和普通程序的区别"></a>脚本和普通程序的区别</h2><p>脚本这个词来源于戏剧, 能用于舞台演出的戏剧文本就称为<strong>脚本</strong>. 在编程中的脚本是解释执行的程序, 通常只用来做简单的处理, 做自动化处理</p><h2 id="解释器的使用技巧"><a href="#解释器的使用技巧" class="headerlink" title="解释器的使用技巧"></a>解释器的使用技巧</h2><p>在解释器中交互式编程时要注意缩进不要错</p><h3 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h3><p>python解释器本身没有清屏命令, 只能通过调用命令行的清屏命令来达到效果</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># Windows下</span></span><br><span class="line">os.system(<span class="string">'cls'</span>)</span><br><span class="line"><span class="comment"># Linux下</span></span><br><span class="line">os.system(<span class="string">'clear'</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><p>我推荐遵从<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP8</a>. 当然一行一行看完这个规范不是一件令人愉快的事, 最简单的时刻遵守PEP8的方式是在代码工具里安一个<strong>代码风格检查器</strong> (linter).<br>检查你的代码是否符合PEP8的linter是<a href="http://pycodestyle.pycqa.org/en/latest/intro.html" target="_blank" rel="noopener">pycodestyle</a></p><p>💡 在VSC中可以在设置中搜索<strong>python.linting.pycodestyle</strong>, 勾选<strong>Pycodestyle Enabled</strong>, 这样在VSC中编写Python代码时使用的linter就是pycodestyle啦</p><p><img src="./Python基础杂烩/1571142193232.png" alt="1571142193232"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019Python学习小组持续更新博客二, 这篇文章列出了一些我认为Python学习者应当知道的一些基础内容&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://uestc-msc.github.io/categories/Python/"/>
    
      <category term="Python基础" scheme="https://uestc-msc.github.io/categories/Python/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="LeoJhonSong" scheme="https://uestc-msc.github.io/tags/LeoJhonSong/"/>
    
  </entry>
  
  <entry>
    <title>【学术沙龙预告】Python入门</title>
    <link href="https://uestc-msc.github.io/2019/10/12/%E5%AD%A6%E6%9C%AF%E6%B2%99%E9%BE%99%E9%A2%84%E5%91%8APython%E5%85%A5%E9%97%A8/"/>
    <id>https://uestc-msc.github.io/2019/10/12/学术沙龙预告Python入门/</id>
    <published>2019-10-12T13:45:26.000Z</published>
    <updated>2021-02-24T10:39:20.975Z</updated>
    
    <content type="html"><![CDATA[<div></div><a id="more"></a><section style="box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;font-size: 16px;">    <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">            <img class="" data-ratio="0.562963" data-w="1080" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="jpeg" _width="677px" src="./学术沙龙预告Python入门/21.jpeg" crossorigin="anonymous" data-fail="0"></section>    </section>    <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>        </section>        <section class="" style="display: inline-block;vertical-align: middle;padding-left: 5px;padding-right: 5px;font-size: 24px;min-width: 1.2em !important;box-sizing: border-box;">            <p style="margin: 0px;padding: 0px;box-sizing: border-box;">活动预告</p>        </section>        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;box-shadow: rgb(0, 0, 0) 0px 0px 0px;padding: 0px 3px;box-sizing: border-box;">            <section style="text-align: center;margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;" powered-by="xiumi.us">                <section style="border-color: rgb(255, 255, 255);box-shadow: rgb(123, 141, 167) 2.8px 2.8px 7px;padding: 10px;border-width: 3px;border-style: solid;background-image: url(&quot;./学术沙龙预告Python入门/53.jpeg">                    <section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="border-width: 5px;border-style: solid;border-color: rgb(255, 255, 255);padding: 0px;background-color: rgba(0, 0, 0, 0.75);width: 100%;box-shadow: rgb(0, 0, 0) 0px 0px 0px;box-sizing: border-box;">                            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                                <section class="" style="text-align: justify;padding: 10px;font-size: 14px;color: rgb(255, 255, 255);box-sizing: border-box;">                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="font-size: 72px;box-sizing: border-box;">你</span></p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        想不想开发自己的网站？</p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        想不想做出众多新奇有趣的小玩意？<br style="box-sizing: border-box;"></p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        想不想写出属于自己的人工智能？</p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="font-size: 48px;box-sizing: border-box;">来吧</span></p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="font-size: 32px;box-sizing: border-box;">开启新世界的大门</span></p>                                    <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                                </section>                            </section>                        </section>                    </section>                </section>            </section>        </section>    </section>    <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>        </section>        <section class="" style="display: inline-block;vertical-align: middle;padding-left: 5px;padding-right: 5px;font-size: 24px;min-width: 1.2em !important;box-sizing: border-box;">            <p style="margin: 0px;padding: 0px;box-sizing: border-box;">内容预告</p>        </section>        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;box-shadow: rgb(0, 0, 0) 0px 0px 0px;padding: 0px 3px;box-sizing: border-box;">            <section style="text-align: center;margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;" powered-by="xiumi.us">                <section style="border-color: rgb(255, 255, 255);box-shadow: rgb(123, 141, 167) 2.82843px 2.82843px 7px;padding: 10px;border-width: 3px;border-style: solid;background-image: url(&quot;./学术沙龙预告Python入门/53.jpeg">                    <section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="border-width: 5px;border-style: solid;border-color: rgb(255, 255, 255);padding: 0px;background-color: rgba(0, 0, 0, 0.75);width: 100%;box-shadow: rgb(0, 0, 0) 0px 0px 0px;box-sizing: border-box;">                            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                                <section class="" style="text-align: justify;padding: 10px;font-size: 14px;color: rgb(255, 255, 255);box-sizing: border-box;">                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="text-align: justify;box-sizing: border-box;">本次沙龙活动会由宋铸恒学长为我们带来Python的入门，相信这次一定会给我们带来满满的收获。另：本次活动会简单介绍宣传一下MSP</span><br style="box-sizing: border-box;"></p>                                </section>                            </section>                        </section>                    </section>                </section>            </section>        </section>    </section>    <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>        </section>        <section class="" style="display: inline-block;vertical-align: middle;padding-left: 5px;padding-right: 5px;font-size: 24px;min-width: 1.2em !important;box-sizing: border-box;">            <p style="margin: 0px;padding: 0px;box-sizing: border-box;">时间地点</p>        </section>        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;box-shadow: rgb(0, 0, 0) 0px 0px 0px;padding: 0px 3px;box-sizing: border-box;">            <section style="text-align: center;margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;" powered-by="xiumi.us">                <section style="border-color: rgb(255, 255, 255);box-shadow: rgb(123, 141, 167) 2.82843px 2.82843px 7px;padding: 10px;border-width: 3px;border-style: solid;background-image: url(&quot;./学术沙龙预告Python入门/53.jpeg">                    <section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="border-width: 5px;border-style: solid;border-color: rgb(255, 255, 255);padding: 0px;background-color: rgba(0, 0, 0, 0.75);width: 100%;box-shadow: rgb(0, 0, 0) 0px 0px 0px;box-sizing: border-box;">                            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                                <section class="" style="text-align: justify;padding: 10px;font-size: 14px;color: rgb(255, 255, 255);box-sizing: border-box;">                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="font-size: 20px;box-sizing: border-box;">时间：周日下午3:30</span></p>                                    <p style="text-align: center;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        <span style="font-size: 20px;box-sizing: border-box;">地点：品学楼C231</span></p>                                </section>                            </section>                        </section>                    </section>                </section>            </section>        </section>    </section>    <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>        </section>        <section class="" style="display: inline-block;vertical-align: middle;padding-left: 5px;padding-right: 5px;font-size: 24px;min-width: 1.2em !important;box-sizing: border-box;">            <p style="margin: 0px;padding: 0px;box-sizing: border-box;">主讲人</p>        </section>        <section style="display: inline-block;vertical-align: middle;box-sizing: border-box;">            <section style="width: 3em;border-top: 2px solid rgb(85, 162, 187);display: inline-block;vertical-align: middle;box-sizing: border-box;">            </section>            <section style="width: 6px;height: 6px;display: inline-block;vertical-align: middle;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-o-transform: rotate(45deg);background-color: rgb(85, 162, 187);box-sizing: border-box;">            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;box-shadow: rgb(0, 0, 0) 0px 0px 0px;padding: 0px 3px;box-sizing: border-box;">            <section style="text-align: center;margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;" powered-by="xiumi.us">                <section style="border-color: rgb(255, 255, 255);box-shadow: rgb(123, 141, 167) 2.8px 2.8px 7px;padding: 10px;border-width: 3px;border-style: solid;background-image: url(&quot;./学术沙龙预告Python入门/53.jpeg">                    <section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="border-width: 5px;border-style: solid;border-color: rgb(255, 255, 255);padding: 0px;background-color: rgba(0, 0, 0, 0.75);width: 100%;box-shadow: rgb(0, 0, 0) 0px 0px 0px;box-sizing: border-box;">                            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                                <section class="" style="text-align: justify;padding: 10px;font-size: 18px;color: rgb(255, 255, 255);box-sizing: border-box;">                                    <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                                        &nbsp; &nbsp;                                        宋铸恒，电子科技大学2017级格院学生。大一加入了程洪教授的实验室，在大二暑假进入文力教授的实验室，有着三年的项目经验，是一位对于Python非常精通的学长。曾经获得芯空杯四轴单片机大赛二等奖，大学生电动方程式大赛优秀奖。                                    </p>                                </section>                            </section>                        </section>                    </section>                </section>            </section>        </section>    </section></section><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="活动" scheme="https://uestc-msc.github.io/categories/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="沙龙" scheme="https://uestc-msc.github.io/categories/%E6%B4%BB%E5%8A%A8/%E6%B2%99%E9%BE%99/"/>
    
    
      <category term="辉尘T" scheme="https://uestc-msc.github.io/tags/%E8%BE%89%E5%B0%98T/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu虚拟机中Python环境配置</title>
    <link href="https://uestc-msc.github.io/2019/10/09/Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%ADPython%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://uestc-msc.github.io/2019/10/09/Ubuntu虚拟机中Python环境配置/</id>
    <published>2019-10-09T15:50:34.000Z</published>
    <updated>2021-02-24T10:39:20.967Z</updated>
    
    <content type="html"><![CDATA[<p>我们这个在Windows的Ubuntu虚拟机里的Python环境配置分四步:</p><ul><li>安装Vmware Workstation Pro 15</li><li>创建Ubuntu18.04虚拟机</li><li>安装Ubuntu系统</li><li>在虚拟机安装Anaconda3</li></ul><a id="more"></a><h2 id="安装VMware-Workstation-15-Pro"><a href="#安装VMware-Workstation-15-Pro" class="headerlink" title="安装VMware Workstation 15 Pro"></a>安装VMware Workstation 15 Pro</h2><p>我们通常说的安装Vmware说的是<strong>VMware Workstation Pro</strong>, 是付费的 (可以在网上找激活码来激活), 其实另外有<strong>Vmware Workstaion Player</strong>, 个人使用的话是免费的,安装包也比Pro小不少 (Pro大约550M, Player大约140M), 它们的区别仅在于Pro版多了共享剪贴板, 快照, ssh连接Linux虚拟机, 同时运行多个虚拟机, 运行加密虚拟机等一些功能, 体验更好, 因此<strong>推荐安装Vmware Workstaion Pro</strong>.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span> <a href="https://my.vmware.com/cn/web/vmware/details?downloadGroup=WKST-1550-WIN&amp;productId=799&amp;rPId=37111" target="_blank" rel="noopener">最新版VMware Workstation Pro下载链接</a></p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span> <a href="https://www.vmware.com/cn/products/workstation-player/workstation-player-evaluation.html" target="_blank" rel="noopener">最新版Vmware Workstation Player下载链接</a></p><p><strong>本教程中安装的是Vmware Workstaion Pro</strong></p><p>安装过程只有<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span> 这一个界面是需要操作的, <strong>勾选增强型驱动程序</strong>, <strong>选一下安装位置</strong>, 其他界面就按下一步之类的.</p><p><img src="Ubuntu虚拟机中Python环境配置/1570613061667.png" alt="1570613061667"></p><p>安装好后会提示重启一下,不过不重启也能继续下面的步骤.</p><p>第一次打开Vm会要求输入激活码, 这时输入我从网上随便搜的<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span> 这个就能激活了</p><blockquote><p>ZC10K-8EF57-084QZ-VXYXE-ZF2XF</p></blockquote><p><img src="Ubuntu虚拟机中Python环境配置/1570613249369.png" alt="1570613249369"></p><p><img src="Ubuntu虚拟机中Python环境配置/1570613447537.png" alt="1570613447537"></p><p>Vmware安装完成<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span></p><h2 id="创建Ubuntu18-04虚拟机"><a href="#创建Ubuntu18-04虚拟机" class="headerlink" title="创建Ubuntu18.04虚拟机"></a>创建Ubuntu18.04虚拟机</h2><p>首先我们需要下一个Ubuntu Desktop安装镜像.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png?v8">🔗</span> <a href="https://cn.ubuntu.com/download" target="_blank" rel="noopener">Ubuntu下载链接</a></p><p>虽然目前已经有了19.04版的Ubuntu, 但并不建议新手尝试, 这些刚出的版本通常包含很多仍在修复的错误, 并不适合新手学习Linux. 实际上大多数不是软件开发者的Ubuntu使用者不会可以追求新版本的Ubuntu, 现在仍有很多人用的是1604.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> <strong>LTS</strong>是<strong>Long Term support</strong>, 意味者长期支持, 这些版本会更稳定些. 非Ubuntu开发者通常选择这些版本的Ubuntu.</p><p>打开Vmware, 点击<strong>创建新虚拟机</strong>, 然后选择<strong>稍后安装操作系统</strong></p><p><img src="Ubuntu虚拟机中Python环境配置/1570613624560.png" alt="1570613624560"></p><p>然后<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span></p><p><img src="Ubuntu虚拟机中Python环境配置/1570613672609.png" alt="1570613672609"></p><p>然后设置一下这个虚拟机在Vmware中的<strong>名称</strong></p><p><img src="Ubuntu虚拟机中Python环境配置/1570613734754.png" alt="1570613734754"></p><p>然后是设置<strong>虚拟机的硬盘大小</strong>, 就用它的建议值就可以. 如果日后空间真的不够了, 还可以扩容, 或者可以考虑上实体Linux了. 下面这个选<strong>将虚拟磁盘储存为单个文件就好</strong>.</p><p><img src="Ubuntu虚拟机中Python环境配置/1570613762084.png" alt="1570613762084"></p><p>然后点<strong>自定义硬件</strong>, 将<strong>ISO镜像</strong>选为下好的Ubuntu镜像. 另外如果你想多分点内存给虚拟机, 可以把内存一项改大一些 (其实这些东西在虚拟机建好后仍能更改). 满意了就可以开始创建了.</p><p><img src="Ubuntu虚拟机中Python环境配置/1570613942793.png" alt="1570613942793"></p><h2 id="安装Ubuntu系统"><a href="#安装Ubuntu系统" class="headerlink" title="安装Ubuntu系统"></a>安装Ubuntu系统</h2><p>开机后, 系统语言选择英文 (即便选中文也没几句中文, 没意义)</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> 目前Ubuntu画面只占了一部分屏幕, 一会安了Vmware增强工具就能全屏了.</p><p><img src="Ubuntu虚拟机中Python环境配置/1570614160464.png" alt="1570614160464"></p><p>接下来设置键盘布局, 除非是跟普通键盘不一样的键盘, 都是默认的这个<strong>English (US)</strong>不用改</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span> 这里为了节省时间选<strong>最小安装</strong>,刚试过普通安装需要约<strong>40min</strong>, 最小安装<strong>十多分钟</strong>. 当然最小安装只有很少的软件, 如果你有时间也可以选普通安装</p><p><img src="Ubuntu虚拟机中Python环境配置/1570614220454.png" alt="1570614220454"></p><p><img src="Ubuntu虚拟机中Python环境配置/1570614273057.png" alt="1570614273057"></p><p>点击<strong>Install Now</strong>后会提示选择时区. 在地图上的在中国上点一下就能把<strong>Shanghai</strong>填充上去</p><p>安装前的最后设置! <strong>name</strong>是你的昵称, 可以和用户名不同. <strong>computer’s name</strong>是主机名, 稍后我们会看到主机名和用户名会用在什么地方.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> 用户名的格式较为严格, 只能用小写字母</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> 可以选说<strong>Log in automatically</strong>, 开机进入桌面不需要输入密码</p><p><img src="Ubuntu虚拟机中Python环境配置/1570614524517.png" alt="1570614524517"></p><p>等一会就安装好了!</p><p><img src="Ubuntu虚拟机中Python环境配置/1570616538316.png" alt="1570616538316"></p><p>按<kbd>Ctrl Alt T</kbd>打开终端, 可以看到提示符中@前的便是<strong>username</strong>, @后的便是<strong>hostname</strong></p><p><img src="Ubuntu虚拟机中Python环境配置/1570616560146.png" alt="1570616560146"></p><p>最后安装一下Vmware增强工具, 能更好适配. 在刚打开这个终端输入下面命令 (因为这个增强工具还没装上, 暂时无法共享Windows和Ubuntu剪贴板</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install open-vm-tools-desktop -y</span><br></pre></td></tr></tbody></table></figure><p>:bulb: <code>sudo</code>命令会要求你输入密码</p><p>然后在终端输入<code>reboot</code>重启一下, 就能在Windows和Ubuntu间共享剪贴板啦<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span></p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8">❗</span> 有一点比较坑, Vmware<strong>不支持笔记本电脑自带触摸板的滚</strong>动! 最好的解决方法是用鼠标.</p><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>首先需要下一个anaconda安装包. 从anaconda官网下太慢了, 可以从<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">清华anaconda镜像源</a>下载. 拉到最底下是最新版本. anaconda清华源曾经关闭过一段时间, <a href="https://zhuanlan.zhihu.com/p/62899936" target="_blank" rel="noopener">最近才恢复</a>, 可能是因为还在更新所以清华源上最新版本还是一年以前的. 不过问题不大, 安好了再更新也是一样的.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4d1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d1.png?v8">📑</span> <a href="https://docs.anaconda.com/anaconda/install/linux/" target="_blank" rel="noopener">Anaconda安装文档</a></p><p>安装过程参考<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f446.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f446.png?v8">👆</span> 官方教程就好, 挺清晰的.</p><p>安装好后关闭运行anaconda安装脚本的那个终端, 再打开一个新的终端, 输入<code>anaconda-navigator</code></p><p>在这里有anaconda配套的应用, 点击安装<strong>VS Code</strong>. 这样安装的好处是<strong>开箱即用</strong>: 打开VSC以后就能进行Python开发, anaconda已经将需要的插件, 需要的配置弄好了<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8">👍</span></p><p><img src="Ubuntu虚拟机中Python环境配置/1570634599158.png" alt="1570634599158"></p><p>完成! </p><p>这样我们就完成了基础版Ubuntu虚拟机中Python开发环境的搭建!</p><p>更多操作我们以后再做.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们这个在Windows的Ubuntu虚拟机里的Python环境配置分四步:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装Vmware Workstation Pro 15&lt;/li&gt;
&lt;li&gt;创建Ubuntu18.04虚拟机&lt;/li&gt;
&lt;li&gt;安装Ubuntu系统&lt;/li&gt;
&lt;li&gt;在虚拟机安装Anaconda3&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python" scheme="https://uestc-msc.github.io/categories/Python/"/>
    
      <category term="配置" scheme="https://uestc-msc.github.io/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="LeoJhonSong" scheme="https://uestc-msc.github.io/tags/LeoJhonSong/"/>
    
  </entry>
  
  <entry>
    <title>2019MSC新生见面会 | 我们的故事从此开始～</title>
    <link href="https://uestc-msc.github.io/2019/10/08/2019MSC%E6%96%B0%E7%94%9F%E8%A7%81%E9%9D%A2%E4%BC%9A-%E6%88%91%E4%BB%AC%E7%9A%84%E6%95%85%E4%BA%8B%E4%BB%8E%E6%AD%A4%E5%BC%80%E5%A7%8B/"/>
    <id>https://uestc-msc.github.io/2019/10/08/2019MSC新生见面会-我们的故事从此开始/</id>
    <published>2019-10-08T12:39:46.000Z</published>
    <updated>2021-02-24T10:39:20.947Z</updated>
    
    <content type="html"><![CDATA[<div></div><a id="more"></a><section style="font-size: 14px;line-height: 1.75;letter-spacing: 1px;padding-right: 8px;padding-left: 8px;box-sizing: border-box;">    <section style="text-align: center;margin: 10px 0%;transform: translate3d(1px, 0px, 0px);-webkit-transform: translate3d(1px, 0px, 0px);-moz-transform: translate3d(1px, 0px, 0px);-o-transform: translate3d(1px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;min-width: 10%;max-width: 100%;vertical-align: top;line-height: 0;box-sizing: border-box;">            <section style="text-align: left;transform: translate3d(-4px, 0px, 0px);margin-right: 0%;margin-bottom: -6px;margin-left: 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 10px;height: 10px;vertical-align: top;overflow: hidden;border-width: 1px;border-radius: 0px;border-style: solid;border-color: rgb(206, 175, 151);box-sizing: border-box;">                </section>            </section>            <section style="margin-right: 0%;margin-left: 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(246, 237, 236);border-style: solid;border-width: 1px;border-radius: 0px;border-color: rgb(206, 175, 151);line-height: 1.8;letter-spacing: 1.8px;padding-right: 10px;padding-left: 10px;box-sizing: border-box;">                    <section class="" style="text-align: justify;font-size: 16px;color: rgb(152, 126, 102);box-sizing: border-box;" powered-by="xiumi.us">                        <p style="white-space: normal;box-sizing: border-box;"><strong style="box-sizing: border-box;">&nbsp; 与君初相识&nbsp; 犹如故人归&nbsp;&nbsp;</strong></p>                    </section>                </section>            </section>            <section style="text-align: right;transform: translate3d(4px, 0px, 0px);margin-top: -6px;margin-right: 0%;margin-left: 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 10px;height: 10px;vertical-align: top;overflow: hidden;border-width: 1px;border-radius: 0px;border-style: solid;border-color: rgb(206, 175, 151);box-sizing: border-box;">                </section>            </section>        </section>    </section>    <section style="box-sizing: border-box;" powered-by="xiumi.us">        <section style="margin: 10px 0%;box-sizing: border-box;">            <section style="display: inline-block;width: 100%;vertical-align: top;background-position: 0% 0%;background-repeat: repeat;background-size: 99.9509%;background-attachment: scroll;padding: 15px;background-image: url(&quot;./2019MSC新生见面会-我们的故事从此开始/49.png">                <section class="" style="color: rgb(0, 0, 0);box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">2019年9月28日，2019年的俱乐部新人在品学楼C231进行了一场<strong style="box-sizing: border-box;"><span style="background-color: rgb(238, 227, 58);box-sizing: border-box;">欢(shi)脱(fen)有(hun)趣(luan)</span></strong>的面基大会，现场氛围十分火热，甚至<strong style="box-sizing: border-box;">不少同学当场留下了惩罚游戏的黑历史照片</strong>，相信这场见面会一定会成为萌新们大学生活的闪光回忆呢！(手动狗头）                    </p>                    <p style="box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 90%;box-sizing: border-box;">                        <img class="" data-ratio="1.3328125" data-type="jpeg" data-w="640" style="vertical-align: middle; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" _width="100%" src="./2019MSC新生见面会-我们的故事从此开始/67.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△勤劳的老咸鱼用零食饮料装点的现场</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><strong style="box-sizing: border-box;">预热环节</strong>：辨认老咸鱼，由于萌新们辨认准确率令人震惊，这个环节很快就结束了......</p>                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                        <img class="" data-ratio="0.5622172" data-type="png" data-w="884" style="vertical-align: middle; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" _width="677px" src="./2019MSC新生见面会-我们的故事从此开始/92.png" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△武汉大学的MSCer们</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                    <p style="white-space: normal;box-sizing: border-box;">简单的预热环节之后就是短片放送~<strong style="box-sizing: border-box;">坚果叔叔张逸霄和纸盒叔叔王子和</strong>以及<strong style="box-sizing: border-box;">四川大学、武汉大学和上海交大的<span style="color: rgb(44, 90, 160);box-sizing: border-box;">MSCer</span>们</strong>都录制短片传达对萌新的寄语哦！主持人高天一用简单形象的统计图介绍了本次招新情况，不得不说我们MSC的男女比很震撼呢！（再次狗头）                    </p>                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                        <img class="" data-ratio="0.5759259" data-type="png" data-w="1080" style="vertical-align: middle; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" _width="677px" src="./2019MSC新生见面会-我们的故事从此开始/118.png" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△物理学院的“半壁江山”</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                        <img class="" data-ratio="0.5805556" data-type="png" data-w="1080" style="vertical-align: middle; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" _width="677px" src="./2019MSC新生见面会-我们的故事从此开始/138.png" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);box-sizing: border-box;" powered-by="xiumi.us">                    <p style="text-align: center;box-sizing: border-box;">△南上加南</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;">破冰第一步当然是<strong style="box-sizing: border-box;">自我介绍</strong>！我们拒绝刻板的流程，采用了<strong style="box-sizing: border-box;">抽签</strong>决定发言时长的方式，有几个抽到3分钟的幸运鹅没有完成介绍任务，<span style="background-color: rgb(238, 227, 58);color: rgb(0, 0, 0);box-sizing: border-box;"><strong style="box-sizing: border-box;">当场表演壁咚和《青藏高原》</strong></span>，气氛很快燃起来了，录像的吃瓜群众简直不要太开心~                    </p>                    <p style="white-space: normal;box-sizing: border-box;"><br></p>                    <p style="white-space: normal;box-sizing: border-box;">                        随后的签名活动更是将气氛推向更高点，立刻打破了羞涩腼腆的冰层，大家窜来窜去焦急寻找符合特征的那个人，争分夺秒收集签名，最后有五个小伙伴获得了奖品——<strong style="box-sizing: border-box;">定制U盘</strong>！</p>                    <p style="white-space: normal;box-sizing: border-box;">&nbsp;</p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 90%;box-sizing: border-box;">                        <img class="" data-ratio="1.3333333" data-type="jpeg" data-w="1080" style="vertical-align: middle; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" _width="100%" src="./2019MSC新生见面会-我们的故事从此开始/170.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="text-align: center;font-size: 12px;color: rgb(183, 175, 175);box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△我来康康是谁在划水</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;">                        接下来的猜暗语游戏简直超出了见面会筹备组的想象，萌新过于机智以至于暗语题目根本不够用，无奈只好现场赶制纸条，甚是卑微啊！</p>                    <p style="white-space: normal;box-sizing: border-box;"><br></p>                    <p style="white-space: normal;box-sizing: border-box;">中场休息时，甜乐为大家简要介绍了微软学生俱乐部的现状，然后就是<strong style="box-sizing: border-box;">喜闻乐见的叠报纸</strong>！！！</p>                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                        <img class="" data-ratio="1.0505618" data-type="jpeg" data-w="178" style="vertical-align: middle; box-sizing: border-box; width: 178px !important; height: auto !important; visibility: visible !important;" _width="178px" src="./2019MSC新生见面会-我们的故事从此开始/198.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="text-align: center;font-size: 12px;color: rgb(183, 175, 175);box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△严肃点</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                    <p style="white-space: normal;box-sizing: border-box;">这次主席团为叠报纸活动出的题目非常欢乐，<strong style="box-sizing: border-box;">内容扎实，覆盖面广</strong>，快速抢答的孩子们都快哭了。幸好活动之间有抽奖环节安慰受伤的心灵~</p>                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 95%;box-sizing: border-box;">                        <img class="" data-ratio="0.4564815" data-type="jpeg" data-w="1080" style="vertical-align: middle; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" _width="100%" src="./2019MSC新生见面会-我们的故事从此开始/221.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 95%;box-sizing: border-box;">                        <img class="" data-ratio="0.5611111" data-type="jpeg" data-w="1080" style="vertical-align: middle; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" _width="100%" src="./2019MSC新生见面会-我们的故事从此开始/236.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△非常欢乐的叠报纸</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;">最后剩下一些题目用作个人抢答，回答错误的小萌新为大家带来了欢乐的演唱表演<span style="color: rgb(132, 163, 241);box-sizing: border-box;"><strong style="box-sizing: border-box;">《我要O泡》</strong></span>，<strong style="box-sizing: border-box;">现场掌声雷鸣~</strong>每个活动的获胜组成员都获得了<strong style="box-sizing: border-box;">定制钥匙扣</strong>呢！</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 90%;box-sizing: border-box;">                        <img class="" data-ratio="0.7673611" data-type="jpeg" data-w="576" style="vertical-align: middle; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" _width="100%" src="./2019MSC新生见面会-我们的故事从此开始/266.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△只要你觉得严叔叔最棒，我们就是兄弟.jpg</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                    <p style="white-space: normal;box-sizing: border-box;">最后大台阶合影，见面会在<strong style="box-sizing: border-box;">欢脱温馨</strong>的氛围中伴随着<strong style="box-sizing: border-box;">主席总结</strong>完结撒花~</p>                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                </section>                <section style="text-align: center;margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us">                    <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                        <img class="" data-ratio="0.6495177" data-type="jpeg" data-w="933" style="vertical-align: middle; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" _width="677px" src="./2019MSC新生见面会-我们的故事从此开始/290.jpeg" crossorigin="anonymous" data-fail="0"></section>                </section>                <section class="" style="font-size: 12px;color: rgb(183, 175, 175);text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="box-sizing: border-box;">△欢迎来到成电MSC的大家庭！</p>                </section>                <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                    <p style="white-space: normal;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>                    <p style="text-align: center;white-space: normal;box-sizing: border-box;"><span style="font-size: 12px;box-sizing: border-box;">文案：林柏澜</span></p>                </section>                <section class="" style="font-size: 12px;box-sizing: border-box;" powered-by="xiumi.us">                    <p style="text-align: center;white-space: normal;box-sizing: border-box;">编辑：网友周某</p>                </section>            </section>        </section>    </section></section><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="活动" scheme="https://uestc-msc.github.io/categories/%E6%B4%BB%E5%8A%A8/"/>
    
      <category term="见面会" scheme="https://uestc-msc.github.io/categories/%E6%B4%BB%E5%8A%A8/%E8%A7%81%E9%9D%A2%E4%BC%9A/"/>
    
    
      <category term="林柏澜" scheme="https://uestc-msc.github.io/tags/%E6%9E%97%E6%9F%8F%E6%BE%9C/"/>
    
  </entry>
  
  <entry>
    <title>软件自由日活动</title>
    <link href="https://uestc-msc.github.io/2019/09/28/%E8%BD%AF%E4%BB%B6%E8%87%AA%E7%94%B1%E6%97%A5%E6%B4%BB%E5%8A%A8/"/>
    <id>https://uestc-msc.github.io/2019/09/28/软件自由日活动/</id>
    <published>2019-09-27T19:20:52.000Z</published>
    <updated>2021-02-24T10:39:20.943Z</updated>
    
    <content type="html"><![CDATA[<p><span></span></p><a id="more"></a><section style="box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;font-size: 16px;">    <section style="text-align: center;margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;min-width: 10%;max-width: 100%;vertical-align: top;padding: 0px 20px;box-sizing: border-box;">            <section style="text-align: right;margin: 0px 0% -10px;transform: translate3d(20px, 0px, 0px);-webkit-transform: translate3d(20px, 0px, 0px);-moz-transform: translate3d(20px, 0px, 0px);-o-transform: translate3d(20px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 30px;height: 30px;vertical-align: top;overflow: hidden;box-sizing: border-box;">                    <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 100%;box-sizing: border-box;">                            <img class=" __bg_gif" data-ratio="0.7870968" data-w="155" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" width="100%" data-type="gif" _width="100%" src="./软件自由日活动/24.gif" data-order="0" data-fail="0"></section>                    </section>                </section>            </section>            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;min-width: 10%;max-width: 100%;vertical-align: top;padding: 0px 5px;border-width: 3px;border-radius: 0px;border-style: solid;border-color: rgba(0, 0, 0, 0);box-shadow: rgb(0, 0, 0) 0px 0px 0px;background-color: rgb(41, 50, 57);box-sizing: border-box;">                    <section style="transform: translate3d(1px, 0px, 0px);-webkit-transform: translate3d(1px, 0px, 0px);-moz-transform: translate3d(1px, 0px, 0px);-o-transform: translate3d(1px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">                        <section class="" style="text-align: justify;color: rgb(255, 255, 255);box-sizing: border-box;">                            <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Software                                Freedom Day</p>                        </section>                    </section>                </section>            </section>        </section>    </section>    <section style="text-align: left;margin: 0px 0% 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;width: 25%;box-sizing: border-box;">            <section style="margin: 0.5em 0px;box-sizing: border-box;" powered-by="xiumi.us">                <section style="background-color: rgb(29, 29, 29);height: 1px;box-sizing: border-box;"></section>            </section>        </section>        <section style="display: inline-block;vertical-align: middle;width: 25%;padding: 0px;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 100%;box-sizing: border-box;">                    <img class=" __bg_gif" data-ratio="0.2106667" data-w="750" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 100% !important; height: auto !important; visibility: visible !important;" width="100%" data-type="gif" _width="100%" src="./软件自由日活动/58.gif" data-order="1" data-fail="0"></section>            </section>        </section>    </section>    <section class="" style="color: rgb(74, 74, 74);line-height: 1.8;padding: 0px 15px;box-sizing: border-box;" powered-by="xiumi.us">        <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">9月21 日是2019年的Software Freedom            Day，电子科大Linux用户组和成都freeCodeCamp社区以及电子科技大学微软学生俱乐部一起举行了SFD活动。活动开展于电子科技大学沙河校区二教104。校内外爱好者积极参与了本次活动。</p>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;background-position: 0% 0%;background-repeat: repeat;background-size: 99.938%;background-attachment: scroll;background-image: url(&quot;./软件自由日活动/70.png&quot;);box-sizing: border-box;">            <section style="text-align: left;margin: 0px 0% -20px;transform: translate3d(10px, 0px, 0px);-webkit-transform: translate3d(10px, 0px, 0px);-moz-transform: translate3d(10px, 0px, 0px);-o-transform: translate3d(10px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 55px;height: 40px;vertical-align: top;overflow: hidden;box-sizing: border-box;">                    <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                            <img class=" __bg_gif" data-ratio="0.696" data-w="500" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 500px !important; height: auto !important; visibility: visible !important;" data-type="gif" _width="500px" src="./软件自由日活动/83.gif" data-order="2" data-fail="0"></section>                    </section>                </section>            </section>            <section style="margin: 0px 0%;text-align: center;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 90%;vertical-align: top;border-style: solid;border-width: 1px;border-radius: 0px;border-color: rgb(160, 160, 160);padding: 10px;box-sizing: border-box;">                    <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                            <img class="" data-ratio="1.4157407" data-w="1080" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/98.png" crossorigin="anonymous" data-fail="0"></section>                    </section>                </section>            </section>            <section style="text-align: right;margin: -20px 0% 0px;box-sizing: border-box;" powered-by="xiumi.us">                <section style="display: inline-block;width: 55px;height: 40px;vertical-align: top;overflow: hidden;box-sizing: border-box;">                    <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                            <img class=" __bg_gif" data-ratio="0.696" data-w="500" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 500px !important; height: auto !important; visibility: visible !important;" data-type="gif" _width="500px" src="./软件自由日活动/83.gif" data-order="3" data-fail="0"></section>                    </section>                </section>            </section>        </section>    </section>    <section style="text-align: left;margin: 10px 0% -16px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 150px;height: 30px;vertical-align: top;overflow: hidden;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;border-width: 0px;box-sizing: border-box;">                    <img class=" __bg_gif" data-ratio="0.140625" data-w="320" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 320px !important; height: auto !important; visibility: visible !important;" data-type="gif" _width="320px" src="./软件自由日活动/130.gif" data-order="4" data-fail="0"></section>            </section>        </section>    </section>    <section style="box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;padding: 10px;border-left: 1px solid rgba(252, 168, 120, 0.43);border-bottom-left-radius: 0px;border-right: 1px solid rgba(252, 168, 120, 0.43);border-top-right-radius: 0px;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                    <img class="" data-ratio="0.75" data-w="1080" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="jpeg" _width="677px" src="./软件自由日活动/145.jpeg" crossorigin="anonymous" data-fail="0"></section>            </section>            <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                <p style="text-align: right;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgba(146, 146, 146, 0.66);box-sizing: border-box;">王康担任本次活动的主持人</span><br style="box-sizing: border-box;"></p>            </section>        </section>    </section>    <section style="text-align: right;margin: -13px 0% 10px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 150px;height: 30px;vertical-align: top;overflow: hidden;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                    <img class=" __bg_gif" data-ratio="0.140625" data-w="320" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 320px !important; height: auto !important; visibility: visible !important;" data-type="gif" _width="320px" src="./软件自由日活动/165.gif" data-order="5" data-fail="0"></section>            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;padding: 0px;border-left: 10px solid rgba(252, 168, 120, 0.43);border-bottom-left-radius: 0px;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                    <img class="" data-ratio="0.7509259" data-w="1080" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="jpeg" _width="677px" src="./软件自由日活动/180.jpeg" crossorigin="anonymous" data-fail="0"></section>            </section>            <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">                <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgba(146, 146, 146, 0.66);box-sizing: border-box;">钟天乐介绍微软与开源</span><br style="box-sizing: border-box;"></p>            </section>        </section>    </section>    <section style="margin: 10px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section class="" style="font-size: 15px;color: rgb(29, 29, 29);line-height: 1.8;padding: 0px 15px;box-sizing: border-box;">            <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">                还有一位来自成都freeCodeCamp社区的朋友谈到了编程入门门槛低、鼓励女性编程及重视编程者平等的观点并介绍了freeCodeCamp社区。</p>        </section>    </section>    <section style="margin: 0px 0% 10px;text-align: left;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;width: 50%;border-style: dashed;border-width: 0px 0px 2px;border-radius: 0px;border-color: rgb(182, 182, 182);box-sizing: border-box;">            <section style="margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="border-top: 1px dashed rgba(0, 0, 0, 0);box-sizing: border-box;"></section>            </section>        </section>        <section style="display: inline-block;vertical-align: middle;width: 10%;box-sizing: border-box;">            <section style="text-align: right;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;box-sizing: border-box;">                    <svg class="" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 91.8 70.9" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%">                        <g style="box-sizing: border-box;">                            <path d="M91.8,22.4C91.8,10,81.8,0,69.4,0C57,0,47,10,47,22.4c0,12.4,10,22.4,22.4,22.4c2.7,0,5.2-0.5,7.6-1.3L51.2,69.3c-0.4,0.4-0.4,1,0,1.3c0.2,0.2,0.4,0.3,0.7,0.3s0.5-0.1,0.7-0.3l30.3-30.3C88.3,36.3,91.8,29.8,91.8,22.4z" fill="#000000" style="box-sizing: border-box;"></path>                            <path d="M22.4,0C10,0,0,10,0,22.4c0,12.4,10,22.4,22.4,22.4c2.7,0,5.2-0.5,7.6-1.3L4.3,69.3c-0.4,0.4-0.4,1,0,1.3C4.5,70.9,4.7,71,5,71s0.5-0.1,0.7-0.3l30.3-30.3c5.4-4.1,9-10.6,9-17.9C44.9,10,34.8,0,22.4,0z" fill="#000000" style="box-sizing: border-box;"></path>                        </g>                    </svg></section>            </section>        </section>    </section>    <section class="" style="box-sizing: border-box;" powered-by="xiumi.us">        <p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p>    </section>    <section style="margin: 10px 0%;text-align: center;transform: translate3d(-2px, 0px, 0px);-webkit-transform: translate3d(-2px, 0px, 0px);-moz-transform: translate3d(-2px, 0px, 0px);-o-transform: translate3d(-2px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 95%;vertical-align: top;border-style: dashed;border-width: 2px;border-radius: 0px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(182, 182, 182) rgb(182, 182, 182);background-color: rgb(255, 255, 255);padding: 0px;box-sizing: border-box;">            <section style="margin: 5px 0% -5px;transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                    <img class="" data-ratio="0.6634349" data-w="722" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/240.png" crossorigin="anonymous" data-fail="0"></section>            </section>        </section>    </section>    <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">            <img class="" data-ratio="0.0613333" data-w="750" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/252.png" crossorigin="anonymous" data-fail="0"></section>    </section>    <section style="box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;width: 100%;vertical-align: top;border-width: 3px;border-radius: 0px;border-style: solid;border-color: rgb(29, 29, 29);padding: 0px;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;border-style: solid;border-width: 0px;border-radius: 0px;border-color: rgb(29, 29, 29);box-sizing: border-box;">                    <img class="" data-ratio="0.6879433" data-w="705" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/265.png" crossorigin="anonymous" data-fail="0"></section>            </section>        </section>    </section>    <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">        <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">            <img class="" data-ratio="0.0613333" data-w="750" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/252.png" crossorigin="anonymous" data-fail="0"></section>    </section>    <section style="margin: 10px 0%;padding: 0px 3px;box-sizing: border-box;" powered-by="xiumi.us">        <section style="display: inline-block;vertical-align: middle;padding: 0px 10px 10px;margin: 0px 0px -2em;width: 100%;box-sizing: border-box;">            <section style="text-align: center;margin: 0px 0%;box-sizing: border-box;" powered-by="xiumi.us">                <section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;">                    <img class="" data-ratio="1.3854447" data-w="742" style="vertical-align: middle; max-width: 100%; box-sizing: border-box; width: 677px !important; height: auto !important; visibility: visible !important;" data-type="png" _width="677px" src="./软件自由日活动/290.png" crossorigin="anonymous" data-fail="0"></section>            </section>        </section>        <section style="width: 6px;height: 6px;float: left;background-color: rgb(62, 62, 62);margin-left: -3px;border-radius: 100%;box-sizing: border-box;">        </section>        <section style="width: 6px;height: 6px;margin-right: -3px;background-color: rgb(62, 62, 62);float: right;border-radius: 100%;box-sizing: border-box;">        </section>        <section style="height: 2em;border-left: 1px solid rgb(62, 62, 62);border-bottom: 1px solid rgb(62, 62, 62);border-right: 1px solid rgb(62, 62, 62);border-top-color: rgb(62, 62, 62);box-sizing: border-box;">        </section>    </section></section><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="活动" scheme="https://uestc-msc.github.io/categories/%E6%B4%BB%E5%8A%A8/"/>
    
    
      <category term="林柏澜" scheme="https://uestc-msc.github.io/tags/%E6%9E%97%E6%9F%8F%E6%BE%9C/"/>
    
  </entry>
  
  <entry>
    <title>Markdown安利&amp;Typora简要使用教程</title>
    <link href="https://uestc-msc.github.io/2019/09/23/Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://uestc-msc.github.io/2019/09/23/Markdown安利-Typora简要使用教程/</id>
    <published>2019-09-23T06:45:31.000Z</published>
    <updated>2021-02-24T10:39:20.923Z</updated>
    
    <content type="html"><![CDATA[<p>在此我来安利一下<strong>Markdown</strong>和<strong>Typora</strong>.</p><a id="more"></a><h2 id="Markdown安利"><a href="#Markdown安利" class="headerlink" title="Markdown安利"></a>Markdown安利</h2><h3 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown"></a>什么是Markdown</h3><p>Markdown是一门语言, 一门我正用来写这篇博客所用的语言, 一门轻量级的<strong>标记语言</strong> (Markup Language). 有没有觉得这个词很眼熟? 是的, HTML全称<strong>HyperText Markup Language</strong>. Markdown和HTML同属于Markup<br>Language(Markdown是一门Markup Language是Markdown作者的恶趣味), 它们与C, Python等编程语言并不是一类东西. <strong>Markup</strong>这个词源自<strong>印刷业</strong>, 指的是在电子排版技术出现之前人们对印刷物内容的排版进行标记的方式. 比如一段文字应当是<strong>粗体</strong>, <em>斜体</em>,<br><u>有下划线</u>还是<del>有删除线</del>, 使用什么字体, 字体大小, 左页边距应当是多少, 一张图片该放在哪里, 多大等等…</p><p>💡 也就是说以前的人们在将原稿最终印刷出来前想知道会印成什么样基本靠脑补, 而现在我们称这个由标记语言文件得到最终效果的过程为<strong>渲染</strong> (render).</p><p>而之所以我们说Markdown是一门<strong>轻量级</strong>的标记语言是因为在Markdown的语法比HTML等标记语言要简洁太多😆</p><ul><li>一</li><li>二</li></ul><p>比如👆 上面这个列表的Markdown实现代码为</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>一</span><br><span class="line"><span class="bullet">- </span>二</span><br></pre></td></tr></tbody></table></figure><p>而HTML实现代码为</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>但Markdown有时候也会让人觉得太过轻量级以至于缺少一些语法, 比如这个<u>下划线</u><br>其实是用HTML标签实现的. 好在你也可以在Markdown文件中写HTML, 如今的Markdown渲染工具基本都支持这个功能.</p><p>也是由于上面这个原因, 在Markdown作者们推出的<br><a href="https://commonmark.org/" target="_blank" rel="noopener"><strong>CommonMark</strong></a>的基础上有了添加了更多语法的各种<br>Markdown超集, 比如GitHub发布的<a href="https://github.github.com/gfm/" target="_blank" rel="noopener"><strong>GitHub Flavored<br>Markdown</strong></a>.</p><h3 id="Markdown应用广泛吗"><a href="#Markdown应用广泛吗" class="headerlink" title="Markdown应用广泛吗"></a>Markdown应用广泛吗</h3><p>实际上如今Markdown的使用相当广泛, 只要是支持所谓<strong>富文本</strong>的社区/论坛等, 比如说<br><strong>GitHub</strong>, <strong>知乎</strong>, <strong>Stack OverFlow</strong>, <strong>CSDN博客</strong>, <strong>Wikipedia</strong>都是使用的<br>Markdown. 另外因为Markdown和HTML的转换十分容易, 目前大多个人博客都是编辑Markdown<br>格式的文章再生成HTML页面, 比如我正在码的也是Markdown文件.</p><p>再有就是目前大多数项目根目录的<strong>README</strong>文档都是Markdown格式, 而在线查看项目代码时<br>GitHub等代码托管网站都会自动将项目中所有Markdown文件渲染出来.</p><h3 id="为什么我们使用Markdown"><a href="#为什么我们使用Markdown" class="headerlink" title="为什么我们使用Markdown"></a>为什么我们使用Markdown</h3><p>以下是网上的一些总结和我个人的体会.</p><ol><li>Markdown的设计理念是易读易写, 因此<strong>即便不渲染Markdown文件的可读性也很高</strong>,<br>这让没有Markdown渲染工具的人也能很好地阅读, 而如果要脑力渲染HTML, 一会就眼晕了.</li><li>这种格式能让文档很方便的排列为很简洁好看的排版, <strong>能让人专注于书写内容</strong>, 不必费神排版</li><li>支持代码按语言的<strong>语法高亮</strong></li><li><strong>能很方便的进行版本管理</strong>. 在要进行版本管理的项目中的Word文件简直是毒瘤, 不操作一番的话版本管理工具比如git并不能识别word文件具体变化, 而使用纯文本的<br>Markdown能让每次的更改被体现出来!</li><li><strong>占用空间小</strong> (可以想一想一个word文档的大小)</li><li><strong>能很容易地转为多种格式</strong>. Markdown和HTML是兄弟关系,因此Markdown文件能轻松转换成<br><strong>HTML</strong>文件格式以及HTML文件能轻易转换为的格式(<strong>PDF</strong>, <strong>jpg</strong>, <strong>Epub</strong>等)<br>是显而易见的. 通过一些额外工具(比如<a href="https://pandoc.org/" target="_blank" rel="noopener">Pandoc</a>)的帮助,<br>Markdown文件还能一键转化为更多文件格式,比如<strong>LaTeX</strong>, <strong>Word</strong>,<br><strong>OpenOffice</strong>, <strong>Media Wiki</strong>等.</li><li>能方便的插入<strong>图片</strong>, <strong>表格</strong>, <strong>超链接</strong>等</li><li>兼容<strong>HTML</strong>语法, 因此我们想让页面显示成什么样就可以显示成什么样</li><li>可以兼容<strong>LaTeX</strong>语法, 可以很方便的显示复杂公式</li><li>还可以兼容<strong>Graphviz</strong>, <strong>Mermaid</strong>等流程图工具等等…</li></ol><h3 id="Markdown简明语法"><a href="#Markdown简明语法" class="headerlink" title="Markdown简明语法"></a>Markdown简明语法</h3><ul><li><p>一个标题以几个<code>#</code>开头, 空格后是文字. 以#的个数来表示第几级标题</p></li><li><p>以 - 开头接一个空格开始一个子弹列表, 以 1. 接空格开始一个有序列表</p></li><li><p>在要加粗的词两侧加 ** 来加粗. 如果要打出 ** 等特殊字符要在星号前加 \ 来转义</p></li><li><p>在<strong>行内代码</strong>两侧加 ` .  注意这不是单引号, 在我键盘上在<kbd>Esc</kbd> 键下面. 当然这个不只是用来放行内代码的, 也可以放别的.</p></li><li><p>在代码块上下行加 ``` , 第一个```后写代码的语言.</p></li><li><p>在Typora这个软件里插入图片很容易, 直接<kbd>Ctrl V</kbd>粘贴就好了, 或者右键, 里面有插入图片的按键. 插入图片的markdown语法是</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">当图片失效时此处显示的文字</span>](<span class="link">图片地址</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><p>插入超链接的语法和插入图片的语法很像, 此处举例说明. 这是点击进入百度的链接👉 <a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度](https://www.baidu.com)</span><br></pre></td></tr></tbody></table></figure></li><li><p>表格用<code>|</code>分隔每个元素, 第一行是各列的名字, 第二行的 <code>|</code>间是<code>-</code>, 分隔列名和值. 以下是一个例子</p></li></ul><div class="table-container"><table><thead><tr><th>第一列</th><th>第二列</th><th>第三列</th></tr></thead><tbody><tr><td>a</td><td>b</td><td>c</td></tr></tbody></table></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 第一列 | 第二列 | 第三列 |</span><br><span class="line">|-|-|-|</span><br><span class="line">| a | b | c |</span><br></pre></td></tr></tbody></table></figure><p>💡 更详细的语法说明在Typora内可以查看Typora自带的Markdown语法参考手册</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569274096465.png" alt="1569274096465"></p><h2 id="Typora安利"><a href="#Typora安利" class="headerlink" title="Typora安利"></a>Typora安利</h2><p>那么用什么软件来写Markdown呢? 认准<a href="https://typora.io/#download" target="_blank" rel="noopener"><strong>Typora</strong></a>!</p><p>Typora的优点多到我不想写 (不其实是单纯不想写了), 最突出的优点我觉得是它的<strong>颜值</strong>,<br>以及<strong>能直接将图片粘贴到文件中</strong>.</p><h3 id="Typora快速入门"><a href="#Typora快速入门" class="headerlink" title="Typora快速入门"></a>Typora快速入门</h3><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p>在<strong>Themes</strong>一栏可以切换软件的主题</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569271897771.png" alt="1569271897771"></p><h4 id="大纲视图"><a href="#大纲视图" class="headerlink" title="大纲视图"></a>大纲视图</h4><p>可以按这个<strong>OutLine</strong>或者按左下角的小圆圈触发大纲视图, 点击大纲视图里的标题可以快速跳转.</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569272130639.png" alt="1569272130639"></p><h4 id="源代码视图"><a href="#源代码视图" class="headerlink" title="源代码视图"></a>源代码视图</h4><p>按左下角这个<kbd>\&lt;\/&gt;</kbd>可以切换到源代码视图</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569272534032.png" alt="1569272534032"></p><h4 id="拼写检查"><a href="#拼写检查" class="headerlink" title="拼写检查"></a>拼写检查</h4><p>右下角这里可以选择进行拼写检查的语言或者关闭这个功能.</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569272445049.png" alt="1569272445049"></p><h4 id="更多设置"><a href="#更多设置" class="headerlink" title="更多设置"></a>更多设置</h4><p>按这个<strong>Preference</strong>可以进行更多偏好设置.</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1569272312746.png" alt="1569272312746"></p><p>以下是我的推荐设置</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/TIM%E5%9B%BE%E7%89%8720190924051240.png" alt=""></p><p>勾选<strong>对网路图片应用上述规则</strong>那直接粘贴从浏览器复制的图片时Typora会自动将该图片下载到这个指定文件夹. 建议开启插入时自动转义, 虽然这样会让中文 文件夹名变为乱码, 但这样无论文件夹名/文件名有多骚都不会出问题.</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/TIM%E5%9B%BE%E7%89%8720190924051232.png" alt=""></p><p>忽略单个换行让Typora遵循GFM: 单个换行不渲染为换行, 两个换行才渲染为换行</p><p><img src="Markdown%E5%AE%89%E5%88%A9-Typora%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/TIM%E5%9B%BE%E7%89%8720190924051204.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在此我来安利一下&lt;strong&gt;Markdown&lt;/strong&gt;和&lt;strong&gt;Typora&lt;/strong&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="科普" scheme="https://uestc-msc.github.io/categories/%E7%A7%91%E6%99%AE/"/>
    
    
      <category term="LeoJhonSong" scheme="https://uestc-msc.github.io/tags/LeoJhonSong/"/>
    
  </entry>
  
  <entry>
    <title>给电子科大新生们的软件推荐列表</title>
    <link href="https://uestc-msc.github.io/2019/09/03/%E7%BB%99%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A7%E6%96%B0%E7%94%9F%E4%BB%AC%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90%E5%88%97%E8%A1%A8/"/>
    <id>https://uestc-msc.github.io/2019/09/03/给电子科大新生们的软件推荐列表/</id>
    <published>2019-09-03T12:19:02.000Z</published>
    <updated>2021-02-24T10:39:20.935Z</updated>
    
    <content type="html"><![CDATA[<p>也许很多同学经常苦恼于找不到免费, 好用, 美观, 干净的软件. 这里为大家推荐一些十分好用的<br>Windows平台电脑软件及部分安装教程链接. (破解软件的也帮你们找好了哦)</p><p>🌟🌟🌟 <a href="#一键跳转Sci-Hub">这里</a>, <a href="#Office全家桶">这里</a>和<a href="#MATLAB">这里</a>有学校给大家提供的福利的说明 😏</p><a id="more"></a><ol><li><a href="#必备">必备</a><ol><li><a href="#全局文件搜索工具">全局文件搜索工具</a></li><li><a href="#电脑管家">电脑管家</a></li><li><a href="#截图贴图工具">截图/贴图工具</a></li><li><a href="#压缩解压缩工具">压缩/解压缩工具</a></li><li><a href="#百度网盘破解版">百度网盘破解版</a></li><li><a href="#视频播放器">视频播放器</a></li><li><a href="#音乐播放器">音乐播放器</a></li></ol></li><li><a href="#Chrome插件">Chrome插件</a><ol><li><a href="#必备-1">必备</a><ol><li><a href="#查词工具">查词工具</a></li><li><a href="#网页截长图工具">网页截长图工具</a></li><li><a href="#稍后阅读">稍后阅读</a></li></ol></li><li><a href="#GitHub">GitHub</a><ol><li><a href="#下载仓库指定文件文件夹">下载仓库指定文件/文件夹</a></li><li><a href="#侧边栏显示仓库文件树">侧边栏显示仓库文件树</a></li><li><a href="#3D-GitHub提交热力图">3D GitHub提交热力图</a></li></ol></li><li><a href="#学术">学术</a><ol><li><a href="#谷歌学术搜索">谷歌学术搜索</a></li><li><a href="#一键跳转Sci-Hub">一键跳转Sci-Hub</a></li></ol></li></ol></li><li><a href="#办公">办公</a><ol><li><a href="#Office全家桶">Office全家桶</a></li><li><a href="#PDF阅读器">PDF阅读器</a></li></ol></li><li><a href="#写作">写作</a><ol><li><a href="#文本编辑器">文本编辑器</a></li><li><a href="#Markdown">Markdown</a></li><li><a href="#PDF">PDF</a></li></ol></li><li><a href="#Adobe全家桶">Adobe全家桶</a></li><li><a href="#CAD">CAD</a></li><li><a href="#MATLAB">MATLAB</a></li><li><a href="#系统安装维修工具">系统安装/维修工具</a><ol><li><a href="#系统启动盘烧录工具">系统启动盘烧录工具</a></li><li><a href="#PE盘">PE盘</a></li><li><a href="#数据恢复">数据恢复</a></li></ol></li></ol><h2 id="必备"><a href="#必备" class="headerlink" title="必备"></a>必备</h2><h3 id="全局文件搜索工具"><a href="#全局文件搜索工具" class="headerlink" title="全局文件搜索工具"></a>全局文件搜索工具</h3><p>只要你曾试过在Windows资源管理器中搜索文件你就会知道只要搜索范围稍微大一些这个搜索过程是多么长…</p><p>🔗 <a href="https://www.voidtools.com/zh-cn/" target="_blank" rel="noopener"><strong>Everything</strong></a> 这款搜索工具让搜索变得十分迅速! 它甚至支持正则搜索等更高级的功能.</p><p>💡 Everything安装起来也很容易, 下载上面链接中的<strong>安装版64位</strong>, 安装引导中除了安装位置都维持默认选项即可.</p><h3 id="电脑管家"><a href="#电脑管家" class="headerlink" title="电脑管家"></a>电脑管家</h3><p>国内一提电脑管家那就是<strong>360</strong>, <strong>鲁大师</strong>等一众流氓软件, 事实上他们给我们带来的困扰比便利更多, 不仅弹出各种迷之弹窗, 大多数还会捆绑下载一大堆奇奇怪怪的软件… 但清理垃圾, 管理开机启动程序等功能确实是需要的.</p><p>我推荐🔗 <a href="https://www.ccleaner.com/ccleaner/download" target="_blank" rel="noopener"><strong>CCleaner</strong></a> 页面往下拉, 点击绿色的<strong>Download</strong>按钮即可下载免费版.</p><p><img src="https://img.creativemark.co.uk/uploads/images/538/17538/img3File.png" alt="âccleanerâçå¾çæç´¢ç»æ"></p><p>💡 安装后可以在设置中将语言调为<code>中文</code>. 另外默认情况下CCleaner总是会弹出提示可以更新的弹窗, 但这个检查更新的功能可以<a href="https://www.cnblogs.com/chucklu/p/10404615.html" target="_blank" rel="noopener">像这样关闭</a></p><h3 id="截图-贴图工具"><a href="#截图-贴图工具" class="headerlink" title="截图/贴图工具"></a>截图/贴图工具</h3><p>我们都知道Windows自带的截图工具是很不好用的, 只能进行最简单的截图.</p><p>这里推荐🔗<br><a href="https://www.microsoft.com/zh-cn/p/snipaste/9p1wxpkb68kx?activetab=pivot:overviewtab" target="_blank" rel="noopener"><strong>snipaste</strong></a>.<br>snipaste不仅能截图, 还能简单的P一下截下来的图: 画线, 画框, 画箭头, 打码, 查看像素点颜色值…</p><p>而我觉得snipaste最惊艳的功能是他还能<strong>贴图</strong>, 也就是能把刚截的图直接显示出来, 可以挪动, 调整大小, 调整透明度. 比如当我们想对照着看课文里两个相隔很多页的段落时, 我们可以把其中一段截图并贴出来.</p><p><img src="给电子科大新生们的软件推荐列表/apps.52183.14503356220976813.c71d2a10-0aa3-486c-9563-2c363aaaab5e.jpeg" alt="img"></p><h3 id="压缩-解压缩工具"><a href="#压缩-解压缩工具" class="headerlink" title="压缩/解压缩工具"></a>压缩/解压缩工具</h3><p>而压缩/解压缩工具最棒的无疑是🔗 <a href="https://www.bandisoft.com/bandizip/" target="_blank" rel="noopener"><strong>Bandizip</strong></a></p><p>Bandizip支持的格式很多, 不必担心遇到无法解压的格式. 另外它的界面也很漂亮😄</p><p><img src="给电子科大新生们的软件推荐列表/bandizip.png" alt="âbandizipâçå¾çæç´¢ç»æ"></p><h3 id="百度网盘破解版"><a href="#百度网盘破解版" class="headerlink" title="百度网盘破解版"></a>百度网盘破解版</h3><p>国内分享大文件通常使用百度网盘, 但这东西如果不充超级会员会极大的限制下载速度 (不过在校园有些地方能达到2, 3Mb/s), 下载文件数量也有限制. 网上有好几个破解版百度网盘, 也有脚本能突破百度网盘下载速度限制, 但用来用去我还是觉得🔗 <a href="https://pandownload.com/" target="_blank" rel="noopener">PanDownload</a> 体验最佳.</p><p><img src="给电子科大新生们的软件推荐列表/login_1.png" alt="img"></p><p>💡 PanDownload不需要安装, 点击<strong>本地下载</strong>后将压缩包解压就可以点击其中的<strong>exe</strong><br>文件使用了. 另外PanDownload也有在线版</p><h3 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h3><p>虽然爱奇艺, 迅雷影音, 优酷等软件也能看外部导入的视频, 但如果我们想要一款单纯没有繁杂的视频推荐, 广告, 但又功能强大的视频播放器,<br><a href="https://potplayer.daum.net/" target="_blank" rel="noopener"><strong>PotPlayer</strong></a>当属最值得推荐的播放器.</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8">💡</span> PotPlayer的官网被墙了, 无法翻墙的同学们可以从<a href="https://daumpotplayer.com/download/" target="_blank" rel="noopener">这里</a>下载</p><p><img src="给电子科大新生们的软件推荐列表/1532514381_potplayer.jpg" alt="âpotplayerâçå¾çæç´¢ç»æ"></p><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p>和视频播放器的情况相同, 我们同样需要一个干净, 功能强大的<strong>无损</strong>音乐播放器, 那就是🔗<br><a href="https://www.foobar2000.org/download" target="_blank" rel="noopener"><strong>foobar2000</strong></a> foobar支持的音频格式众多, 解析度较好. 如果你觉得foobar界面有点简朴, 还可以更换皮肤</p><p><img src="给电子科大新生们的软件推荐列表/1527010038_foobar2000.jpg" alt="âfoobar2000âçå¾çæç´¢ç»æ"></p><p>💡 foobar不默认支持的ape格式可以通过<a href="https://www.jianshu.com/p/a25aa0f1a063" target="_blank" rel="noopener">安装插件</a>来支持.</p><h2 id="Chrome插件"><a href="#Chrome插件" class="headerlink" title="Chrome插件"></a>Chrome插件</h2><h3 id="必备-1"><a href="#必备-1" class="headerlink" title="必备"></a>必备</h3><h4 id="查词工具"><a href="#查词工具" class="headerlink" title="查词工具"></a>查词工具</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567618640695.png?10" alt="img"></p><p>🔗 <a href="https://chrome.google.com/webstore/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener"><strong>沙拉查词</strong></a><br>是一款查词十分迅速便利, 弹出界面十分养眼, 可选功能很多的查词工具, 是chrome查词插件中毫无疑问最好的!</p><h4 id="网页截长图工具"><a href="#网页截长图工具" class="headerlink" title="网页截长图工具"></a>网页截长图工具</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567620991957.png?10" alt="img"></p><p>如果只是为了截普通的图有了snipaste的我们没必要再给浏览器单独装一个插件, 但🔗<br><a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg" target="_blank" rel="noopener"><strong>FireShot</strong></a><br>的惊艳之处在于它可以<strong>截长图</strong>. FireShot能将整个网页转为图片,, 也能截指定区域的长图.</p><h4 id="稍后阅读"><a href="#稍后阅读" class="headerlink" title="稍后阅读"></a>稍后阅读</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567618023676.png?10" alt="img"></p><p>虽然我现在用的是chrome, 但我很喜欢edge的<strong>稍后阅读</strong>功能, 能把当前所有网页都关闭并放到稍后阅读的列表里. 一方面如果网页开多了<strong>浏览器十分吃内存</strong>, 一方面能将一部分目前暂时不看但还有用的网页收纳起来, 让网页变少一些, 心情也会好不少😆</p><p>可惜的是chrome并没有内置这个功能. 不过通过🔗<br><a href="https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall" target="_blank" rel="noopener"><strong>OneTab</strong></a><br>这个插件倒是实现了稍后阅读的功能👍</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><h4 id="下载仓库指定文件-文件夹"><a href="#下载仓库指定文件-文件夹" class="headerlink" title="下载仓库指定文件/文件夹"></a>下载仓库指定文件/文件夹</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567621794207.png?10" alt="img"></p><p>很多时候我们只想下载一个仓库中一部分文件而不是整个仓库, 但GitHub本身并没有提供这种功能. 如果<a href="https://zhgcao.github.io/2016/05/11/git-sparse-checkout/" target="_blank" rel="noopener">用git命令</a>未免有点麻烦.<br>🔗<a href="https://zhgcao.github.io/2016/05/11/git-sparse-checkout/" target="_blank" rel="noopener">GitZip</a>允许我们<strong>一键下载</strong>一个文件夹为压缩包, 可以说是很便利了😃</p><h4 id="侧边栏显示仓库文件树"><a href="#侧边栏显示仓库文件树" class="headerlink" title="侧边栏显示仓库文件树"></a>侧边栏显示仓库文件树</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567622482155.png?10" alt="img"></p><p>在GitHub上想找一个文件只能一层一层文件夹点进去是一件令人十分苦恼的事, 而🔗<br><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener"><strong>Octotree</strong></a><br>能让我们<strong>像使用IDE一样</strong>在侧边栏看到文件树, 甚至是带图标的!</p><h4 id="3D-GitHub提交热力图"><a href="#3D-GitHub提交热力图" class="headerlink" title="3D GitHub提交热力图"></a>3D GitHub提交热力图</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567622962381.png?10" alt="img"></p><p>🔗 <a href="https://chrome.google.com/webstore/detail/isometric-contributions/mjoedlfflcchnleknnceiplgaeoegien" target="_blank" rel="noopener"><strong>Isometric<br>Contributions</strong></a><br>纯碎是一个美化GitHub个人主页的贡献热力图的插件. 它会将<strong>Github Contributions Graph</strong>呈现为<br><strong>3D的柱状图</strong>. 非常炫酷😎</p><h3 id="学术"><a href="#学术" class="headerlink" title="学术"></a>学术</h3><h4 id="谷歌学术搜索"><a href="#谷歌学术搜索" class="headerlink" title="谷歌学术搜索"></a>谷歌学术搜索</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed.png?10" alt="img"></p><p>使用这个🔗 <a href="https://chrome.google.com/webstore/detail/google-scholar-button/ldipcbpaocekfooobnbcddclnhejkcpn" target="_blank" rel="noopener"><strong>Google学术搜索按钮</strong></a><br>可以十分便利的搜索有关学术的内容.</p><h4 id="一键跳转Sci-Hub"><a href="#一键跳转Sci-Hub" class="headerlink" title="一键跳转Sci-Hub"></a>一键跳转Sci-Hub</h4><p><img src="给电子科大新生们的软件推荐列表/unnamed-1567618045938.png?10" alt="img"></p><p><strong>Sci-Hub</strong>是一个emmm你们以后会知道的神仙网站, 🔗 <a href="https://chrome.google.com/webstore/detail/auto-sci-hub/nlogbpfgpkffmombiknfdoogphkimmmd" target="_blank" rel="noopener"><strong>Auto<br>Sci-Hub</strong></a><br>实现了<strong>一键从论文网页跳转Sci-Hub</strong>功能</p><p>💡 不过Sci-Hub上只有SCI的文章, 如果想下<strong>知网</strong>等国内文献数据库的文章, <strong>只需连接校园网后再进入即可下载</strong>. 学校为大家购买了许多数据库 (具体哪些数据库大家可以到<br><a href="http://www.lib.uestc.edu.cn/" target="_blank" rel="noopener">学校图书馆官网</a>查看, 中外数据库都有), 可以免费下载各种文献👍</p><h2 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h2><h3 id="Office全家桶"><a href="#Office全家桶" class="headerlink" title="Office全家桶"></a>Office全家桶</h3><p>现在我来解说一下如何破解Office… 不,没这么麻烦, 电子科大为同学们提供了<a href="http://ms.uestc.edu.cn/" target="_blank" rel="noopener"><strong>免费的正版Office</strong></a>! (甚至格院同学们可以享受高贵的Office365套装🐮🍺)</p><p>💡 上面这个链接只能通过校园网或者寝室WiFi登录. Office的激活需要通过<a href="http://ms.uestc.edu.cn/help/client" target="_blank" rel="noopener">学校提供的这个软件</a>进行.</p><p>💡 顺带一提, 用学校邮箱 (<strong>学号@std.uestc.edu.cn</strong>)登录OneDirve (格院同学们也可以用<br><strong>格大学号@student.gla.ac.uk</strong>登录), 会惊喜的发现有<strong>2T</strong>的云空间!</p><h3 id="PDF阅读器"><a href="#PDF阅读器" class="headerlink" title="PDF阅读器"></a>PDF阅读器</h3><p>实际上只是想看PDF的话你只需要有<strong>Chrome</strong>或者<strong>Edge</strong>这两个浏览器之一就可以了.我个人觉得chrome不适合拿来看pdf, 因为它看pdf的界面不好看😁 而用Edge看pdf甚至体验很良好, 打开速度快, 还能点右上角的<strong>笔</strong>图标来用<strong>OneNote</strong>做笔记. 也有很多人用的是老牌pdf阅读器<strong>Adobe Acrobat</strong>. 虽然Acrobat历史悠久, 但它的界面设计得很现代,很值得称赞的是它打开pdf的速度. <strong>但是</strong>Adobe家的东西向来要钱, 想免费使用Acrobat那就得破解, 我觉得不如就用Edge了.</p><p>但是上述几款的问题在于他们并不能<strong>记忆阅读进度</strong>. 如果课件每次打开需要手动翻到讲到的地方我觉得还是挺麻烦的. 🔗 <a href="https://www.microsoft.com/zh-cn/p/drawboard-pdf/9wzdncrfhwqt?cid=msft_web_collection&amp;activetab=pivot:overviewtab" target="_blank" rel="noopener">Drawboard<br>PDF</a><br>是我目前使用的pdf阅读器. 很不幸的是在我下载时还免费的这个软件现在要好几十了😁 不过这个软件能记忆阅读进度, 支持手写/触屏模式, 做笔记的方式甚至比OneNote还要丰富.<br>如果你喜欢在pdf上手写笔记还是很推荐这款软件的.</p><p><img src="给电子科大新生们的软件推荐列表/apps.59328.9007199266247478.31cdc74a-125a-4592-9f2c-1a98c77c5899.jpeg" alt="img"></p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><h3 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h3><p>🔗 <a href="https://www.zhihu.com/question/20650946/answer/15745831" target="_blank" rel="noopener"><strong>不建议使用Windows自带的记事本</strong></a></p><p>因为历史原因, Windows记事本会在文件最开头加一个<br><a href="https://www.zhihu.com/question/20167122/answer/14199022" target="_blank" rel="noopener">BOM</a>, 导致在某些情况下文本会被识别为乱码.</p><p>最受认可的记事本是🔗 <a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener"><strong>notepad++</strong></a>, 它没有上面说这个毛病, 还有许多很实用的功能, 比如他能装插件, 比如基本所有语言的语法高亮 (在notepad中以HTML格式复制代码直接粘贴到word可以连语法高亮一起粘贴过去! 当然VSCode等编辑器一样能做到)</p><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>要说写markdown那必然是🔗 <a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></p><p>这是一款<strong>所见即所得</strong>的跨平台Markdown编辑器. 极其美观, 能显示大纲, 能直接粘贴图片, 能迅速更换颜色主题,能显示数学公式, 能导出文件为HTML, PDF等. 总之写markdown认准<br>typora!</p><p><img src="给电子科大新生们的软件推荐列表/DG3gAjJV0AE9AB7.png" alt="âtyporaâçå¾çæç´¢ç»æ"></p><p>💡 在typora的<strong>帮助</strong>一栏有<strong>markdown语法参考文档</strong>.</p><h3 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h3><p>是的pdf也是可以编辑的, 只不过大部分软件不支持.</p><p><a href="#pdf阅读器">前面</a>提到的<strong>Acrobat</strong>是可以编辑pdf的, 但我最推荐的方式是用<strong>Word</strong><br>打开编辑 (较老的版本不支持). 因为word学校免费提供了.</p><h2 id="Adobe全家桶"><a href="#Adobe全家桶" class="headerlink" title="Adobe全家桶"></a>Adobe全家桶</h2><p>以下是来自一个微信公众号的adobe全家桶安装和破解教程</p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202334&amp;idx=3&amp;sn=cc0d3c27928e1a8baed4e03923bf8e62&amp;chksm=8ee14032b996c924b979271ccd83aef74f0635064a6b61b3bf2fe4d39fa99e6dbcb311437557&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Photoshop CC2019</a></p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202696&amp;idx=1&amp;sn=e3469547c11f2dd49b75cad908f016e1&amp;chksm=8ee142a4b996cbb234cc7842dc918c39873f67f2f22bba6f3a8603d372d53a3740a519c1ff3b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Illustrator CC2019</a></p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202285&amp;idx=2&amp;sn=346961051fb4ae61a0f2fb90b850e197&amp;chksm=8ee14041b996c9578aa6ea14f6c9c06661e47c9aa9b3f67e53f1a1dd1ad634bb94a0f8b2893c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Premiere Pro CC2019</a></p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200846&amp;idx=8&amp;sn=1d785d9c9d9e7615384cb38297db0832&amp;chksm=8ee17be2b996f2f4ce7473fc282bc83ca31002473abfe45e504d502007a2db3da1d45d911ed0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">After Effects CC2019</a></p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650200846&amp;idx=5&amp;sn=3722cbab9b221e5eb0f1f28116316153&amp;chksm=8ee17be2b996f2f42dd607b3a5a43ee24739c75dc188c16ea2d083301ba9813cd64860fb4f49&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Audition CC2019</a></p><h2 id="CAD"><a href="#CAD" class="headerlink" title="CAD"></a>CAD</h2><p><strong>AutoCAD</strong>和<strong>SolidWorks</strong>是大学生最常接触到的CAD (计算机辅助绘图) 软件, 其中<br>AutoCAD更多是用于绘制2D图纸, 而3D设计最常用的就是SolidWorks了.</p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202243&amp;idx=1&amp;sn=181f1c29138c058208005cafcf625791&amp;chksm=8ee1406fb996c97908fa15a2cb17ec6c9145892f94be0c3d375978fe25d78e2d8d1be06274e6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">AutoCAD 2020</a></p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650199099&amp;idx=3&amp;sn=a5ba516295d46084000fdfe60b657e5f&amp;chksm=8ee174d7b996fdc1ede01ecab3ed5be6ac40beb613d0289b49943bf4ad706fecf096f888d808&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SolidWorks 2016</a></p><p>💡 因为SolidWorks无法向上兼容 (低版本SW无法打开在高版本创作的工程), 考虑到用得最多的版本是<strong>2016</strong>, 此处也给出2016版的链接.</p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202684&amp;idx=1&amp;sn=a0d19adb81f48d6e480f1a9ce4968af1&amp;chksm=8ee142d0b996cbc61b6bb49432fb29f29d00c4a6e6fe2a863d191e2e13cbe04100eccafba54e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SolidWorks 2019</a></p><h2 id="MATLAB"><a href="#MATLAB" class="headerlink" title="MATLAB"></a>MATLAB</h2><p>好几个学院在高年级都会有用到MATLAB的课程, 但我自己是<a href="https://www.zhihu.com/question/37824202/answer/767114071" target="_blank" rel="noopener">不甚喜欢MATLAB<br>的</a>. 从链接能看出<br>MATLAB更多是工科生验证算法用的, 本身不算什么高明东西. (如果你有精力我推荐<strong>Python</strong>!)</p><p>不过MATLAB用鼠标点一点就能画出很直观的图, 工具集成度非常高这几点还是很不错的. 再怎么说学校说要用能有什么办法😁</p><p>👇 给<strong>非格院同学们</strong>的最新版MATLAB安装和破解教程</p><p>🔗 <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjE1MjMyMw==&amp;mid=2650202359&amp;idx=1&amp;sn=c865e50929b0b845b78065fe6a4a523a&amp;chksm=8ee1401bb996c90d591e18edb0dbf1e531217e6ef22d7b4469f0cbd7912a12dd776c0ac68ec0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Matlab R2019a</a></p><p>而格院学子就很牛逼了, 有🔗 <a href="https://www.gla.ac.uk/myglasgow/it/software/statistics/#/matlab" target="_blank" rel="noopener">格大提供的免费正版MATLAB</a>用! 不过说实话格院学费在那摆着, 并不会让人有占便宜的感觉🤷‍</p><p>💡 MATLAB官网上说每个账号只能给一台设备激活MATLAB, 不过我看我激活了好几台一样都能用.</p><h2 id="系统安装-维修工具"><a href="#系统安装-维修工具" class="headerlink" title="系统安装/维修工具"></a>系统安装/维修工具</h2><h3 id="系统启动盘烧录工具"><a href="#系统启动盘烧录工具" class="headerlink" title="系统启动盘烧录工具"></a>系统启动盘烧录工具</h3><p>🔗 <a href="https://rufus.ie/" target="_blank" rel="noopener">Rufus</a>是功能最强大的系统启动盘烧录工具. 不管是<strong>Windows</strong>还是<strong>Ubuntu</strong>亦或是<strong>Arch</strong>, <strong>Raspbian</strong>… 通通都能烧录! 使用也十分简单, 通常只需选择要烧录到的移动储存设备和要烧录的镜像即可, 其他选项Rufus会自动识别该选什么.</p><p><img src="给电子科大新生们的软件推荐列表/rufus_en.png" alt="[rufus screenshot]"></p><p>💡 我在我的移动硬盘中收集了一些常用的镜像, 并放了一个便携版Rufus安装包在这个文件夹, 这样要烧录系统启动盘时我只需同时插上我的移动硬盘和要烧录系统的U盘就可以进行👍</p><h3 id="PE盘"><a href="#PE盘" class="headerlink" title="PE盘"></a>PE盘</h3><p>什么是PE盘?</p><p>Win PE, Windows预先安装环境 (英语：Microsoft Windows Preinstallation Environment) , 简称Windows PE或PE. 其实就是一个轻量版的Windows系统, 由于体积比较小, 可以直接存储在U盘或者移动硬盘上. 一般电脑维修人员使用其查找故障, 也是装机重要工具之一.</p><p>国内有许多PE工具, 比如<strong>老毛桃</strong>, <strong>大白菜</strong>, <strong>微PE</strong>等</p><p>我推荐🔗 <a href="http://www.uqitong.top/" target="_blank" rel="noopener">优启通</a>. 这个PE盘的工具很齐全, 界面也比较好看, 能兼容更新一些的windows系统.</p><h3 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h3><p>基本上出去修电脑说要恢复数据那修电脑的师傅就会打开🔗 <a href="http://www.diskgenius.cn/download.php" target="_blank" rel="noopener">DiskGenius</a>一通操作, 然后如果还找不回来一般他就告诉你修不了了😁</p><p><img src="给电子科大新生们的软件推荐列表/diskgenius-1567795414357.jpg" alt="DiskGenius"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;也许很多同学经常苦恼于找不到免费, 好用, 美观, 干净的软件. 这里为大家推荐一些十分好用的&lt;br&gt;Windows平台电脑软件及部分安装教程链接. (破解软件的也帮你们找好了哦)&lt;/p&gt;
&lt;p&gt;🌟🌟🌟 &lt;a href=&quot;#一键跳转Sci-Hub&quot;&gt;这里&lt;/a&gt;, &lt;a href=&quot;#Office全家桶&quot;&gt;这里&lt;/a&gt;和&lt;a href=&quot;#MATLAB&quot;&gt;这里&lt;/a&gt;有学校给大家提供的福利的说明 😏&lt;/p&gt;
    
    </summary>
    
      <category term="科普" scheme="https://uestc-msc.github.io/categories/%E7%A7%91%E6%99%AE/"/>
    
    
      <category term="LeoJhonSong" scheme="https://uestc-msc.github.io/tags/LeoJhonSong/"/>
    
  </entry>
  
  <entry>
    <title>灯泡的硬件入门</title>
    <link href="https://uestc-msc.github.io/2019/09/01/Getting-Started-With-Hardware/"/>
    <id>https://uestc-msc.github.io/2019/09/01/Getting-Started-With-Hardware/</id>
    <published>2019-09-01T13:48:00.000Z</published>
    <updated>2021-02-24T10:39:20.923Z</updated>
    
    <content type="html"><![CDATA[<p>因为有的小伙伴还想看硬件方面的入门，所以我就请了格拉斯哥学院电工专业的灯泡给大家写几句。</p><a id="more"></a><h2 id="The-words-in-front"><a href="#The-words-in-front" class="headerlink" title="The words in front"></a>The words in front</h2><p>因为我们学院（格院）硬核专业课都在大三大四，所以我只能分享一点电子方面入门的经验，如果和我一样，之前没有接触过相关内容，可以参考我的分享，如果你之前已经有相关学习经历，可以找群里的宋姐姐，明佬，他们比我厉害得多。</p><h2 id="The-programming-language"><a href="#The-programming-language" class="headerlink" title="The programming language"></a>The programming language</h2><p>硬件入门也要从C语言开始，只需要搞懂最基本的语法，会自己写代码即可。不建议看书，看了也会忘，而且很多内容用不上。不需要学算法。</p><h2 id="The-Single-chip-microcomputer"><a href="#The-Single-chip-microcomputer" class="headerlink" title="The Single chip microcomputer"></a>The Single chip microcomputer</h2><p>对C了解一些了就可以学单片机了，选一款单片机开始入门，我是从arduino入门的，也有的是学51，或者32，我不会51，32所以没法讲。如果是学32的话可以问明佬，好像是从f系列开始学，我们院学的L系列，格院的朋友可以问高总或者我。</p><h3 id="Arduino"><a href="#Arduino" class="headerlink" title="Arduino"></a>Arduino</h3><p>说一下arduino的好处，写起来基本和C一样，各种API包装好了可以直接调，就不用管很多配置的事情了，所以作为入门算是最简单的。成本上，不买原装进口的arduino就比较便宜，可以在淘宝上买套装，配好了一堆传感器，省了很多事情。</p><p>b站上能搜到arduino的入门教程，按着他教的开始就是跑各种传感器的程序，花式点灯什么的，主要了解一下数字和模拟I/O，pwm，串口调试。这些作为入门会玩的很开心的，真心觉得blink的成就感比print一个hello world要大。</p><h2 id="Competition"><a href="#Competition" class="headerlink" title="Competition"></a>Competition</h2><p>然后开学应该会有一个盟升杯的比赛，可以去摸鱼（抱大腿.jpg），可以学到电设比赛是怎么进行的，合作的比赛该怎么分工。</p><h1 id="What’s-more"><a href="#What’s-more" class="headerlink" title="What’s more"></a>What’s more</h1><ol><li>在使用各种电子元件的时候，学习如何会看datasheet，主要看怎么接线，和一些要计算的相关参数</li><li>学会用多用电表和示波器检测电路</li><li>有兴趣还可以学焊板子，建模软件（solidworks cad），仿真软件（不是重点，但比赛可能会用到）</li></ol><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><p>说一下我这一年接触EE的感觉吧。其实EE学的内容是真的杂，真的多，以上列举的都只是嵌入式的一点点入门，关于数字电路，模拟电路，信号系统之类的我都不懂，所以也讲不出来。</p><p>即使是学完了所有专业课，也远远不是EE的目的，EE的research可以各有领域，他会把你学的知识和其他学科进行结合，举例子我们在格拉斯哥大学听的那边做research的人在做的一些东西：比如生物医学里的仪器，激光应用，航天领域，机器人相关的东西，这些都是建立在EE的基础理论和应用上的，所以方向真的很多。</p><p>当然EE也有本身电子相关的方向，但那些我也不了解，你们可以找宋姐姐进行交流，他是我偶像。</p><p>如果你没有搞清楚自己想往哪个方面发展，那就把数理基础学好一点吧，基本学了的早晚会用上的。</p><p>EE的入门非常的玄学，你的电路时常会出一些老师都没法立刻给你答案的问题，需要你用多用电表一个一个排除，用示波器显示出来挨个的分析，这是一个十分耗费精力和兴趣的过程，所以一定要坚持下来啊！</p><p>最后，欢迎加入微软学生俱乐部，这里有唱歌跳舞投资写代码都会的全才天乐姐姐，有可以给你画老婆的富婆部长严叔叔，带你唱歌喝酒蹦迪的社会高总，也有什么都不会但是可以帮你当电灯泡的我，还有各种各样超级nice的学长学姐。大家水群约饭，比赛还可以内部组队，共同努力和进步还是很开心的。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为有的小伙伴还想看硬件方面的入门，所以我就请了格拉斯哥学院电工专业的灯泡给大家写几句。&lt;/p&gt;
    
    </summary>
    
    
      <category term="灯泡" scheme="https://uestc-msc.github.io/tags/%E7%81%AF%E6%B3%A1/"/>
    
  </entry>
  
  <entry>
    <title>Overview of Computer Science</title>
    <link href="https://uestc-msc.github.io/2019/09/01/Overview-of-Computer-Science/"/>
    <id>https://uestc-msc.github.io/2019/09/01/Overview-of-Computer-Science/</id>
    <published>2019-09-01T12:05:00.000Z</published>
    <updated>2021-02-24T10:39:20.935Z</updated>
    
    <content type="html"><![CDATA[<p>有的同学表示对计算机有什么方向比较迷茫。应一些小伙伴要求，我就班门弄斧得给大家稍微介绍和总结一下。</p><a id="more"></a><h2 id="专业计算机科研领域榜单-CSRankings"><a href="#专业计算机科研领域榜单-CSRankings" class="headerlink" title="专业计算机科研领域榜单-CSRankings"></a>专业计算机科研领域榜单-CSRankings</h2><p>首先你需要查看一个计算机学科排名的榜单，叫做<a href="http://csrankings.org/" target="_blank" rel="noopener">CSRankings</a>。这个榜单较为全面的展示了计算机学科的各个方向和排名。</p><p>虽然CSRankings有很多大学的信息并不完全，也因此被诟病，但是CSRankings是一个<strong>专门给大学的计算机学科排名的榜单</strong>。而且CSRankings的考量因素并不包括其他榜单考虑的很多较为难以量化和主观的因素，只考虑从一定角度来说，CSRankings做到了完全靠数据说话，完全客观。</p><p>感兴趣的同学可以看看电子科技大学在计算机领域的综合排名和各个细分方向排名是多少。</p><p>左边就是计算机的各个领域和细分方向了。</p><p><a href="https://github.com/Luosuu/MSC/blob/master/assets/AllAreas.png" target="_blank" rel="noopener"><img src="Overview-of-Computer-Science/AllAreas.png" alt="Areas"></a></p><p>同学们就可以看看哪个方向你看上去比较感兴趣，然后 <strong>Google Scholar(谷歌学术)或者wiki(维基百科)</strong> 搜索一下，最好不要用中文搜索。因为在科研领域中，中文是没有地位的，资料非常不完善并且可能搜出来的东西完全是错的或者是歧义。</p><p>这里稍微歪下，稍微介绍下<strong>Google Scholar</strong>，它是谷歌的一个学术搜索引擎，也是最常用的学术资料搜索引擎，无论是搜索论文还是搜索机构，大学，教授都很方便，电子科技大学现在校园网已经可以不用翻墙就可以访问谷歌学术了。</p><h2 id="计算机工程"><a href="#计算机工程" class="headerlink" title="计算机工程"></a>计算机工程</h2><p>细心的同学会注意到“计算机科学与技术”专业代表了两个方向，即“科学”与“技术”。</p><p>那么我们大概了解了“科学”的方向都有了什么之后，就该了解一下工程界的计算机大概的方向了，也就是“技术”的部分。</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>我们知道构建一个app一般需要一个美观的界面，那么构建界面和UI的就是<strong>前端</strong>。</p><p>前端包括一些Web上的技术，也就是“写网页”。主要需要学习的是一些HTML，CSS，Javascript等等，还需要学习一些Javascript的框架，如React，Vue等。</p><p>关于Web的前端，<a href="https://www.w3school.com.cn/" target="_blank" rel="noopener">w3cschool</a>是个很好的学习资源网站。</p><p>还包括写一些软件的界面，主流的有Qt，Electron，微软家的UWP等等。</p><p>开发移动端的话就要学会一些安卓/iOS的开发技巧了，安卓用Java的比较多，iOS主要是Objective-C和Swift。</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>app只有界面不行，还得有功能，功能就需要有服务器和数据库等等的支持，负责这一部分的统称为<strong>后端</strong>。</p><p>可能要学的就是一些服务器和数据库相关的，服务器的话一般都用的Linux系统，所以一定要学会Linux的基本使用方法。</p><p>数据库类型就很多了，如MySQl，而且学校会开设数据库方面的专业课。</p><p>可能还需要学习一些算法知识（其实算法知识或多或少各方面都需要一些）。</p><p>但其实后端包含的面太广了，这里只是说了下典型。</p><p>算法比赛有ACM-ICPC和CCPC。详情可问小灰晖，同时第0次沙龙也有ACM-ICPC的入门介绍。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>软件写出来直接运行可能会有bug，如果直接发布可能会有严重的后果，负责写程序对软件进行各项检查的就是<strong>测试</strong>。</p><p>下面这个表情包就大概能体现一个软件测试的各项工作了。</p><p><a href="https://github.com/Luosuu/MSC/blob/master/assets/ComTech.jpg" target="_blank" rel="noopener"><img src="Overview-of-Computer-Science/ComTech.jpg" alt="表情包"></a></p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>当然软件也需要专业的安全保障，对软件进行安全测试就是<strong>安全</strong>部门的工作了，传统的安全防护有对软件进行逆向工程（俗称“破解”）方面的保护，最近比较火的是网络安全，阻拦网络上的各种恶意攻击和病毒。</p><p>安全方面的工作涉及的知识覆盖密码学，web安全，二进制安全等等。</p><p>安全方面有知名的竞赛，其中一种比较火的就是CTF比赛。感兴趣的可以去了解一下。同时现在有<strong>全国大学生信息安全竞赛</strong>。</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>当然也会有一些人是负责总体设计的，他们一般被叫做<strong>架构师</strong>。</p><p>架构师需要深厚丰富的软件开发经验，可以说是软件的设计师。</p><h3 id="What’s-more"><a href="#What’s-more" class="headerlink" title="What’s more"></a>What’s more</h3><p>实际上构建一个app可能会很复杂，上面的分法是很粗糙的，不同的软件公司和不同的软件都会有不同的开发团队组成。</p><p>有些比较赶新潮的公司就会有云技术，AI，大数据等部门。</p><p>这上面是说构建一个app，当然也存在构建一些所谓“基础设施”的，比如操作系统。</p><h2 id="UESTC有什么方向？"><a href="#UESTC有什么方向？" class="headerlink" title="UESTC有什么方向？"></a>UESTC有什么方向？</h2><p>遗憾的是，我们学校计算机科学并没能实现所有方向全覆盖，在我个人看来甚至瘸腿。所以了解我们学校有什么方向就很关键了，因为如果你要本科从事科研相关活动的话就只能从他们中选了。</p><p>先来看一下我们学校计算机学院有什么科研团队。</p><p><a href="https://github.com/Luosuu/MSC/blob/master/assets/Groups.png" target="_blank" rel="noopener"><img src="Overview-of-Computer-Science/Groups.png" alt="Groups"></a></p><p>细心的同学会发现<strong>你电计算机学院大部分教授都是做AI的</strong>，如果你在CSRankings上看过电子科大的各项排名，会发现我们学校计算机视觉（Computer Vision）方向排名非常突出，而计算机视觉是人工智能细分方向之一。</p><p>几乎所有科研团队都做CV，也造就了你电CV强校的事实，但也让你电计算机学科建设略显单一。不过我们也存在做云计算，网络安全，传统算法，操作系统等方向的实验室。</p><p>实际上最后最重要的是找哪个老师，这一点无论你是不是想从事计算机方向的科研都是一样的，所以要到<a href="http://faculty.uestc.edu.cn/" target="_blank" rel="noopener">电子科大教师信息平台</a>去了解。</p><p>当然如果你想了解下这个老师最近在做什么方向的研究，或者看看他实力如何，是不是高产，你就可以用到上面我提到的Google Scholar了，直接搜这个老师，他的学术活动就一目了然了。</p><h2 id="计算机学院的专业"><a href="#计算机学院的专业" class="headerlink" title="计算机学院的专业"></a>计算机学院的专业</h2><p>虽然我认为在电子科技大学，你在哪个专业并不特别影响你真正从事的方向，我认为这是电子科大非常好的一个地方，不过还是有很大的必要了解一下我们学校的专业设置和专业课程。</p><p>专业的课程设置要看《电子科技大学学生培养方案》，你们领了书的话应该有，是一大本很厚的书，找到自己学院然后看课程设置就是了。</p><p>如果还没拿到书可以到各个学院官网下载历年的培养计划。虽然每年培养计划都会有一点点改动。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有的同学表示对计算机有什么方向比较迷茫。应一些小伙伴要求，我就班门弄斧得给大家稍微介绍和总结一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Luosuu" scheme="https://uestc-msc.github.io/tags/Luosuu/"/>
    
  </entry>
  
</feed>
